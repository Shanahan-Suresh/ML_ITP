[
  {
    "premises": [
      "(((F ¬ F) ⊕ (F ⊕ H)) ∨ (((¬H) ↔ (¬F)) ¬ (F ∧ (¬F))))",
      "((((¬F) ∨ H) → (F → (¬H))) ↔ (F ∧ ((¬F) ⊕ (¬F))))",
      "((H ¬ (H ∧ (¬H))) ¬ H)"
    ],
    "conclusion": "(((F ¬ F) ⊕ (F ⊕ H)) ∨ (((¬H) ↔ (¬F)) ¬ (F ∧ (¬F))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬X) ∧ (¬M)) → (¬M)) ∨ (((¬X) ↔ (¬M)) ↔ ((¬X) ⊕ (¬M))))",
      "((X ∧ ((¬M) ¬ (¬X))) ∧ (X ∨ ((¬M) → X)))",
      "(((M ∧ (¬M)) ∨ X) ⊕ ((X ∨ (¬M)) ∨ (M ↔ X)))"
    ],
    "conclusion": "((((¬X) ∧ (¬M)) → (¬M)) ∨ (((¬X) ↔ (¬M)) ↔ ((¬X) ⊕ (¬M))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬U) ¬ U) → ((¬U) ↔ (¬U))) ∨ (¬U))",
      "((((¬U) ∧ U) ¬ (U ∨ (¬W))) ∨ (((¬U) ∧ (¬U)) ∨ ((¬W) ⊕ W)))"
    ],
    "conclusion": "((((¬U) ∧ U) ¬ (U ∨ (¬W))) ∨ (((¬U) ∧ (¬U)) ∨ ((¬W) ⊕ W)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "T",
      "(((A ⊕ (¬T)) ⊕ (¬T)) ∨ ((T ¬ (¬T)) ¬ ((¬T) → T)))",
      "(((T ¬ (¬A)) ∧ (T ↔ (¬T))) ∨ A)"
    ],
    "conclusion": "(((T ¬ (¬A)) ∧ (T ↔ (¬T))) ∨ A)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬B) ∧ (B ¬ (¬B))) ⊕ (¬I))",
      "(I ∨ ((¬B) ⊕ (I ∨ B)))"
    ],
    "conclusion": "(I ∨ ((¬B) ⊕ (I ∨ B)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(L ↔ (L ⊕ ((¬K) ∧ K)))",
      "(((K ∧ (¬K)) ∧ (L ¬ (¬K))) ∨ (¬K))"
    ],
    "conclusion": "(((K ∧ (¬K)) ∧ (L ¬ (¬K))) ∨ (¬K))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬P) ∨ ((P ¬ P) ↔ ((¬P) → N)))",
      "(¬P)",
      "((((¬N) ⊕ P) ⊕ (¬N)) ↔ (((¬P) ∨ (¬P)) ∧ (N ¬ (¬N))))"
    ],
    "conclusion": "((¬P) ∨ ((P ¬ P) ↔ ((¬P) → N)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((V ↔ D) ¬ (D ⊕ V)) ∨ ((V → D) ∨ (V ¬ D)))",
      "((V ⊕ ((¬D) ∨ D)) ↔ ((V ⊕ (¬D)) ∨ (V ∧ D)))"
    ],
    "conclusion": "(((V ↔ D) ¬ (D ⊕ V)) ∨ ((V → D) ∨ (V ¬ D)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((W ¬ (W ∧ (¬E))) ∨ (W ∧ ((¬E) ⊕ (¬E))))",
      "E",
      "(((W ∧ (¬W)) ∧ ((¬W) ∧ (¬E))) ¬ ((W ¬ (¬E)) ∧ ((¬W) ∨ (¬W))))"
    ],
    "conclusion": "((W ¬ (W ∧ (¬E))) ∨ (W ∧ ((¬E) ⊕ (¬E))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((I → I) ∧ (Z ¬ Z)) ∨ ((Z ↔ I) ∨ ((¬I) ∧ I)))",
      "((¬I) ↔ ((Z ∨ (¬Z)) ∨ (I → I)))",
      "(((I ↔ I) ¬ (I ¬ Z)) ¬ ((Z ⊕ (¬I)) ∧ (¬Z)))"
    ],
    "conclusion": "(((I → I) ∧ (Z ¬ Z)) ∨ ((Z ↔ I) ∨ ((¬I) ∧ I)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((O ↔ O) ↔ ((¬G) ∨ (¬O))) ¬ ((¬O) ∨ G))",
      "(((¬O) ↔ ((¬O) ∧ O)) ∨ ((¬O) ¬ ((¬O) ↔ O)))"
    ],
    "conclusion": "(((¬O) ↔ ((¬O) ∧ O)) ∨ ((¬O) ¬ ((¬O) ↔ O)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(V ∨ ((V ¬ (¬E)) ↔ ((¬V) ¬ V)))",
      "(((¬V) ¬ ((¬V) ∧ (¬E))) ∧ ((¬E) → (¬E)))"
    ],
    "conclusion": "(V ∨ ((V ¬ (¬E)) ↔ ((¬V) ¬ V)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((W ⊕ W) ∨ (U → U)) ∨ (((¬W) ∨ W) ⊕ (U → (¬W))))",
      "(¬U)",
      "W"
    ],
    "conclusion": "(((W ⊕ W) ∨ (U → U)) ∨ (((¬W) ∨ W) ⊕ (U → (¬W))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((Z ↔ ((¬Z) → C)) ¬ ((C → C) → (C ↔ (¬C))))",
      "(((Z ∨ (¬Z)) ¬ ((¬Z) ∧ C)) ∨ ((Z ↔ (¬C)) ¬ (C ∧ Z)))",
      "(¬Z)"
    ],
    "conclusion": "(((Z ∨ (¬Z)) ¬ ((¬Z) ∧ C)) ∨ ((Z ↔ (¬C)) ¬ (C ∧ Z)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬A) → (Y ¬ (¬A))) ⊕ Y)",
      "(((Y ∨ Y) ⊕ A) ∨ (((¬A) ∧ Y) ↔ (A → (¬A))))",
      "((((¬A) ∨ A) ↔ (A ⊕ (¬A))) ∨ ((Y ∧ (¬A)) ↔ (¬Y)))"
    ],
    "conclusion": "(((Y ∨ Y) ⊕ A) ∨ (((¬A) ∧ Y) ↔ (A → (¬A))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(¬K)",
      "K",
      "((X ∧ ((¬K) ∧ K)) ∨ (((¬K) ∧ (¬K)) ∨ (X ⊕ K)))"
    ],
    "conclusion": "((X ∧ ((¬K) ∧ K)) ∨ (((¬K) ∧ (¬K)) ∨ (X ⊕ K)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬D) ∨ V) ⊕ (¬D)) ∨ (((¬V) ↔ D) ∨ ((¬D) ∧ D)))",
      "((((¬D) ∧ (¬V)) ¬ ((¬D) ∧ D)) ∨ ((V ↔ D) → (D → D)))"
    ],
    "conclusion": "((((¬D) ∨ V) ⊕ (¬D)) ∨ (((¬V) ↔ D) ∨ ((¬D) ∧ D)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((O ∧ O) ↔ ((¬W) ∧ O)) ∨ (O → ((¬O) ¬ W)))",
      "(((W ∨ (¬O)) ¬ ((¬O) ∨ O)) ∨ (W ↔ ((¬W) ∧ (¬O))))"
    ],
    "conclusion": "(((W ∨ (¬O)) ¬ ((¬O) ∨ O)) ∨ (W ↔ ((¬W) ∧ (¬O))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬S) ∨ J) ∨ (J ⊕ (¬S))) ∧ ((S ∧ S) → ((¬S) ¬ J)))",
      "((¬J) ∨ ((J ¬ (¬J)) → ((¬S) ⊕ (¬J))))"
    ],
    "conclusion": "((¬J) ∨ ((J ¬ (¬J)) → ((¬S) ⊕ (¬J))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((I ¬ (¬L)) ¬ ((¬I) ¬ (¬L))) → (¬L))",
      "((((¬I) ∧ L) ∨ (L ¬ (¬I))) ⊕ (L ¬ I))",
      "((((¬I) ⊕ (¬I)) ∧ ((¬I) ¬ L)) ∨ L)"
    ],
    "conclusion": "((((¬I) ⊕ (¬I)) ∧ ((¬I) ¬ L)) ∨ L)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬M) ∨ (((¬O) → (¬M)) → (O ∨ (¬M))))",
      "(¬M)",
      "(M ∧ ((O ¬ (¬M)) ∧ (¬M)))"
    ],
    "conclusion": "((¬M) ∨ (((¬O) → (¬M)) → (O ∨ (¬M))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬Z) ∧ ((¬C) ∧ C)) → ((Z ¬ Z) ¬ ((¬C) ¬ (¬Z))))",
      "(((C → C) → ((¬Z) ⊕ Z)) ¬ Z)",
      "((C ¬ ((¬C) ⊕ Z)) ∨ (Z ⊕ (¬Z)))"
    ],
    "conclusion": "((C ¬ ((¬C) ⊕ Z)) ∨ (Z ⊕ (¬Z)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((R ⊕ (¬L)) ⊕ (¬L)) ⊕ (¬L))",
      "((((¬L) ¬ (¬R)) ↔ ((¬R) ∧ (¬R))) ∧ L)",
      "(R ∨ (((¬L) ∨ (¬R)) ∧ ((¬L) ¬ L)))"
    ],
    "conclusion": "(R ∨ (((¬L) ∨ (¬R)) ∧ ((¬L) ¬ L)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(G ⊕ (((¬Q) ¬ (¬Q)) ↔ ((¬Q) ∨ Q)))",
      "((G ¬ (G ∨ G)) ∨ Q)"
    ],
    "conclusion": "((G ¬ (G ∨ G)) ∨ Q)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((V ¬ V) ¬ ((¬S) ∧ S)) ∨ ((V ∧ S) ¬ ((¬V) → V)))",
      "((¬V) ∨ ((¬V) ∨ ((¬S) → V)))"
    ],
    "conclusion": "(((V ¬ V) ¬ ((¬S) ∧ S)) ∨ ((V ∧ S) ¬ ((¬V) → V)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬W) ¬ W) ∨ (M ∨ (¬M))) ∨ ((W ¬ M) ¬ W))",
      "((((¬W) ¬ W) ∨ (W ¬ (¬M))) ∨ (¬W))"
    ],
    "conclusion": "((((¬W) ¬ W) ∨ (M ∨ (¬M))) ∨ ((W ¬ M) ¬ W))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬P) ¬ (¬R)) ¬ (R ¬ (¬R))) ∨ (P ¬ (P ∨ P)))",
      "((((¬P) ∨ R) ¬ (R ¬ (¬R))) ∨ (((¬P) ¬ R) ¬ (R ¬ (¬R))))"
    ],
    "conclusion": "((((¬P) ∨ R) ¬ (R ¬ (¬R))) ∨ (((¬P) ¬ R) ¬ (R ¬ (¬R))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((O ∨ B) ∨ ((¬O) ¬ B)) ∨ (((¬B) ¬ O) ¬ (B ∨ B)))",
      "O",
      "B"
    ],
    "conclusion": "(((O ∨ B) ∨ ((¬O) ¬ B)) ∨ (((¬B) ¬ O) ¬ (B ∨ B)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬P) ∨ ((P ∨ (¬P)) ¬ ((¬P) ∨ (¬W))))",
      "(((¬P) ¬ W) ∨ ((W ¬ W) ∨ (W ∨ (¬W))))",
      "(((P ∨ (¬W)) ∨ ((¬P) ∨ P)) ∨ ((W ∨ P) ¬ ((¬W) ¬ W)))"
    ],
    "conclusion": "((¬P) ∨ ((P ∨ (¬P)) ¬ ((¬P) ∨ (¬W))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((V ∨ V) ∨ ((¬V) ¬ (¬L))) ¬ V)",
      "((((¬V) ∨ (¬V)) ∨ (L ¬ (¬V))) ∨ (((¬V) ∨ V) ∨ (V ¬ (¬V))))",
      "(((¬V) ∨ ((¬V) ∨ (¬V))) ¬ (((¬L) ∨ L) ∨ L))"
    ],
    "conclusion": "((((¬V) ∨ (¬V)) ∨ (L ¬ (¬V))) ∨ (((¬V) ∨ V) ∨ (V ¬ (¬V))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((L ¬ (¬L)) ¬ ((¬L) ∨ (¬P))) ∨ (((¬L) ∨ P) ¬ (P ∨ (¬P))))",
      "((((¬L) ¬ P) ∨ ((¬L) ∨ L)) ∨ (((¬L) ¬ L) ∨ P))",
      "((((¬L) ¬ L) ∨ (L ∨ L)) ∨ L)"
    ],
    "conclusion": "((((¬L) ¬ P) ∨ ((¬L) ∨ L)) ∨ (((¬L) ¬ L) ∨ P))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((S ¬ S) ¬ ((¬S) ¬ (¬E))) ∨ ((E ∨ (¬S)) ¬ ((¬E) ∨ (¬E))))",
      "((S ¬ (S ¬ (¬S))) ¬ ((¬E) ∨ (S ∨ (¬S))))"
    ],
    "conclusion": "(((S ¬ S) ¬ ((¬S) ¬ (¬E))) ∨ ((E ∨ (¬S)) ¬ ((¬E) ∨ (¬E))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "Q",
      "((((¬Q) ∨ D) ∨ D) ∨ ((Q ¬ D) ∨ (D ¬ Q)))",
      "((¬D) ∨ (((¬Q) ¬ (¬D)) ∨ ((¬Q) ¬ D)))"
    ],
    "conclusion": "((¬D) ∨ (((¬Q) ¬ (¬D)) ∨ ((¬Q) ¬ D)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((C ∨ (¬C)) ∨ (V ¬ (¬V))) ∨ (¬V))",
      "((((¬C) ¬ V) ¬ ((¬C) ∨ C)) ¬ ((V ∨ C) ∨ C))"
    ],
    "conclusion": "(((C ∨ (¬C)) ∨ (V ¬ (¬V))) ∨ (¬V))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬T) ∨ T) ∨ (B ∨ T)) ∨ ((B ¬ (¬B)) ¬ ((¬T) ∨ T)))",
      "(((¬T) ∨ (T ∨ (¬T))) ∨ ((B ¬ B) ¬ (B ∨ (¬T))))",
      "((((¬B) ∨ (¬B)) ∨ (B ¬ (¬B))) ¬ ((T ∨ T) ¬ ((¬T) ∨ T)))"
    ],
    "conclusion": "((((¬T) ∨ T) ∨ (B ∨ T)) ∨ ((B ¬ (¬B)) ¬ ((¬T) ∨ T)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "M",
      "M",
      "(((Q ¬ M) ¬ ((¬M) ¬ M)) ∨ Q)"
    ],
    "conclusion": "(((Q ¬ M) ¬ ((¬M) ¬ M)) ∨ Q)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬L) ∨ (¬R)) ∨ (R ∨ (¬L))) ∨ (L ∨ (L ∨ L)))",
      "(((L ∨ (¬L)) ¬ ((¬R) ¬ (¬R))) ∨ (((¬L) ∨ (¬R)) ∨ (R ∨ (¬L))))"
    ],
    "conclusion": "(((L ∨ (¬L)) ¬ ((¬R) ¬ (¬R))) ∨ (((¬L) ∨ (¬R)) ∨ (R ∨ (¬L))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "L",
      "(((L ¬ (¬L)) ∨ ((¬N) ¬ (¬L))) ∨ (((¬L) ∨ (¬N)) ∨ (L ¬ (¬L))))",
      "((((¬L) ¬ L) ∨ (L ¬ N)) ¬ (((¬N) ∨ L) ∨ (N ∨ (¬L))))"
    ],
    "conclusion": "(((L ¬ (¬L)) ∨ ((¬N) ¬ (¬L))) ∨ (((¬L) ∨ (¬N)) ∨ (L ¬ (¬L))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(Z ∨ (Z ∨ ((¬Z) ¬ L)))",
      "((((¬L) ¬ L) ∨ Z) ∨ ((L ¬ (¬L)) ∨ ((¬Z) ∨ (¬L))))",
      "((((¬L) ¬ (¬L)) ¬ (Z ¬ (¬Z))) ¬ (((¬L) ∨ L) ¬ ((¬Z) ¬ Z)))"
    ],
    "conclusion": "(Z ∨ (Z ∨ ((¬Z) ¬ L)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬F) ¬ (¬O)) ∨ (((¬O) ∨ O) ¬ ((¬F) ¬ O)))",
      "((((¬F) ¬ (¬O)) ¬ (O ¬ O)) ¬ (¬F))"
    ],
    "conclusion": "(((¬F) ¬ (¬O)) ∨ (((¬O) ∨ O) ¬ ((¬F) ¬ O)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬K) ¬ (A ∨ (¬K))) ¬ (((¬A) ¬ K) ∨ (K ¬ A)))",
      "(((A ∨ (¬A)) ∨ (A ∨ K)) ∨ ((¬K) ∨ ((¬A) ¬ (¬A))))"
    ],
    "conclusion": "(((A ∨ (¬A)) ∨ (A ∨ K)) ∨ ((¬K) ∨ ((¬A) ¬ (¬A))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((L ∨ L) ¬ (D ¬ (¬L))) ∨ (D ¬ ((¬L) ¬ L)))",
      "((((¬D) ¬ (¬L)) ∨ ((¬L) ∨ D)) ∨ D)",
      "((((¬L) ¬ D) ¬ ((¬L) ∨ L)) ∨ (((¬L) ¬ (¬L)) ∨ (¬D)))"
    ],
    "conclusion": "((((¬L) ¬ D) ¬ ((¬L) ∨ L)) ∨ (((¬L) ¬ (¬L)) ∨ (¬D)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((Z ∨ (Z ¬ Z)) ∨ (((¬Z) ¬ C) ¬ ((¬C) ¬ (¬Z))))",
      "((((¬Z) ¬ (¬Z)) ¬ ((¬C) ¬ (¬Z))) ¬ ((Z ¬ (¬C)) ∨ (Z ∨ C)))",
      "(((Z ¬ (¬Z)) ¬ (Z ¬ (¬C))) ∨ ((Z ¬ Z) ∨ (C ∨ (¬Z))))"
    ],
    "conclusion": "((Z ∨ (Z ¬ Z)) ∨ (((¬Z) ¬ C) ¬ ((¬C) ¬ (¬Z))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬S) ∨ ((¬K) ¬ ((¬K) ∨ (¬S))))",
      "(K ∨ (((¬K) ∨ K) ¬ (S ∨ S)))"
    ],
    "conclusion": "((¬S) ∨ ((¬K) ¬ ((¬K) ∨ (¬S))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((F ¬ (¬F)) ¬ (T ¬ (¬F))) ∨ (((¬T) ∨ (¬T)) ∨ (F ¬ T)))",
      "((¬F) ∨ ((F ¬ (¬T)) ¬ F))"
    ],
    "conclusion": "(((F ¬ (¬F)) ¬ (T ¬ (¬F))) ∨ (((¬T) ∨ (¬T)) ∨ (F ¬ T)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((B ∨ F) ¬ (¬B)) ¬ (((¬F) ¬ (¬F)) ∨ ((¬F) ∨ (¬F))))",
      "((((¬B) ∨ B) ¬ F) ∨ (((¬F) ∨ B) ∨ (B ¬ (¬B))))"
    ],
    "conclusion": "((((¬B) ∨ B) ¬ F) ∨ (((¬F) ∨ B) ∨ (B ¬ (¬B))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "((((¬Z) ¬ K) ∨ ((¬K) ¬ (¬K))) ∨ (((¬Z) ¬ (¬Z)) ¬ ((¬K) ¬ K)))",
      "(((K ¬ (¬K)) ¬ ((¬Z) ¬ (¬Z))) ∨ ((K ¬ (¬K)) ∨ (K ∨ (¬Z))))"
    ],
    "conclusion": "((((¬Z) ¬ K) ∨ ((¬K) ¬ (¬K))) ∨ (((¬Z) ¬ (¬Z)) ¬ ((¬K) ¬ K)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((H ¬ (¬G)) ∨ G) ∨ G)",
      "((((¬G) ¬ (¬H)) ∨ ((¬H) ∨ H)) ∨ ((¬H) ∨ (G ¬ H)))",
      "(¬H)"
    ],
    "conclusion": "(((H ¬ (¬G)) ∨ G) ∨ G)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((K ¬ (¬K)) ¬ ((¬B) ∨ (¬B))) ∨ (¬K))",
      "(B ∨ (((¬B) ¬ B) ∨ (B ¬ B)))",
      "(((K ¬ B) ∨ (¬B)) ¬ ((K ¬ (¬B)) ¬ (B ∨ (¬K))))"
    ],
    "conclusion": "(B ∨ (((¬B) ¬ B) ∨ (B ¬ B)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((O ∨ O) ∨ Z) ¬ ((¬O) ¬ (Z ¬ Z)))",
      "(((O ∨ O) ¬ ((¬Z) ¬ O)) ∨ (¬Z))"
    ],
    "conclusion": "(((O ∨ O) ¬ ((¬Z) ¬ O)) ∨ (¬Z))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "((L ∨ ((¬I) ∨ L)) ∨ (((¬I) ∨ I) ∨ (¬L)))"
    ],
    "conclusion": "((L ∨ ((¬I) ∨ L)) ∨ (((¬I) ∨ I) ∨ (¬L)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "M",
      "(((M ∨ (¬E)) ∨ ((¬M) ∨ (¬E))) ∨ (((¬E) ∨ M) ∨ ((¬E) ∨ M)))",
      "((M ∨ ((¬M) ∨ (¬M))) ∨ ((¬M) ∨ (M ∨ (¬E))))"
    ],
    "conclusion": "(((M ∨ (¬E)) ∨ ((¬M) ∨ (¬E))) ∨ (((¬E) ∨ M) ∨ ((¬E) ∨ M)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(C ∨ ((V ∨ (¬C)) ∨ ((¬V) ∨ V)))",
      "(V ∨ C)",
      "(((¬V) ∨ ((¬V) ∨ (¬C))) ∨ V)"
    ],
    "conclusion": "(V ∨ C)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬Q) ∨ C) ∨ (Q ∨ (¬Q))) ∨ ((Q ∨ (¬Q)) ∨ ((¬C) ∨ (¬C))))",
      "((Q ∨ ((¬Q) ∨ (¬C))) ∨ (¬Q))",
      "((((¬C) ∨ (¬Q)) ∨ C) ∨ ((Q ∨ C) ∨ ((¬C) ∨ C)))"
    ],
    "conclusion": "((((¬C) ∨ (¬Q)) ∨ C) ∨ ((Q ∨ C) ∨ ((¬C) ∨ C)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((R ∨ (¬C)) ∨ ((¬R) ∨ R)) ∨ ((R ∨ (¬R)) ∨ C))",
      "((((¬R) ∨ (¬C)) ∨ ((¬R) ∨ (¬R))) ∨ (C ∨ (R ∨ R)))",
      "((((¬R) ∨ R) ∨ (¬R)) ∨ (¬C))"
    ],
    "conclusion": "((((¬R) ∨ R) ∨ (¬R)) ∨ (¬C))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "B",
      "(((¬J) ∨ ((¬B) ∨ B)) ∨ (((¬B) ∨ (¬J)) ∨ (J ∨ (¬B))))"
    ],
    "conclusion": "(((¬J) ∨ ((¬B) ∨ B)) ∨ (((¬B) ∨ (¬J)) ∨ (J ∨ (¬B))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬U) ∨ N) ∨ ((¬U) ∨ (¬U))) ∨ (((¬U) ∨ N) ∨ ((¬U) ∨ U)))",
      "((U ∨ N) ∨ ((N ∨ U) ∨ U))"
    ],
    "conclusion": "((U ∨ N) ∨ ((N ∨ U) ∨ U))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬V) ∨ (¬N)) ∨ (V ∨ N)) ∨ (((¬V) ∨ V) ∨ (N ∨ (¬V))))",
      "N",
      "(((V ∨ (¬N)) ∨ (N ∨ (¬N))) ∨ (¬V))"
    ],
    "conclusion": "((((¬V) ∨ (¬N)) ∨ (V ∨ N)) ∨ (((¬V) ∨ V) ∨ (N ∨ (¬V))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬X) ∨ X) ∨ ((¬X) ∨ (¬Q))) ∨ ((Q ∨ X) ∨ ((¬X) ∨ (¬X))))",
      "((((¬Q) ∨ (¬Q)) ∨ ((¬Q) ∨ (¬Q))) ∨ (((¬X) ∨ (¬X)) ∨ (X ∨ (¬X))))",
      "(((Q ∨ Q) ∨ (Q ∨ Q)) ∨ ((X ∨ (¬Q)) ∨ ((¬X) ∨ X)))"
    ],
    "conclusion": "((((¬X) ∨ X) ∨ ((¬X) ∨ (¬Q))) ∨ ((Q ∨ X) ∨ ((¬X) ∨ (¬X))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((A ∨ (A ∨ A)) ∨ ((A ∨ (¬K)) ∨ ((¬A) ∨ (¬K))))",
      "A",
      "((((¬K) ∨ (¬K)) ∨ (A ∨ (¬K))) ∨ (¬A))"
    ],
    "conclusion": "((A ∨ (A ∨ A)) ∨ ((A ∨ (¬K)) ∨ ((¬A) ∨ (¬K))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬Q) ∨ Q) ∨ (Q ∨ V)) ∨ ((V ∨ Q) ∨ ((¬Q) ∨ Q)))",
      "(¬V)"
    ],
    "conclusion": "((((¬Q) ∨ Q) ∨ (Q ∨ V)) ∨ ((V ∨ Q) ∨ ((¬Q) ∨ Q)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(R ∨ ((Z ∨ (¬Z)) ∨ Z))",
      "(((¬R) ∨ R) ∨ R)",
      "((¬Z) ∨ (((¬Z) ∨ (¬Z)) ∨ R))"
    ],
    "conclusion": "(R ∨ ((Z ∨ (¬Z)) ∨ Z))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬M) ∨ (((¬M) ∨ (¬M)) ∨ ((¬F) ∨ M)))",
      "(((F ∨ (¬M)) ∨ (F ∨ M)) ∨ ((F ∨ F) ∨ (M ∨ F)))",
      "((M ∨ (M ∨ (¬M))) ∨ (((¬F) ∨ (¬F)) ∨ (F ∨ M)))"
    ],
    "conclusion": "(((F ∨ (¬M)) ∨ (F ∨ M)) ∨ ((F ∨ F) ∨ (M ∨ F)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((C ∨ K) ∨ (¬K)) ∨ ((K ∨ C) ∨ ((¬C) ∨ (¬K))))",
      "(((K ∨ (¬K)) ∨ (K ∨ (¬K))) ∨ K)",
      "((((¬K) ∨ C) ∨ (C ∨ K)) ∨ (((¬C) ∨ (¬K)) ∨ ((¬C) ∨ K)))"
    ],
    "conclusion": "(((K ∨ (¬K)) ∨ (K ∨ (¬K))) ∨ K)",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "J",
      "(((Q ∨ J) ∨ (Q ∨ (¬Q))) ∨ ((J ∨ J) ∨ ((¬Q) ∨ (¬J))))",
      "(¬Q)"
    ],
    "conclusion": "(((Q ∨ J) ∨ (Q ∨ (¬Q))) ∨ ((J ∨ J) ∨ ((¬Q) ∨ (¬J))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((C ∨ C) ∨ (J ∨ (¬J))) ∨ ((C ∨ (¬J)) ∨ ((¬J) ∨ (¬C))))",
      "((((¬J) ∨ C) ∨ ((¬J) ∨ C)) ∨ ((C ∨ (¬C)) ∨ ((¬C) ∨ (¬C))))",
      "(((C ∨ J) ∨ ((¬J) ∨ C)) ∨ (J ∨ J))"
    ],
    "conclusion": "(((C ∨ C) ∨ (J ∨ (¬J))) ∨ ((C ∨ (¬J)) ∨ ((¬J) ∨ (¬C))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "M",
      "(((M ∨ (¬X)) ∨ (¬X)) ∨ (((¬X) ∨ (¬M)) ∨ ((¬M) ∨ (¬M))))"
    ],
    "conclusion": "(((M ∨ (¬X)) ∨ (¬X)) ∨ (((¬X) ∨ (¬M)) ∨ ((¬M) ∨ (¬M))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((W ∨ (¬M)) ∨ (¬W)) ∨ (((¬M) ∨ M) ∨ (W ∨ (¬W))))",
      "(((¬M) ∨ ((¬W) ∨ (¬M))) ∨ ((¬M) ∨ ((¬M) ∨ W)))"
    ],
    "conclusion": "(((¬M) ∨ ((¬W) ∨ (¬M))) ∨ ((¬M) ∨ ((¬M) ∨ W)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((M ∨ V) ∨ (V ∨ (¬M))) ∨ (((¬V) ∨ (¬V)) ∨ (V ∨ M)))",
      "((((¬V) ∨ (¬V)) ∨ (¬V)) ∨ (V ∨ ((¬M) ∨ M)))"
    ],
    "conclusion": "((((¬V) ∨ (¬V)) ∨ (¬V)) ∨ (V ∨ ((¬M) ∨ M)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬T) ∨ R) ∨ ((¬T) ∨ (¬T))) ∨ (((¬T) ∨ (¬T)) ∨ ((¬R) ∨ T)))",
      "(((T ∨ R) ∨ ((¬R) ∨ (¬T))) ∨ ((T ∨ (¬R)) ∨ ((¬R) ∨ T)))"
    ],
    "conclusion": "((((¬T) ∨ R) ∨ ((¬T) ∨ (¬T))) ∨ (((¬T) ∨ (¬T)) ∨ ((¬R) ∨ T)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬R) ∨ R) ∨ ((¬B) ∨ (¬R))) ∨ R)",
      "(B ∨ (¬B))",
      "(B ∨ (R ∨ ((¬B) ∨ R)))"
    ],
    "conclusion": "(B ∨ (R ∨ ((¬B) ∨ R)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬O) ∨ E) ∨ (¬O)) ∨ (E ∨ (E ∨ (¬E))))",
      "((((¬O) ∨ (¬E)) ∨ ((¬O) ∨ O)) ∨ ((E ∨ (¬O)) ∨ (O ∨ (¬E))))"
    ],
    "conclusion": "((((¬O) ∨ E) ∨ (¬O)) ∨ (E ∨ (E ∨ (¬E))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "((¬Y) ∨ ((Y ∨ Y) ∨ (O ∨ Y)))",
      "((¬Y) ∨ (O ∨ ((¬O) ∨ Y)))"
    ],
    "conclusion": "((¬Y) ∨ (O ∨ ((¬O) ∨ Y)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((Z ∨ Z) ∨ ((¬M) ∨ (¬Z))) ∨ ((Z ∨ (¬Z)) ∨ (¬Z)))",
      "(((Z ∨ (¬Z)) ∨ (¬Z)) ∨ (((¬Z) ∨ (¬Z)) ∨ (Z ∨ (¬Z))))",
      "M"
    ],
    "conclusion": "(((Z ∨ (¬Z)) ∨ (¬Z)) ∨ (((¬Z) ∨ (¬Z)) ∨ (Z ∨ (¬Z))))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(((H ∨ (¬H)) ∨ (H ∨ H)) ∨ ((¬H) ∨ (H ∨ H)))",
      "M",
      "((((¬M) ∨ M) ∨ ((¬H) ∨ (¬H))) ∨ ((M ∨ (¬M)) ∨ (¬H)))"
    ],
    "conclusion": "((((¬M) ∨ M) ∨ ((¬H) ∨ (¬H))) ∨ ((M ∨ (¬M)) ∨ (¬H)))",
    "applied_rules": [
      "addition"
    ]
  },
  {
    "premises": [
      "(T ∨ ((M ∨ S) ∨ ((¬T) ¬ M)))",
      "(S ¬ T)",
      "(¬T)"
    ],
    "conclusion": "(T ∨ ((M ∨ S) ∨ ((¬T) ¬ M)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(X ∨ ((A ¬ (¬O)) ∨ (O ∨ X)))",
      "((¬X) ∨ (¬O))",
      "(¬X)"
    ],
    "conclusion": "((A ¬ (¬O)) ∨ (O ∨ X))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬K)",
      "(K ∨ ((A ∨ A) ∨ ((¬F) ¬ (¬F))))",
      "(((F ¬ (¬F)) ∨ ((¬F) ∨ (¬A))) ∨ (¬K))"
    ],
    "conclusion": "(K ∨ ((A ∨ A) ∨ ((¬F) ¬ (¬F))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(B ∨ ((B ¬ (¬F)) ¬ ((¬P) ∨ F)))",
      "(¬B)"
    ],
    "conclusion": "((B ¬ (¬F)) ¬ ((¬P) ∨ F))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "(((E ∨ (¬A)) ¬ ((¬A) ∨ P)) ¬ (((¬P) ∨ (¬A)) ¬ (A ¬ A)))",
      "(A ∨ (((¬E) ¬ (¬P)) ¬ ((¬A) ¬ (¬A))))"
    ],
    "conclusion": "(A ∨ (((¬E) ¬ (¬P)) ¬ ((¬A) ¬ (¬A))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬G) ¬ (¬R)) ∨ R) ∨ (((¬G) ¬ (¬G)) ¬ G))",
      "((((¬G) ¬ (¬D)) ¬ (¬R)) ∨ G)",
      "(¬G)"
    ],
    "conclusion": "((((¬G) ¬ (¬D)) ¬ (¬R)) ∨ G)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "(B ∨ (¬V))"
    ],
    "conclusion": "(B ∨ (¬V))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "(X ∨ (((¬Y) ∨ H) ¬ X))",
      "(((¬Y) ¬ (¬Y)) ¬ (((¬Y) ∨ (¬Y)) ∨ ((¬Y) ∨ H)))"
    ],
    "conclusion": "(((¬Y) ∨ H) ¬ X)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬J) ¬ J) ∨ ((¬S) ∨ O)) ∨ J)",
      "(((O ∨ J) ¬ ((¬J) ∨ O)) ∨ (¬O))",
      "(¬J)"
    ],
    "conclusion": "((((¬J) ¬ J) ∨ ((¬S) ∨ O)) ∨ J)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "((((¬J) ¬ (¬J)) ¬ ((¬W) ¬ (¬W))) ∨ W)",
      "(J ∨ J)"
    ],
    "conclusion": "(((¬J) ¬ (¬J)) ¬ ((¬W) ¬ (¬W)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(H ∨ ((W ¬ H) ¬ (G ¬ (¬G))))",
      "(¬H)",
      "(¬W)"
    ],
    "conclusion": "(H ∨ ((W ¬ H) ¬ (G ¬ (¬G))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(L ∨ ((L ¬ (¬L)) ∨ (V ∨ (¬V))))",
      "(¬L)"
    ],
    "conclusion": "((L ¬ (¬L)) ∨ (V ∨ (¬V)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(J ∨ (((¬D) ¬ J) ¬ ((¬D) ∨ (¬B))))",
      "(¬J)"
    ],
    "conclusion": "(J ∨ (((¬D) ¬ J) ¬ ((¬D) ∨ (¬B))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(E ∨ ((M ¬ (¬G)) ¬ (M ¬ (¬M))))",
      "(G ∨ ((¬E) ∨ ((¬M) ∨ (¬M))))",
      "(¬G)"
    ],
    "conclusion": "((¬E) ∨ ((¬M) ∨ (¬M)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(J ∨ ((L ¬ J) ∨ M))",
      "(¬J)"
    ],
    "conclusion": "(J ∨ ((L ¬ J) ∨ M))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "((¬X) ∨ I)"
    ],
    "conclusion": "((¬X) ∨ I)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬I) ∨ A)",
      "(¬A)"
    ],
    "conclusion": "((¬I) ∨ A)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "(((G ∨ G) ∨ ((¬G) ∨ J)) ¬ (¬X))",
      "(((G ¬ (¬X)) ∨ ((¬X) ∨ J)) ∨ X)"
    ],
    "conclusion": "((G ¬ (¬X)) ∨ ((¬X) ∨ J))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(N ∨ (((¬C) ∨ (¬N)) ¬ (Z ¬ C)))",
      "(¬N)",
      "(((N ¬ Z) ∨ ((¬C) ∨ C)) ∨ (¬Z))"
    ],
    "conclusion": "(((N ¬ Z) ∨ ((¬C) ∨ C)) ∨ (¬Z))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬V)",
      "(((G ∨ V) ∨ (G ¬ (¬V))) ¬ (¬F))",
      "(V ∨ G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "(((D ¬ D) ¬ (¬D)) ∨ D)",
      "((((¬D) ¬ D) ¬ A) ¬ (((¬D) ∨ (¬D)) ¬ ((¬A) ∨ T)))"
    ],
    "conclusion": "(((D ¬ D) ¬ (¬D)) ∨ D)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "((G ¬ ((¬O) ¬ G)) ¬ ((G ¬ (¬D)) ¬ ((¬G) ¬ (¬D))))",
      "(O ∨ (¬D))"
    ],
    "conclusion": "(¬D)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬C) ∨ (((¬C) ¬ C) ¬ ((¬S) ∨ (¬S))))",
      "(¬F)",
      "(F ∨ (((¬S) ∨ S) ¬ (S ∨ S)))"
    ],
    "conclusion": "(F ∨ (((¬S) ∨ S) ¬ (S ∨ S)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "(F ∨ ((V ∨ F) ¬ (¬F)))"
    ],
    "conclusion": "((V ∨ F) ¬ (¬F))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬Y)",
      "(((Y ¬ (¬T)) ∨ (T ¬ X)) ∨ (((¬T) ∨ (¬Y)) ∨ (Y ∨ Y)))",
      "(Y ∨ (((¬Y) ∨ Y) ¬ ((¬T) ¬ X)))"
    ],
    "conclusion": "(((¬Y) ∨ Y) ¬ ((¬T) ¬ X))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬C) ∨ C)",
      "(¬C)"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "(B ∨ ((T ¬ (¬C)) ¬ (T ∨ (¬T))))",
      "((((¬B) ¬ (¬T)) ∨ ((¬C) ∨ B)) ∨ ((T ∨ (¬C)) ∨ (B ¬ B)))"
    ],
    "conclusion": "((((¬B) ¬ (¬T)) ∨ ((¬C) ∨ B)) ∨ ((T ∨ (¬C)) ∨ (B ¬ B)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬C) ∨ (¬U)) ∨ (C ∨ U)) ∨ (((¬C) ∨ (¬U)) ¬ (¬U)))",
      "(¬U)",
      "(U ∨ ((Z ¬ (¬U)) ∨ (U ∨ (¬Z))))"
    ],
    "conclusion": "((Z ¬ (¬U)) ∨ (U ∨ (¬Z)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬L) ∨ ((O ∨ (¬I)) ¬ (¬O)))",
      "(((I ¬ (¬O)) ∨ ((¬O) ∨ (¬L))) ∨ O)",
      "(¬O)"
    ],
    "conclusion": "((¬L) ∨ ((O ∨ (¬I)) ¬ (¬O)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(I ¬ (((¬B) ¬ (¬I)) ∨ (¬I)))",
      "(¬I)",
      "(I ∨ (M ¬ ((¬I) ¬ (¬I))))"
    ],
    "conclusion": "(I ∨ (M ¬ ((¬I) ¬ (¬I))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "(((S ¬ (¬N)) ∨ J) ∨ (N ∨ ((¬N) ¬ (¬S))))",
      "(S ∨ S)"
    ],
    "conclusion": "(S ∨ S)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(X ∨ ((¬P) ∨ ((¬P) ∨ (¬P))))",
      "(((P ¬ S) ∨ (¬X)) ¬ ((P ¬ (¬S)) ¬ ((¬S) ¬ (¬S))))",
      "(¬X)"
    ],
    "conclusion": "(X ∨ ((¬P) ∨ ((¬P) ∨ (¬P))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((I ¬ D) ∨ D)",
      "((¬R) ∨ ((D ∨ R) ∨ ((¬I) ∨ I)))"
    ],
    "conclusion": "((¬R) ∨ ((D ∨ R) ∨ ((¬I) ∨ I)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "E",
      "(¬Y)",
      "(((E ¬ (¬A)) ∨ (E ∨ A)) ∨ Y)"
    ],
    "conclusion": "(((E ¬ (¬A)) ∨ (E ∨ A)) ∨ Y)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬V)",
      "(((¬F) ¬ ((¬O) ¬ (¬V))) ¬ (((¬F) ¬ (¬O)) ¬ (V ∨ (¬V))))",
      "(((¬O) ¬ (V ¬ V)) ∨ V)"
    ],
    "conclusion": "(((¬O) ¬ (V ¬ V)) ∨ V)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((I ¬ F) ∨ ((¬F) ∨ F)) ∨ (¬G))",
      "(¬F)",
      "(F ∨ ((¬G) ∨ ((¬F) ∨ G)))"
    ],
    "conclusion": "(((I ¬ F) ∨ ((¬F) ∨ F)) ∨ (¬G))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬Y)",
      "((¬G) ∨ Y)",
      "(((Y ∨ Q) ¬ (Y ¬ (¬Q))) ¬ ((Y ¬ (¬Q)) ¬ (G ∨ (¬G))))"
    ],
    "conclusion": "((¬G) ∨ Y)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(O ∨ O)",
      "(((¬H) ¬ ((¬Q) ∨ Q)) ∨ (((¬H) ¬ H) ∨ ((¬O) ¬ (¬H))))"
    ],
    "conclusion": "O",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "(((¬V) ¬ (E ∨ E)) ∨ (((¬E) ¬ T) ¬ (T ∨ T)))",
      "(T ∨ ((T ∨ E) ¬ (V ¬ (¬V))))"
    ],
    "conclusion": "(((¬V) ¬ (E ∨ E)) ∨ (((¬E) ¬ T) ¬ (T ∨ T)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(O ∨ (((¬O) ∨ (¬O)) ¬ ((¬Q) ¬ (¬Q))))",
      "((((¬O) ¬ I) ∨ ((¬I) ∨ (¬I))) ∨ (((¬O) ¬ (¬I)) ¬ ((¬O) ∨ (¬Q))))",
      "(¬O)"
    ],
    "conclusion": "(O ∨ (((¬O) ∨ (¬O)) ¬ ((¬Q) ¬ (¬Q))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(J ∨ (¬J))",
      "(¬J)"
    ],
    "conclusion": "(J ∨ (¬J))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(H ∨ ((H ∨ (¬U)) ∨ ((¬U) ¬ U)))",
      "(¬H)"
    ],
    "conclusion": "(H ∨ ((H ∨ (¬U)) ∨ ((¬U) ¬ U)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(I ∨ (((¬D) ∨ (¬I)) ¬ ((¬D) ¬ I)))",
      "(¬I)"
    ],
    "conclusion": "(I ∨ (((¬D) ∨ (¬I)) ¬ ((¬D) ¬ I)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬K) ¬ ((C ¬ (¬C)) ∨ (K ¬ K)))",
      "(¬C)",
      "(C ∨ (¬C))"
    ],
    "conclusion": "(C ∨ (¬C))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(R ∨ (((¬M) ¬ M) ∨ V))",
      "(¬R)",
      "((((¬R) ¬ (¬R)) ¬ (M ∨ (¬V))) ¬ (((¬M) ¬ (¬V)) ¬ (¬M)))"
    ],
    "conclusion": "(R ∨ (((¬M) ¬ M) ∨ V))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬U) ¬ (U ¬ (¬E))) ∨ J)",
      "(¬U)",
      "(((J ¬ J) ¬ ((¬E) ¬ J)) ∨ U)"
    ],
    "conclusion": "((J ¬ J) ¬ ((¬E) ¬ J))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((V ∨ V) ∨ (¬V)) ∨ I)",
      "(¬I)",
      "(((¬I) ∨ ((¬C) ¬ (¬C))) ∨ (((¬V) ∨ (¬V)) ∨ ((¬V) ∨ (¬V))))"
    ],
    "conclusion": "(((¬I) ∨ ((¬C) ¬ (¬C))) ∨ (((¬V) ∨ (¬V)) ∨ ((¬V) ∨ (¬V))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Q ∨ F)",
      "(¬Q)"
    ],
    "conclusion": "F",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Q ∨ ((Q ¬ O) ∨ (K ¬ K)))",
      "(¬Q)",
      "(((K ∨ (¬K)) ∨ ((¬K) ¬ (¬Q))) ∨ ((O ∨ (¬Q)) ¬ Q))"
    ],
    "conclusion": "(Q ∨ ((Q ¬ O) ∨ (K ¬ K)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬J) ∨ B) ∨ ((¬B) ¬ J)) ∨ ((B ∨ B) ∨ ((¬J) ¬ (¬J))))",
      "(¬J)",
      "(J ∨ ((¬Q) ∨ ((¬J) ¬ J)))"
    ],
    "conclusion": "(J ∨ ((¬Q) ∨ ((¬J) ¬ J)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((Z ¬ (¬D)) ¬ Z) ¬ ((D ∨ (¬D)) ∨ (Z ∨ Z)))",
      "(D ∨ ((D ¬ (¬Z)) ¬ ((¬D) ¬ (¬D))))",
      "(¬D)"
    ],
    "conclusion": "(D ∨ ((D ¬ (¬Z)) ¬ ((¬D) ¬ (¬D))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(I ∨ ((H ∨ H) ∨ ((¬I) ∨ H)))",
      "(¬I)"
    ],
    "conclusion": "(I ∨ ((H ∨ H) ∨ ((¬I) ∨ H)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((U ¬ (U ∨ U)) ∨ (((¬U) ∨ (¬W)) ∨ U))",
      "(¬U)",
      "(((¬U) ∨ (U ¬ (¬W))) ∨ U)"
    ],
    "conclusion": "(((¬U) ∨ (U ¬ (¬W))) ∨ U)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(O ∨ (¬O))",
      "(O ¬ (((¬X) ∨ (¬X)) ∨ ((¬O) ∨ (¬X))))"
    ],
    "conclusion": "(O ∨ (¬O))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(G ∨ ((G ¬ (¬G)) ¬ (¬O)))",
      "(((G ∨ O) ¬ ((¬O) ∨ G)) ¬ ((G ¬ O) ¬ (¬G)))",
      "(¬G)"
    ],
    "conclusion": "(G ∨ ((G ¬ (¬G)) ¬ (¬O)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "(T ∨ (((¬T) ¬ L) ¬ ((¬T) ¬ (¬T))))"
    ],
    "conclusion": "(T ∨ (((¬T) ¬ L) ¬ ((¬T) ¬ (¬T))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬B) ∨ D) ¬ (¬D)) ¬ ((D ∨ B) ∨ ((¬D) ¬ B)))",
      "(¬B)",
      "(B ∨ ((B ¬ (¬D)) ∨ (¬B)))"
    ],
    "conclusion": "((B ¬ (¬D)) ∨ (¬B))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(F ∨ ((P ¬ F) ¬ (F ¬ (¬F))))",
      "(((P ¬ (¬P)) ∨ (P ∨ (¬F))) ¬ F)",
      "(¬F)"
    ],
    "conclusion": "(F ∨ ((P ¬ F) ¬ (F ¬ (¬F))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "(E ∨ ((F ∨ (¬E)) ¬ (E ¬ (¬F))))",
      "((F ∨ (E ¬ (¬E))) ∨ (F ∨ ((¬F) ¬ (¬F))))"
    ],
    "conclusion": "(E ∨ ((F ∨ (¬E)) ¬ (E ¬ (¬F))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((I ¬ (¬E)) ∨ ((¬I) ∨ (E ¬ I)))",
      "((E ∨ (E ¬ (¬I))) ∨ I)",
      "(¬I)"
    ],
    "conclusion": "((I ¬ (¬E)) ∨ ((¬I) ∨ (E ¬ I)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "((((¬E) ∨ E) ¬ (N ∨ (¬E))) ∨ N)"
    ],
    "conclusion": "(((¬E) ∨ E) ¬ (N ∨ (¬E)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "((¬J) ∨ (((¬X) ∨ J) ∨ ((¬X) ∨ J)))",
      "(X ∨ ((X ∨ (¬J)) ∨ (X ∨ (¬X))))"
    ],
    "conclusion": "(X ∨ ((X ∨ (¬J)) ∨ (X ∨ (¬X))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬A) ¬ (¬A)) ∨ (¬A)) ∨ N)",
      "(¬N)"
    ],
    "conclusion": "((((¬A) ¬ (¬A)) ∨ (¬A)) ∨ N)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(I ∨ (((¬I) ∨ I) ¬ ((¬I) ¬ I)))",
      "(¬I)"
    ],
    "conclusion": "(I ∨ (((¬I) ∨ I) ¬ ((¬I) ¬ I)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬E) ∨ E) ¬ ((¬R) ¬ R)) ¬ (((¬E) ∨ (¬E)) ¬ (E ¬ (¬E))))",
      "(¬E)",
      "((((¬R) ¬ E) ∨ ((¬R) ∨ R)) ∨ E)"
    ],
    "conclusion": "(((¬R) ¬ E) ∨ ((¬R) ∨ R))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "(((K ∨ K) ¬ ((¬K) ¬ (¬K))) ∨ ((K ¬ (¬F)) ∨ ((¬F) ¬ F)))",
      "((((¬K) ¬ F) ¬ (K ∨ K)) ∨ F)"
    ],
    "conclusion": "((((¬K) ¬ F) ¬ (K ∨ K)) ∨ F)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬U) ¬ (¬U)) ¬ ((¬O) ¬ (¬U))) ∨ O)",
      "((O ¬ (U ¬ O)) ¬ ((U ∨ O) ∨ ((¬U) ∨ (¬U))))",
      "(¬O)"
    ],
    "conclusion": "(((¬U) ¬ (¬U)) ¬ ((¬O) ¬ (¬U)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬Z) ¬ Z) ∨ (¬Z)) ∨ ((¬U) ∨ (¬U)))",
      "(¬U)",
      "(((Z ¬ (¬Z)) ∨ (U ¬ Z)) ∨ U)"
    ],
    "conclusion": "((((¬Z) ¬ Z) ∨ (¬Z)) ∨ ((¬U) ∨ (¬U)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "(((¬R) ∨ (R ∨ R)) ∨ R)",
      "((¬B) ∨ (R ¬ (R ∨ R)))"
    ],
    "conclusion": "(((¬R) ∨ (R ∨ R)) ∨ R)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((J ¬ (¬J)) ¬ (J ∨ (¬E))) ¬ (((¬E) ¬ (¬E)) ¬ (E ¬ E)))",
      "(¬E)",
      "(E ∨ (((¬E) ∨ J) ¬ (J ¬ J)))"
    ],
    "conclusion": "(((¬E) ∨ J) ¬ (J ¬ J))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "(((¬U) ∨ ((¬U) ¬ P)) ∨ U)",
      "((((¬U) ¬ P) ¬ (U ∨ P)) ∨ U)"
    ],
    "conclusion": "((¬U) ∨ ((¬U) ¬ P))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(N ∨ ((U ¬ N) ∨ (U ∨ N)))",
      "(¬N)"
    ],
    "conclusion": "(N ∨ ((U ¬ N) ∨ (U ∨ N)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "(J ∨ O)"
    ],
    "conclusion": "(J ∨ O)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(M ∨ ((¬M) ∨ M))",
      "(¬M)"
    ],
    "conclusion": "((¬M) ∨ M)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(M ∨ (((¬M) ¬ M) ∨ M))",
      "(¬M)",
      "(¬M)"
    ],
    "conclusion": "(((¬M) ¬ M) ∨ M)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "((((¬B) ∨ (¬J)) ¬ B) ∨ B)",
      "J"
    ],
    "conclusion": "(((¬B) ∨ (¬J)) ¬ B)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((((¬D) ¬ L) ∨ (D ¬ (¬D))) ∨ D)",
      "((((¬D) ¬ (¬D)) ∨ (D ∨ (¬L))) ∨ (((¬L) ∨ L) ∨ (D ∨ (¬D))))"
    ],
    "conclusion": "(((¬D) ¬ L) ∨ (D ¬ (¬D)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "(C ∨ (D ¬ (¬C)))",
      "((C ¬ (¬C)) ¬ (((¬C) ¬ D) ¬ (¬C)))"
    ],
    "conclusion": "(D ¬ (¬C))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "((((¬S) ∨ (¬Q)) ∨ ((¬Q) ¬ (¬S))) ∨ Q)",
      "(((Q ∨ (¬S)) ∨ Q) ∨ S)"
    ],
    "conclusion": "((Q ∨ (¬S)) ∨ Q)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬H)",
      "(H ∨ (((¬P) ¬ H) ∨ ((¬P) ¬ (¬H))))"
    ],
    "conclusion": "(H ∨ (((¬P) ¬ H) ∨ ((¬P) ¬ (¬H))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(O ∨ (R ¬ (O ∨ (¬O))))",
      "((((¬O) ¬ (¬O)) ¬ ((¬O) ¬ (¬O))) ¬ (((¬O) ¬ (¬R)) ¬ (¬R)))"
    ],
    "conclusion": "(R ¬ (O ∨ (¬O)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬J) ∨ J)",
      "((((¬J) ¬ (¬J)) ¬ (O ∨ (¬J))) ∨ (J ∨ O))",
      "(¬J)"
    ],
    "conclusion": "(¬J)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Y ∨ ((W ¬ Y) ¬ (Y ¬ (¬Y))))",
      "((((¬W) ¬ Y) ∨ Y) ∨ ((Y ∨ (¬Y)) ¬ ((¬W) ∨ Y)))",
      "(¬Y)"
    ],
    "conclusion": "(Y ∨ ((W ¬ Y) ¬ (Y ¬ (¬Y))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((O ¬ M) ¬ (M ∨ (¬O))) ∨ (((¬O) ∨ (¬M)) ∨ ((¬M) ∨ (¬M))))",
      "((O ¬ (M ∨ (¬O))) ∨ O)",
      "(¬O)"
    ],
    "conclusion": "(((O ¬ M) ¬ (M ∨ (¬O))) ∨ (((¬O) ∨ (¬M)) ∨ ((¬M) ∨ (¬M))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬G) ∨ G) ¬ ((¬G) ¬ X)) ¬ (((¬G) ¬ (¬G)) ∨ ((¬X) ¬ (¬X))))",
      "(¬X)",
      "(X ∨ (X ∨ ((¬X) ¬ G)))"
    ],
    "conclusion": "(X ∨ (X ∨ ((¬X) ¬ G)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "((((¬X) ¬ C) ∨ ((¬X) ¬ X)) ∨ (((¬X) ∨ (¬X)) ∨ ((¬C) ∨ C)))",
      "(((C ∨ X) ∨ ((¬X) ∨ X)) ∨ X)"
    ],
    "conclusion": "((C ∨ X) ∨ ((¬X) ∨ X))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Z ∨ (((¬Z) ∨ A) ¬ (A ∨ (¬A))))",
      "(¬Z)"
    ],
    "conclusion": "(Z ∨ (((¬Z) ∨ A) ¬ (A ∨ (¬A))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(J ∨ E)",
      "((((¬E) ∨ J) ∨ ((¬E) ∨ J)) ∨ ((J ¬ E) ∨ (J ¬ (¬E))))",
      "(¬J)"
    ],
    "conclusion": "((((¬E) ∨ J) ∨ ((¬E) ∨ J)) ∨ ((J ¬ E) ∨ (J ¬ (¬E))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((N ¬ N) ∨ ((¬Q) ¬ N)) ¬ (¬N))",
      "(Q ∨ Q)",
      "(¬Q)"
    ],
    "conclusion": "Q",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "(U ∨ ((U ¬ (¬Y)) ¬ ((¬U) ∨ (¬Y))))",
      "((((¬Y) ∨ (¬U)) ∨ (Y ∨ Y)) ∨ (((¬Y) ∨ Y) ¬ (Y ¬ U)))"
    ],
    "conclusion": "(U ∨ ((U ¬ (¬Y)) ¬ ((¬U) ∨ (¬Y))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((D ¬ ((¬D) ¬ D)) ∨ U)",
      "(¬U)",
      "(((D ∨ U) ¬ ((¬U) ∨ D)) ¬ ((D ¬ U) ∨ ((¬U) ∨ U)))"
    ],
    "conclusion": "(D ¬ ((¬D) ¬ D))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "(T ∨ ((¬T) ¬ ((¬P) ¬ P)))"
    ],
    "conclusion": "((¬T) ¬ ((¬P) ¬ P))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬X) ¬ (¬X)) ¬ ((¬O) ¬ O)) ∨ O)",
      "(¬O)",
      "(((X ∨ (¬X)) ¬ ((¬O) ¬ (¬X))) ∨ (((¬O) ¬ (¬O)) ∨ (O ¬ O)))"
    ],
    "conclusion": "((((¬X) ¬ (¬X)) ¬ ((¬O) ¬ O)) ∨ O)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬M) ∨ M) ¬ (¬K)) ∨ K)",
      "(¬K)",
      "(K ∨ ((M ∨ (¬K)) ¬ (¬K)))"
    ],
    "conclusion": "(K ∨ ((M ∨ (¬K)) ¬ (¬K)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(W ∨ ((¬P) ¬ (W ¬ P)))",
      "((((¬W) ∨ P) ∨ ((¬W) ∨ P)) ¬ (((¬P) ∨ W) ¬ (P ∨ (¬P))))"
    ],
    "conclusion": "((¬P) ¬ (W ¬ P))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((F ∨ F) ¬ ((¬Q) ∨ (¬F))) ∨ Q)",
      "(¬Q)"
    ],
    "conclusion": "((F ∨ F) ¬ ((¬Q) ∨ (¬F)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "I",
      "((((¬O) ¬ I) ∨ ((¬I) ¬ I)) ∨ I)",
      "(¬I)"
    ],
    "conclusion": "((((¬O) ¬ I) ∨ ((¬I) ¬ I)) ∨ I)",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬A) ¬ A) ∨ (H ¬ A)) ∨ H)",
      "((((¬A) ¬ (¬A)) ¬ ((¬H) ¬ (¬H))) ∨ ((H ∨ (¬H)) ¬ ((¬H) ∨ H)))",
      "(¬H)"
    ],
    "conclusion": "(((¬A) ¬ A) ∨ (H ¬ A))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Y) ∨ (Y ¬ P))",
      "(¬Y)",
      "(Y ∨ ((Y ¬ (¬Y)) ∨ (P ∨ (¬P))))"
    ],
    "conclusion": "(Y ∨ ((Y ¬ (¬Y)) ∨ (P ∨ (¬P))))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(R ∨ (((¬M) ¬ (¬R)) ¬ ((¬R) ¬ R)))",
      "(¬R)",
      "(((¬M) ¬ R) ∨ (((¬M) ∨ R) ∨ (R ¬ M)))"
    ],
    "conclusion": "(((¬M) ¬ R) ∨ (((¬M) ∨ R) ∨ (R ¬ M)))",
    "applied_rules": [
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(W → ((U ¬ (¬U)) ¬ ((¬W) → W)))",
      "((((¬W) → L) → ((¬U) ¬ U)) → W)",
      "((U → ((¬U) → (¬L))) ¬ ((L ¬ U) → W))"
    ],
    "conclusion": "((((¬W) → L) → ((¬U) ¬ U)) → ((U ¬ (¬U)) ¬ ((¬W) → W)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬S) ¬ H) ¬ ((¬N) → H)) → S)",
      "(S → (¬H))",
      "(((¬S) ¬ (H → H)) ¬ (¬H))"
    ],
    "conclusion": "((((¬S) ¬ H) ¬ ((¬N) → H)) → (¬H))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((L ¬ L) ¬ ((¬M) ¬ M)) → M)",
      "(((M → (¬L)) → (L ¬ (¬L))) → (¬P))",
      "((¬P) → ((¬P) ¬ (P ¬ M)))"
    ],
    "conclusion": "(((M → (¬L)) → (L ¬ (¬L))) → ((¬P) ¬ (P ¬ M)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬F) ¬ (¬W)) ¬ ((¬W) → F)) ¬ (((¬F) → W) ¬ (N → F)))",
      "(F → N)",
      "(N → F)"
    ],
    "conclusion": "(N → F)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬N) → (¬G))",
      "((¬G) → (((¬Q) ¬ (¬N)) ¬ (¬Q)))",
      "((((¬Q) → (¬G)) ¬ ((¬Q) → (¬Q))) ¬ (Q ¬ Q))"
    ],
    "conclusion": "((¬N) → (((¬Q) ¬ (¬N)) ¬ (¬Q)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(C → ((C ¬ (¬C)) → ((¬O) → O)))",
      "(((¬E) ¬ ((¬E) → (¬E))) ¬ ((C ¬ (¬C)) ¬ ((¬O) → (¬C))))",
      "(O → C)"
    ],
    "conclusion": "(O → ((C ¬ (¬C)) → ((¬O) → O)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬A) → (¬B))",
      "(B → (¬A))"
    ],
    "conclusion": "(B → (¬B))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(V → (¬V))",
      "((((¬R) → U) ¬ (U → (¬R))) → V)",
      "((((¬U) → (¬U)) → (¬R)) ¬ V)"
    ],
    "conclusion": "((((¬R) → U) ¬ (U → (¬R))) → (¬V))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬K) ¬ (¬L)) → (W ¬ (¬L))) → L)",
      "(L → ((¬W) ¬ (L → W)))",
      "(¬K)"
    ],
    "conclusion": "((((¬K) ¬ (¬L)) → (W ¬ (¬L))) → ((¬W) ¬ (L → W)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(O → (((¬O) ¬ F) ¬ (S ¬ S)))",
      "((((¬S) → (¬O)) → ((¬O) ¬ S)) ¬ ((F → (¬S)) ¬ ((¬S) ¬ (¬O))))",
      "((((¬F) → F) → ((¬S) → S)) → O)"
    ],
    "conclusion": "((((¬F) → F) → ((¬S) → S)) → (((¬O) ¬ F) ¬ (S ¬ S)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬W) → (¬W)) → (U → W)) ¬ ((U ¬ (¬U)) → W))",
      "(((M → W) ¬ ((¬M) → (¬W))) → (¬U))",
      "((¬U) → (W → (M → (¬M))))"
    ],
    "conclusion": "(((M → W) ¬ ((¬M) → (¬W))) → (W → (M → (¬M))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((X ¬ ((¬X) ¬ X)) → (¬T))",
      "(((X ¬ X) → (T → (¬X))) → ((Q → Q) → (T → T)))",
      "((¬T) → (((¬X) ¬ Q) → ((¬T) → (¬X))))"
    ],
    "conclusion": "((X ¬ ((¬X) ¬ X)) → (((¬X) ¬ Q) → ((¬T) → (¬X))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((K → (¬K)) ¬ (K → (¬T))) ¬ (((¬U) → (¬K)) ¬ ((¬K) → (¬T))))",
      "(((K → K) → (K → U)) → (¬T))",
      "((¬T) → (T → (¬U)))"
    ],
    "conclusion": "(((K → K) → (K → U)) → (T → (¬U)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬L) ¬ (¬L)) → F) → (¬B))",
      "((¬B) → (F → (F ¬ (¬L))))",
      "(((L → (¬F)) → (F ¬ F)) ¬ (¬B))"
    ],
    "conclusion": "((((¬L) ¬ (¬L)) → F) → (F → (F ¬ (¬L))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬G) → (¬Q)) → G)",
      "(((G → (¬N)) ¬ ((¬N) → (¬G))) ¬ (((¬G) → (¬Q)) → (N → G)))",
      "(G → (((¬G) ¬ N) ¬ ((¬N) → (¬G))))"
    ],
    "conclusion": "(((¬G) → (¬Q)) → (((¬G) ¬ N) ¬ ((¬N) → (¬G))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(K → ((¬I) ¬ (H → (¬I))))",
      "((¬K) → K)",
      "(((K ¬ (¬I)) → ((¬K) → (¬I))) ¬ ((¬K) ¬ ((¬I) ¬ (¬H))))"
    ],
    "conclusion": "((¬K) → ((¬I) ¬ (H → (¬I))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬C) ¬ (¬O)) ¬ (P → O)) → (¬P))",
      "((¬P) → P)",
      "(O ¬ (((¬C) ¬ C) ¬ (O → P)))"
    ],
    "conclusion": "((((¬C) ¬ (¬O)) ¬ (P → O)) → P)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬R) → R) ¬ (B → (¬B))) → R)",
      "(R → (¬B))"
    ],
    "conclusion": "((((¬R) → R) ¬ (B → (¬B))) → (¬B))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬C) → ((R → (¬R)) ¬ (R ¬ (¬B))))",
      "(((R ¬ R) ¬ (R ¬ (¬R))) → (¬C))",
      "((¬R) ¬ (((¬R) → (¬C)) ¬ ((¬C) ¬ B)))"
    ],
    "conclusion": "(((R ¬ R) ¬ (R ¬ (¬R))) → ((R → (¬R)) ¬ (R ¬ (¬B))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(N → ((O → T) → ((¬T) ¬ O)))",
      "((((¬O) ¬ N) → (¬N)) → ((T ¬ T) ¬ (T → T)))",
      "((((¬N) ¬ O) ¬ (N → (¬T))) → N)"
    ],
    "conclusion": "((((¬N) ¬ O) ¬ (N → (¬T))) → ((O → T) → ((¬T) ¬ O)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(H → (((¬J) ¬ (¬J)) → (H → (¬R))))",
      "(((J ¬ R) → (R → (¬J))) ¬ (((¬H) ¬ J) ¬ (J ¬ (¬J))))",
      "((H ¬ ((¬H) → R)) → H)"
    ],
    "conclusion": "((H ¬ ((¬H) → R)) → (((¬J) ¬ (¬J)) → (H → (¬R))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Y) → (Y → Q))",
      "(((N → (¬Q)) ¬ (Q ¬ Y)) → (¬Y))",
      "(((N ¬ N) ¬ (Y → Q)) → (((¬Q) → N) ¬ ((¬N) ¬ Y)))"
    ],
    "conclusion": "(((N → (¬Q)) ¬ (Q ¬ Y)) → (Y → Q))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬A) ¬ F) → (¬F)) → (¬A))",
      "(((A ¬ (¬A)) ¬ ((¬B) ¬ F)) → (¬B))",
      "((¬A) → (((¬B) ¬ (¬F)) ¬ (¬F)))"
    ],
    "conclusion": "((((¬A) ¬ F) → (¬F)) → (((¬B) ¬ (¬F)) ¬ (¬F)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬J) → J)",
      "(J → J)"
    ],
    "conclusion": "((¬J) → J)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(G → ((G ¬ (¬G)) ¬ (G → (¬G))))",
      "((((¬M) ¬ B) → ((¬G) ¬ (¬G))) → G)",
      "(((M ¬ M) ¬ (M ¬ (¬M))) → M)"
    ],
    "conclusion": "((((¬M) ¬ B) → ((¬G) ¬ (¬G))) → ((G ¬ (¬G)) ¬ (G → (¬G))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬O) → Y) ¬ ((¬S) ¬ (¬S))) → (¬S))",
      "((¬S) → ((O → S) ¬ ((¬O) → (¬Y))))"
    ],
    "conclusion": "((((¬O) → Y) ¬ ((¬S) ¬ (¬S))) → ((O → S) ¬ ((¬O) → (¬Y))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬P) → (((¬P) → (¬W)) → (¬P)))",
      "((((¬P) ¬ (¬P)) → (¬Y)) → (¬P))"
    ],
    "conclusion": "((((¬P) ¬ (¬P)) → (¬Y)) → (((¬P) → (¬W)) → (¬P)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(L → (H ¬ ((¬L) → (¬M))))",
      "((L → (H → (¬L))) → L)",
      "(M → ((¬M) ¬ ((¬M) → (¬L))))"
    ],
    "conclusion": "((L → (H → (¬L))) → (H ¬ ((¬L) → (¬M))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬K) → (¬E)) → ((¬C) → E)) → (¬K))",
      "((¬K) → (¬C))"
    ],
    "conclusion": "((((¬K) → (¬E)) → ((¬C) → E)) → (¬C))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(Y → (¬H))",
      "((((¬Y) → (¬Z)) ¬ (¬Z)) → Y)"
    ],
    "conclusion": "((((¬Y) → (¬Z)) ¬ (¬Z)) → (¬H))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬V) → (((¬Z) → V) ¬ ((¬X) → Z)))",
      "(((X ¬ (¬Z)) → (V ¬ V)) ¬ ((X ¬ (¬V)) → (V → (¬V))))",
      "(((V ¬ X) → ((¬V) → V)) → (¬V))"
    ],
    "conclusion": "(((V ¬ X) → ((¬V) → V)) → (((¬Z) → V) ¬ ((¬X) → Z)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(J → J)",
      "(((J → F) ¬ ((¬F) → (¬U))) → J)"
    ],
    "conclusion": "(((J → F) ¬ ((¬F) → (¬U))) → J)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬T) → ((K ¬ (¬K)) → ((¬K) → T)))",
      "((¬K) → (¬T))"
    ],
    "conclusion": "((¬K) → ((K ¬ (¬K)) → ((¬K) → T)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(O → (((¬Q) → (¬Z)) ¬ (Q → (¬O))))",
      "((((¬O) ¬ Z) → ((¬Q) → O)) ¬ (((¬Z) → Q) → (¬Q)))",
      "(((Z → (¬O)) → ((¬Q) → (¬Z))) → O)"
    ],
    "conclusion": "(((Z → (¬O)) → ((¬Q) → (¬Z))) → (((¬Q) → (¬Z)) ¬ (Q → (¬O))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬F) → (¬F))",
      "(((F ¬ A) → (¬F)) → ((P ¬ (¬P)) → ((¬A) ¬ F)))",
      "((¬F) → (((¬F) → P) → F))"
    ],
    "conclusion": "((¬F) → (((¬F) → P) → F))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((Z ¬ (N ¬ (¬Z))) → R)",
      "(R → (¬Z))"
    ],
    "conclusion": "((Z ¬ (N ¬ (¬Z))) → (¬Z))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬D) ¬ (¬J)) → (D ¬ (¬J))) → ((K → (¬K)) → ((¬K) ¬ J)))",
      "((((¬D) ¬ J) → ((¬J) ¬ D)) → (¬K))",
      "((¬K) → (K → ((¬D) → (¬D))))"
    ],
    "conclusion": "((((¬D) ¬ J) → ((¬J) ¬ D)) → (K → ((¬D) → (¬D))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((G ¬ (¬M)) → ((G ¬ M) ¬ M))",
      "((((¬Z) ¬ Z) ¬ ((¬M) → M)) → (G ¬ (¬M)))"
    ],
    "conclusion": "((((¬Z) ¬ Z) ¬ ((¬M) → M)) → ((G ¬ M) ¬ M))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((A ¬ M) → (A → (¬W))) ¬ ((¬A) → (M ¬ (¬W))))",
      "(M → (¬M))",
      "(((¬A) ¬ W) → M)"
    ],
    "conclusion": "(((¬A) ¬ W) → (¬M))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((Y → (V → (¬Y))) → (¬V))",
      "((((¬M) → M) ¬ (M → (¬M))) ¬ ((V ¬ (¬M)) → Y))",
      "((¬V) → ((¬Y) → (M → (¬M))))"
    ],
    "conclusion": "((Y → (V → (¬Y))) → ((¬Y) → (M → (¬M))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬M) → ((¬I) → M))",
      "(M → (((¬Q) → Q) → ((¬Q) → (¬I))))",
      "(((I ¬ (¬Q)) ¬ (¬Q)) → (¬M))"
    ],
    "conclusion": "(((I ¬ (¬Q)) ¬ (¬Q)) → ((¬I) → M))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(A → ((K ¬ K) ¬ ((¬A) ¬ A)))",
      "(¬A)",
      "(((K → (¬K)) ¬ (K → J)) → A)"
    ],
    "conclusion": "(((K → (¬K)) ¬ (K → J)) → ((K ¬ K) ¬ ((¬A) ¬ A)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬B) → (¬B))",
      "(((Q ¬ I) ¬ (B ¬ B)) → (¬B))",
      "((¬I) → B)"
    ],
    "conclusion": "(((Q ¬ I) ¬ (B ¬ B)) → (¬B))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬W) ¬ E) → (W ¬ E)) ¬ (W → ((¬W) → E)))",
      "((((¬W) ¬ W) ¬ (A ¬ (¬W))) → W)",
      "(W → ((W → (¬A)) ¬ (W ¬ (¬E))))"
    ],
    "conclusion": "((((¬W) ¬ W) ¬ (A ¬ (¬W))) → ((W → (¬A)) ¬ (W ¬ (¬E))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬M) → (Q → ((¬M) → (¬Q))))",
      "(((D → (¬Q)) → (Q ¬ (¬D))) → M)",
      "(((Q → Q) ¬ ((¬D) → (¬D))) → (¬M))"
    ],
    "conclusion": "(((Q → Q) ¬ ((¬D) → (¬D))) → (Q → ((¬M) → (¬Q))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬X) → (((¬B) ¬ H) ¬ B))",
      "(((¬X) ¬ ((¬B) → (¬B))) → ((¬B) ¬ (H ¬ (¬H))))",
      "(((B ¬ (¬H)) → (¬B)) → (¬X))"
    ],
    "conclusion": "(((B ¬ (¬H)) → (¬B)) → (((¬B) ¬ H) ¬ B))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬B) ¬ B) ¬ (U ¬ U)) → S)",
      "(S → (((¬S) ¬ U) ¬ (¬B)))"
    ],
    "conclusion": "((((¬B) ¬ B) ¬ (U ¬ U)) → (((¬S) ¬ U) ¬ (¬B)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((T → (¬T)) → (¬T)) → N)",
      "(N → ((T ¬ O) ¬ ((¬N) ¬ T)))",
      "(¬T)"
    ],
    "conclusion": "(((T → (¬T)) → (¬T)) → ((T ¬ O) ¬ ((¬N) ¬ T)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((B ¬ H) ¬ ((¬B) → B)) → (¬E))",
      "((¬E) → ((¬E) ¬ (H ¬ H)))"
    ],
    "conclusion": "(((B ¬ H) ¬ ((¬B) → B)) → ((¬E) ¬ (H ¬ H)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(Z → O)",
      "(O → X)"
    ],
    "conclusion": "(Z → X)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((B → (¬C)) → (B → (¬C))) → (((¬P) → C) → (B → (¬C))))",
      "(C → ((B → (¬C)) → (¬B)))",
      "(((¬B) → (B → C)) → C)"
    ],
    "conclusion": "(((¬B) → (B → C)) → ((B → (¬C)) → (¬B)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(G → (¬Z))",
      "(((S → (¬G)) → ((¬G) → Z)) → G)",
      "((((¬Z) → (¬Z)) → (S → (¬G))) → (((¬Z) → G) → (G → (¬Z))))"
    ],
    "conclusion": "(((S → (¬G)) → ((¬G) → Z)) → (¬Z))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(Z → Z)",
      "((((¬F) → (¬F)) → (N → N)) → Z)"
    ],
    "conclusion": "((((¬F) → (¬F)) → (N → N)) → Z)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((Z → (¬A)) → A) → U)",
      "((((¬U) → U) → (U → A)) → U)",
      "(U → (((¬A) → A) → ((¬U) → Z)))"
    ],
    "conclusion": "((((¬U) → U) → (U → A)) → (((¬A) → A) → ((¬U) → Z)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((I → (K → R)) → R)",
      "K",
      "(R → ((¬R) → (K → (¬I))))"
    ],
    "conclusion": "((I → (K → R)) → ((¬R) → (K → (¬I))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((X → (¬J)) → (U → X)) → ((¬J) → ((¬U) → J)))",
      "(((¬J) → ((¬U) → J)) → (((¬J) → U) → ((¬J) → U)))",
      "X"
    ],
    "conclusion": "(((X → (¬J)) → (U → X)) → (((¬J) → U) → ((¬J) → U)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬L) → L) → E) → (¬E))",
      "((¬E) → (((¬G) → G) → (G → (¬G))))",
      "(((G → (¬E)) → ((¬G) → L)) → ((¬L) → (G → E)))"
    ],
    "conclusion": "((((¬L) → L) → E) → (((¬G) → G) → (G → (¬G))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬A) → (((¬A) → A) → (Y → (¬T))))",
      "(((¬Y) → ((¬T) → A)) → (((¬A) → (¬A)) → ((¬Y) → A)))",
      "(A → (¬A))"
    ],
    "conclusion": "(A → (((¬A) → A) → (Y → (¬T))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬X) → ((X → (¬X)) → (N → X)))",
      "((((¬F) → (¬X)) → ((¬X) → (¬X))) → ((N → X) → (¬N)))",
      "((((¬N) → F) → ((¬F) → F)) → (¬X))"
    ],
    "conclusion": "((((¬N) → F) → ((¬F) → F)) → ((X → (¬X)) → (N → X)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬F) → ((F → F) → (X → (¬X))))",
      "((X → (V → (¬X))) → (((¬F) → X) → (F → F)))",
      "(((¬X) → (V → F)) → (¬F))"
    ],
    "conclusion": "(((¬X) → (V → F)) → ((F → F) → (X → (¬X))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬G) → N) → ((¬G) → N)) → G)",
      "(G → (((¬N) → N) → ((¬G) → (¬X))))"
    ],
    "conclusion": "((((¬G) → N) → ((¬G) → N)) → (((¬N) → N) → ((¬G) → (¬X))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬Z) → P) → ((¬P) → P)) → D)",
      "((((¬P) → (¬D)) → (D → Z)) → P)",
      "(P → (P → ((¬Z) → (¬D))))"
    ],
    "conclusion": "((((¬P) → (¬D)) → (D → Z)) → (P → ((¬Z) → (¬D))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Y) → ((O → (¬X)) → (Y → (¬O))))",
      "(((¬Y) → (O → X)) → (¬Y))",
      "((((¬X) → Y) → ((¬Y) → O)) → Y)"
    ],
    "conclusion": "(((¬Y) → (O → X)) → ((O → (¬X)) → (Y → (¬O))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬O) → (((¬J) → (¬O)) → A))",
      "((((¬J) → (¬O)) → O) → (¬O))",
      "(((¬J) → (J → A)) → A)"
    ],
    "conclusion": "((((¬J) → (¬O)) → O) → (((¬J) → (¬O)) → A))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((V → M) → ((¬S) → (¬V))) → (¬V))",
      "((¬V) → (((¬S) → S) → (V → (¬M))))"
    ],
    "conclusion": "(((V → M) → ((¬S) → (¬V))) → (((¬S) → S) → (V → (¬M))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(X → (¬X))",
      "(((Y → Z) → (X → Y)) → X)"
    ],
    "conclusion": "(((Y → Z) → (X → Y)) → (¬X))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬N) → ((¬N) → ((¬N) → N)))",
      "(((O → (¬O)) → K) → (¬N))",
      "(((N → (¬K)) → (N → O)) → ((K → (¬O)) → (O → (¬K))))"
    ],
    "conclusion": "(((O → (¬O)) → K) → ((¬N) → ((¬N) → N)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((I → (M → M)) → (¬M))",
      "((¬M) → (((¬Y) → (¬Y)) → ((¬M) → I)))"
    ],
    "conclusion": "((I → (M → M)) → (((¬Y) → (¬Y)) → ((¬M) → I)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((L → L) → ((¬J) → (¬B))) → J)",
      "(J → (((¬L) → B) → (L → B)))",
      "(((J → L) → (¬B)) → ((J → (¬B)) → (¬L)))"
    ],
    "conclusion": "(((L → L) → ((¬J) → (¬B))) → (((¬L) → B) → (L → B)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬F) → (G → (¬E))) → E)",
      "(E → (((¬G) → G) → (G → G)))",
      "((F → (E → (¬F))) → (((¬E) → (¬F)) → ((¬E) → F)))"
    ],
    "conclusion": "(((¬F) → (G → (¬E))) → (((¬G) → G) → (G → G)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((V → ((¬C) → (¬V))) → (¬C))",
      "((¬C) → ((C → (¬C)) → ((¬D) → C)))"
    ],
    "conclusion": "((V → ((¬C) → (¬V))) → ((C → (¬C)) → ((¬D) → C)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((F → F) → ((¬D) → (¬D))) → (((¬F) → (¬D)) → ((¬I) → (¬I))))",
      "((¬D) → (((¬I) → (¬I)) → (I → (¬I))))",
      "(((F → (¬D)) → D) → (¬D))"
    ],
    "conclusion": "(((F → (¬D)) → D) → (((¬I) → (¬I)) → (I → (¬I))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((Z → (¬A)) → (Z → (¬H))) → A)",
      "(A → ((H → A) → ((¬A) → (¬A))))"
    ],
    "conclusion": "(((Z → (¬A)) → (Z → (¬H))) → ((H → A) → ((¬A) → (¬A))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬N) → (¬J)) → (N → N)) → (¬D))",
      "((((¬N) → D) → (J → D)) → (((¬J) → (¬D)) → ((¬N) → (¬J))))",
      "((¬D) → (D → (N → J)))"
    ],
    "conclusion": "((((¬N) → (¬J)) → (N → N)) → (D → (N → J)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬D) → (¬D))",
      "(((¬F) → ((¬F) → (¬D))) → (((¬Y) → (¬Y)) → (F → (¬D))))",
      "(((¬F) → (F → F)) → (¬D))"
    ],
    "conclusion": "(((¬F) → (F → F)) → (¬D))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬E) → ((E → O) → ((¬T) → (¬E))))",
      "((((¬E) → E) → (E → (¬E))) → (¬E))"
    ],
    "conclusion": "((((¬E) → E) → (E → (¬E))) → ((E → O) → ((¬T) → (¬E))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬P) → (¬P)) → (P → P)) → (¬P))",
      "((¬P) → T)"
    ],
    "conclusion": "((((¬P) → (¬P)) → (P → P)) → T)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(T → (((¬N) → (¬M)) → (N → T)))",
      "(M → T)"
    ],
    "conclusion": "(M → (((¬N) → (¬M)) → (N → T)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((Q → L) → (Q → L)) → P)",
      "(P → Q)",
      "((((¬P) → P) → ((¬L) → P)) → (P → ((¬Q) → (¬P))))"
    ],
    "conclusion": "(((Q → L) → (Q → L)) → Q)",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(J → J)",
      "(J → (¬P))",
      "((((¬J) → (¬O)) → (J → J)) → (¬O))"
    ],
    "conclusion": "(J → (¬P))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(J → (((¬T) → (¬C)) → (J → T)))",
      "((¬C) → (¬T))",
      "((((¬T) → (¬T)) → (C → J)) → J)"
    ],
    "conclusion": "((((¬T) → (¬T)) → (C → J)) → (((¬T) → (¬C)) → (J → T)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((V → (¬Y)) → ((¬V) → (¬V))) → (Y → Y))",
      "((((¬Y) → (¬Y)) → ((¬I) → (¬Y))) → ((V → (¬Y)) → ((¬V) → (¬V))))"
    ],
    "conclusion": "((((¬Y) → (¬Y)) → ((¬I) → (¬Y))) → (Y → Y))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬J) → (((¬J) → (¬J)) → (J → L)))",
      "((¬J) → (¬J))"
    ],
    "conclusion": "((¬J) → (((¬J) → (¬J)) → (J → L)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(X → (¬O))",
      "((¬X) → X)"
    ],
    "conclusion": "((¬X) → (¬O))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(L → (U → ((¬U) → L)))",
      "(((L → A) → ((¬A) → A)) → L)"
    ],
    "conclusion": "(((L → A) → ((¬A) → A)) → (U → ((¬U) → L)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(I → ((I → (¬J)) → (J → I)))",
      "(M → I)"
    ],
    "conclusion": "(M → ((I → (¬J)) → (J → I)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬J) → (J → N))",
      "((¬J) → ((N → T) → (¬N)))",
      "(((¬T) → (N → N)) → (¬J))"
    ],
    "conclusion": "(((¬T) → (N → N)) → ((N → T) → (¬N)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Z) → (¬I))",
      "(((¬W) → ((¬W) → I)) → (¬Z))"
    ],
    "conclusion": "(((¬W) → ((¬W) → I)) → (¬I))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((R → (¬Y)) → (Y → (¬Y))) → (¬R))",
      "(¬R)",
      "((¬R) → (¬R))"
    ],
    "conclusion": "(((R → (¬Y)) → (Y → (¬Y))) → (¬R))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬H) → (¬G))",
      "((¬G) → ((H → G) → ((¬H) → O)))",
      "((((¬H) → G) → ((¬H) → (¬H))) → (((¬O) → G) → ((¬G) → (¬G))))"
    ],
    "conclusion": "((¬H) → ((H → G) → ((¬H) → O)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬B) → E) → (B → (¬B))) → B)",
      "(((D → D) → ((¬E) → (¬D))) → (((¬B) → (¬E)) → (¬D)))",
      "(B → ((E → D) → ((¬E) → (¬B))))"
    ],
    "conclusion": "((((¬B) → E) → (B → (¬B))) → ((E → D) → ((¬E) → (¬B))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(W → (¬O))",
      "((¬O) → (O → (O → Y)))",
      "(O → (O → ((¬Y) → W)))"
    ],
    "conclusion": "(W → (O → (O → Y)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Z) → (J → ((¬Z) → (¬J))))",
      "((Z → (N → Z)) → (¬Z))",
      "(((N → (¬Z)) → ((¬Z) → J)) → (((¬Z) → N) → ((¬Z) → (¬N))))"
    ],
    "conclusion": "((Z → (N → Z)) → (J → ((¬Z) → (¬J))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(P → (((¬P) → P) → ((¬Q) → (¬L))))",
      "((¬L) → P)"
    ],
    "conclusion": "((¬L) → (((¬P) → P) → ((¬Q) → (¬L))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬B) → B)",
      "(B → (¬B))"
    ],
    "conclusion": "(B → (¬B))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → ((J → V) → (V → (¬J))))",
      "((((¬V) → (¬U)) → ((¬V) → (¬J))) → (¬J))"
    ],
    "conclusion": "((((¬V) → (¬U)) → ((¬V) → (¬J))) → ((J → V) → (V → (¬J))))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "I",
      "(((W → H) → W) → (¬I))",
      "((¬I) → (((¬I) → I) → ((¬I) → W)))"
    ],
    "conclusion": "(((W → H) → W) → (((¬I) → I) → ((¬I) → W)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((Y → (¬G)) → (G → (Q → G)))",
      "(((Q → G) → ((¬Y) → (¬Y))) → (¬Q))",
      "((¬Q) → ((Y → (¬Q)) → (G → Y)))"
    ],
    "conclusion": "(((Q → G) → ((¬Y) → (¬Y))) → ((Y → (¬Q)) → (G → Y)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((Z → (¬A)) → ((¬Z) → Z)) → (((¬C) → (¬Z)) → (A → A)))",
      "(((Z → A) → ((¬A) → (¬Z))) → A)",
      "(A → (¬A))"
    ],
    "conclusion": "(((Z → A) → ((¬A) → (¬Z))) → (¬A))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(L → A)",
      "(A → (L → (¬K)))",
      "((((¬A) → A) → (¬A)) → ((¬A) → (K → K)))"
    ],
    "conclusion": "(L → (L → (¬K)))",
    "applied_rules": [
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "N",
      "N",
      "(N → ((N → (¬M)) → (M → (¬N))))"
    ],
    "conclusion": "((N → (¬M)) → (M → (¬N)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Y",
      "(Y → (((¬Y) → Y) → (D → (¬Y))))"
    ],
    "conclusion": "(((¬Y) → Y) → (D → (¬Y)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬T) → (((¬Y) → Y) → ((¬Y) → Y)))",
      "(¬T)"
    ],
    "conclusion": "(((¬Y) → Y) → ((¬Y) → Y))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Z",
      "(Z → ((¬Q) → (Z → Z)))",
      "(((Q → (¬Z)) → (Z → (¬Z))) → (¬Z))"
    ],
    "conclusion": "((¬Q) → (Z → Z))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(V → I)",
      "V"
    ],
    "conclusion": "I",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((D → (¬R)) → (¬D)) → ((D → (¬D)) → ((¬D) → D)))",
      "D",
      "(D → D)"
    ],
    "conclusion": "D",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "(((¬C) → ((¬C) → C)) → (((¬C) → H) → C))",
      "(H → (((¬H) → (¬H)) → (C → (¬H))))"
    ],
    "conclusion": "(((¬H) → (¬H)) → (C → (¬H)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "X",
      "(X → X)"
    ],
    "conclusion": "X",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "H",
      "((¬D) → (((¬D) → (¬H)) → (D → D)))"
    ],
    "conclusion": "(((¬D) → (¬H)) → (D → D))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "V",
      "((¬T) → (((¬V) → T) → (¬V)))"
    ],
    "conclusion": "(((¬V) → T) → (¬V))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(F → (¬F))",
      "F",
      "((¬U) → (((¬U) → U) → ((¬F) → F)))"
    ],
    "conclusion": "(¬F)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬V) → ((V → X) → (V → X)))",
      "(¬V)"
    ],
    "conclusion": "((V → X) → (V → X))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(R → ((R → R) → (¬K)))",
      "R",
      "(((¬K) → (K → (¬R))) → ((¬R) → ((¬R) → (¬K))))"
    ],
    "conclusion": "((R → R) → (¬K))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Q → (¬Q))",
      "Q",
      "(((Q → Q) → Q) → S)"
    ],
    "conclusion": "(¬Q)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬D) → (((¬F) → F) → (¬D)))",
      "(¬D)",
      "((((¬F) → F) → (¬F)) → (F → ((¬D) → F)))"
    ],
    "conclusion": "(((¬F) → F) → (¬D))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(V → (¬V))",
      "((¬K) → (((¬V) → V) → (V → V)))",
      "V"
    ],
    "conclusion": "(¬V)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "D",
      "((((¬D) → D) → D) → (((¬D) → D) → (D → (¬D))))",
      "(D → D)"
    ],
    "conclusion": "D",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Q → (((¬R) → Q) → R))",
      "(((R → R) → (Q → (¬Q))) → (¬Q))",
      "Q"
    ],
    "conclusion": "(((¬R) → Q) → R)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬F) → (((¬F) → (¬F)) → ((¬F) → (¬U))))",
      "(((F → F) → F) → ((¬U) → ((¬F) → (¬F))))",
      "(¬F)"
    ],
    "conclusion": "(((¬F) → (¬F)) → ((¬F) → (¬U)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬I) → ((E → (¬E)) → (E → I)))",
      "(¬I)"
    ],
    "conclusion": "((E → (¬E)) → (E → I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "R",
      "(((H → (¬H)) → (H → (¬H))) → ((R → (¬R)) → ((¬H) → (¬H))))",
      "(R → (((¬R) → R) → ((¬R) → (¬H))))"
    ],
    "conclusion": "(((¬R) → R) → ((¬R) → (¬H)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬U) → ((¬R) → ((¬U) → (¬U))))",
      "(¬U)"
    ],
    "conclusion": "((¬R) → ((¬U) → (¬U)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Z",
      "(Z → (((¬R) → (¬R)) → ((¬Z) → (¬Z))))",
      "R"
    ],
    "conclusion": "(((¬R) → (¬R)) → ((¬Z) → (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(I → (I → U))",
      "I"
    ],
    "conclusion": "(I → U)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((V → M) → ((¬V) → (¬M))) → (((¬M) → (¬M)) → (M → M)))",
      "(V → ((V → V) → ((¬V) → M)))",
      "V"
    ],
    "conclusion": "((V → V) → ((¬V) → M))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "(((I → I) → ((¬I) → (¬E))) → ((I → (¬E)) → (¬I)))",
      "((¬I) → (E → ((¬I) → (¬E))))"
    ],
    "conclusion": "(E → ((¬I) → (¬E)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((¬R) → (((¬A) → A) → (A → R)))"
    ],
    "conclusion": "(((¬A) → A) → (A → R))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬H) → (((¬N) → (¬H)) → ((¬N) → N)))",
      "(¬H)",
      "(((H → (¬N)) → (H → (¬H))) → (¬H))"
    ],
    "conclusion": "(((¬N) → (¬H)) → ((¬N) → N))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "G",
      "(G → ((E → (¬G)) → (G → E)))"
    ],
    "conclusion": "((E → (¬G)) → (G → E))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬M) → (M → (M → (¬M))))",
      "(¬M)",
      "((((¬L) → (¬L)) → (L → (¬M))) → L)"
    ],
    "conclusion": "(M → (M → (¬M)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((X → X) → (J → J)) → X)",
      "(X → (((¬J) → X) → (X → (¬X))))",
      "X"
    ],
    "conclusion": "(((¬J) → X) → (X → (¬X)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "(¬T)",
      "((¬T) → ((¬F) → (F → (¬F))))"
    ],
    "conclusion": "((¬F) → (F → (¬F)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬U) → ((M → M) → ((¬U) → U)))",
      "(¬U)",
      "(¬U)"
    ],
    "conclusion": "((M → M) → ((¬U) → U))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬E) → (¬E)) → W) → (¬E))",
      "((¬W) → (¬W))",
      "(¬W)"
    ],
    "conclusion": "(¬W)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(W → (((¬S) → W) → (S → S)))",
      "W",
      "(((W → (¬S)) → S) → (W → (W → S)))"
    ],
    "conclusion": "(((¬S) → W) → (S → S))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "N",
      "(¬L)",
      "((¬L) → (((¬N) → N) → ((¬L) → L)))"
    ],
    "conclusion": "(((¬N) → N) → ((¬L) → L))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬F) → F) → ((¬F) → H)) → ((H → (¬F)) → ((¬H) → (¬F))))",
      "((¬F) → (((¬F) → (¬F)) → H))",
      "(¬F)"
    ],
    "conclusion": "(((¬F) → (¬F)) → H)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(F → ((O → (¬F)) → (O → (¬O))))",
      "F",
      "((((¬O) → (¬F)) → ((¬O) → O)) → ((¬F) → F))"
    ],
    "conclusion": "((O → (¬F)) → (O → (¬O)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Z → (((¬L) → (¬L)) → ((¬L) → Z)))",
      "Z"
    ],
    "conclusion": "(((¬L) → (¬L)) → ((¬L) → Z))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((T → T) → ((H → T) → ((¬T) → H)))",
      "(¬T)",
      "((¬T) → (¬H))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((R → (¬M)) → ((¬M) → M)) → ((R → (¬R)) → ((¬R) → R)))",
      "(R → (((¬R) → (¬R)) → ((¬M) → (¬M))))",
      "R"
    ],
    "conclusion": "(((¬R) → (¬R)) → ((¬M) → (¬M)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "(((Q → Y) → ((¬Q) → Y)) → ((Q → Q) → ((¬Y) → Y)))",
      "((¬Q) → (¬Q))"
    ],
    "conclusion": "(¬Q)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬P) → P) → ((¬M) → P)) → (((¬P) → (¬M)) → ((¬M) → P)))",
      "M",
      "(M → M)"
    ],
    "conclusion": "M",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "H",
      "(H → (((¬R) → R) → H))"
    ],
    "conclusion": "(((¬R) → R) → H)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Q",
      "(Q → (((¬Q) → (¬Q)) → ((¬Q) → Q)))"
    ],
    "conclusion": "(((¬Q) → (¬Q)) → ((¬Q) → Q))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Z) → Z)",
      "(¬Z)"
    ],
    "conclusion": "Z",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬E) → ((L → (¬E)) → (¬E)))",
      "(¬L)",
      "((¬L) → ((L → (¬E)) → (L → L)))"
    ],
    "conclusion": "((L → (¬E)) → (L → L))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "X",
      "((((¬Q) → (¬Q)) → (¬Q)) → (((¬Q) → (¬Q)) → ((¬X) → Q)))",
      "(X → (((¬X) → (¬Q)) → ((¬X) → (¬X))))"
    ],
    "conclusion": "(((¬X) → (¬Q)) → ((¬X) → (¬X)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "F",
      "((¬W) → ((W → (¬W)) → (F → F)))"
    ],
    "conclusion": "((W → (¬W)) → (F → F))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬P) → Q) → (Q → Q)) → ((Q → P) → ((¬P) → (¬Q))))",
      "P",
      "(P → (((¬Q) → (¬Q)) → ((¬Q) → P)))"
    ],
    "conclusion": "(((¬Q) → (¬Q)) → ((¬Q) → P))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Y) → ((I → (¬Y)) → ((¬Y) → (¬Y))))",
      "(¬Y)",
      "(((¬Y) → ((¬Y) → I)) → (((¬Y) → I) → ((¬Y) → (¬Y))))"
    ],
    "conclusion": "((I → (¬Y)) → ((¬Y) → (¬Y)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "((¬O) → ((O → (¬Q)) → ((¬O) → O)))",
      "(((O → Q) → ((¬Q) → (¬O))) → (((¬Q) → Q) → Q))"
    ],
    "conclusion": "((O → (¬Q)) → ((¬O) → O))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "S",
      "(((L → (¬L)) → (S → L)) → (((¬L) → (¬S)) → ((¬L) → S)))",
      "(S → (((¬L) → (¬L)) → (¬S)))"
    ],
    "conclusion": "(((¬L) → (¬L)) → (¬S))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "G",
      "(G → K)",
      "(((¬K) → ((¬G) → (¬K))) → (((¬G) → (¬G)) → (K → G)))"
    ],
    "conclusion": "K",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "((¬N) → (¬N))"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬A) → A) → ((¬E) → (¬E))) → ((¬E) → E))",
      "(E → ((E → A) → ((¬A) → (¬E))))",
      "E"
    ],
    "conclusion": "((E → A) → ((¬A) → (¬E)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(F → (T → (T → T)))",
      "((((¬F) → T) → ((¬T) → (¬F))) → ((¬F) → (F → (¬T))))",
      "F"
    ],
    "conclusion": "(T → (T → T))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((O → (¬K)) → ((¬K) → O)) → ((O → O) → ((¬K) → (¬O))))",
      "O",
      "(O → ((O → (¬K)) → ((¬K) → (¬O))))"
    ],
    "conclusion": "((O → (¬K)) → ((¬K) → (¬O)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(F → (((¬S) → F) → ((¬S) → (¬F))))",
      "F",
      "F"
    ],
    "conclusion": "(((¬S) → F) → ((¬S) → (¬F)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬J) → (¬J)) → (J → (¬J))) → ((¬L) → ((¬L) → L)))",
      "L",
      "(L → ((L → (¬J)) → ((¬L) → (¬J))))"
    ],
    "conclusion": "((L → (¬J)) → ((¬L) → (¬J)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬V) → (¬V))",
      "(¬V)",
      "((((¬L) → V) → ((¬V) → (¬V))) → (((¬V) → V) → (V → L)))"
    ],
    "conclusion": "(¬V)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬V) → V) → (L → (¬L))) → ((V → L) → ((¬V) → L)))",
      "((¬L) → ((¬L) → ((¬V) → (¬V))))",
      "(¬L)"
    ],
    "conclusion": "((¬L) → ((¬V) → (¬V)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "((¬C) → K)"
    ],
    "conclusion": "K",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((H → (¬B)) → ((¬H) → (¬H))) → (¬B))",
      "B",
      "(B → ((B → (¬H)) → (H → (¬B))))"
    ],
    "conclusion": "((B → (¬H)) → (H → (¬B)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "(H → (¬H))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "((¬X) → (((¬X) → V) → (V → X)))"
    ],
    "conclusion": "(((¬X) → V) → (V → X))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "T",
      "((((¬F) → T) → ((¬T) → (¬F))) → ((T → T) → (T → F)))",
      "(T → ((F → T) → (F → T)))"
    ],
    "conclusion": "((F → T) → (F → T))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬S) → (¬Q)) → ((¬S) → (¬S))) → (Q → S))",
      "(Q → (((¬Q) → S) → ((¬S) → S)))",
      "Q"
    ],
    "conclusion": "(((¬Q) → S) → ((¬S) → S))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬W) → W) → ((¬W) → (¬W))) → ((P → W) → (W → (¬W))))",
      "(P → W)",
      "P"
    ],
    "conclusion": "W",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "C",
      "(C → (¬O))"
    ],
    "conclusion": "(¬O)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬X)",
      "(((X → P) → ((¬X) → X)) → (((¬X) → (¬X)) → (X → X)))",
      "((¬X) → ((X → (¬P)) → (X → (¬X))))"
    ],
    "conclusion": "((X → (¬P)) → (X → (¬X)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬N) → ((¬N) → ((¬N) → (¬L))))",
      "((L → (N → (¬L))) → (((¬N) → N) → (L → N)))",
      "(¬N)"
    ],
    "conclusion": "((¬N) → ((¬N) → (¬L)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((L → (L → L)) → ((F → L) → (L → (¬L))))",
      "((¬L) → ((L → (¬F)) → (L → (¬F))))"
    ],
    "conclusion": "((L → (¬F)) → (L → (¬F)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(B → (((¬B) → (¬C)) → (B → (¬C))))",
      "B"
    ],
    "conclusion": "(((¬B) → (¬C)) → (B → (¬C)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((¬D) → I)",
      "D"
    ],
    "conclusion": "I",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(O → (((¬I) → (¬O)) → (O → (¬I))))",
      "((¬I) → (((¬I) → I) → ((¬I) → (¬O))))",
      "O"
    ],
    "conclusion": "(((¬I) → (¬O)) → (O → (¬I)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "I",
      "(I → (I → I))"
    ],
    "conclusion": "(I → (I → I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "A",
      "((A → ((¬Z) → (¬Z))) → (((¬A) → Z) → (A → Z)))",
      "(A → (((¬Z) → Z) → ((¬Z) → (¬Z))))"
    ],
    "conclusion": "(((¬Z) → Z) → ((¬Z) → (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(J → E)",
      "J",
      "((¬E) → (((¬E) → E) → ((¬E) → (¬J))))"
    ],
    "conclusion": "E",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(L → L)",
      "L"
    ],
    "conclusion": "L",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((L → N) → ((¬N) → (¬N))) → (((¬L) → (¬L)) → L))",
      "((¬N) → (¬N))",
      "(¬N)"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬B) → (((¬K) → K) → (B → K)))",
      "((((¬K) → (¬B)) → (K → B)) → (((¬B) → (¬K)) → ((¬K) → (¬B))))",
      "(¬B)"
    ],
    "conclusion": "(((¬K) → K) → (B → K))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(R → (((¬S) → (¬R)) → (S → (¬S))))",
      "R",
      "S"
    ],
    "conclusion": "(((¬S) → (¬R)) → (S → (¬S)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "I",
      "(I → ((D → (¬I)) → ((¬D) → (¬D))))",
      "((¬D) → (((¬D) → I) → (I → D)))"
    ],
    "conclusion": "((D → (¬I)) → ((¬D) → (¬D)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Q",
      "(¬Q)",
      "((¬Q) → ((W → (¬Q)) → ((¬Q) → (¬W))))"
    ],
    "conclusion": "((W → (¬Q)) → ((¬Q) → (¬W)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Z → ((X → (¬X)) → Z))",
      "X",
      "(X → (¬Z))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬S) → (((¬S) → (¬S)) → ((¬P) → P)))",
      "(¬S)",
      "(((S → (¬P)) → ((¬P) → P)) → (¬P))"
    ],
    "conclusion": "(((¬S) → (¬S)) → ((¬P) → P))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬F) → ((L → (¬F)) → (¬F)))",
      "(¬F)",
      "((¬L) → ((L → (¬F)) → (F → (¬L))))"
    ],
    "conclusion": "((L → (¬F)) → (¬F))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(S → (((¬S) → (¬S)) → ((¬S) → (¬P))))",
      "S",
      "((((¬P) → (¬P)) → (S → (¬S))) → (((¬P) → S) → ((¬P) → P)))"
    ],
    "conclusion": "(((¬S) → (¬S)) → ((¬S) → (¬P)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬L) → (((¬L) → Z) → Z))",
      "(¬L)",
      "(((¬L) → ((¬L) → (¬Z))) → ((L → L) → (Z → Z)))"
    ],
    "conclusion": "(((¬L) → Z) → Z)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬V)",
      "((¬V) → (((¬V) → V) → (T → (¬T))))"
    ],
    "conclusion": "(((¬V) → V) → (T → (¬T)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Z) → ((Z → Z) → ((¬I) → (¬Z))))",
      "(¬Z)"
    ],
    "conclusion": "((Z → Z) → ((¬I) → (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "E",
      "(((¬V) → (¬E)) → ((E → V) → ((¬E) → E)))",
      "(E → (V → (¬E)))"
    ],
    "conclusion": "(V → (¬E))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(N → (¬N))",
      "((N → (¬N)) → (¬G))"
    ],
    "conclusion": "(¬G)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "N",
      "(N → (A → A))"
    ],
    "conclusion": "(A → A)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(B → ((R → R) → ((¬R) → (¬B))))",
      "(R → ((B → B) → (¬B)))",
      "B"
    ],
    "conclusion": "((R → R) → ((¬R) → (¬B)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Q",
      "(Q → (((¬R) → Q) → ((¬Q) → R)))"
    ],
    "conclusion": "(((¬R) → Q) → ((¬Q) → R))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((G → (¬V)) → (¬V)) → ((V → V) → ((¬V) → V)))",
      "((¬G) → V)",
      "(¬G)"
    ],
    "conclusion": "V",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((¬P) → (¬P))",
      "((((¬M) → (¬P)) → P) → (¬P))"
    ],
    "conclusion": "(¬P)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((¬R) → ((U → (¬R)) → (¬R)))"
    ],
    "conclusion": "((U → (¬R)) → (¬R))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬K) ∨ (¬K)) ↔ (J ∧ K)) ¬ ((K ¬ K) ¬ ((¬J) ¬ (¬J))))",
      "(J → ((J → J) ∨ (¬J)))",
      "J"
    ],
    "conclusion": "((J → J) ∨ (¬J))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((D ∨ (¬D)) ¬ ((¬D) ↔ D)) ⊕ (¬D))",
      "Z",
      "(Z → (((¬D) ∨ (¬Z)) ∧ ((¬D) ∨ (¬Z))))"
    ],
    "conclusion": "(((¬D) ∨ (¬Z)) ∧ ((¬D) ∨ (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "((¬S) → (((¬S) → (¬M)) ¬ M))"
    ],
    "conclusion": "(((¬S) → (¬M)) ¬ M)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬C) → (¬C))",
      "(¬C)",
      "((((¬C) ↔ X) ∧ X) ¬ ((¬X) ∧ (¬X)))"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "(¬Q)",
      "((¬Q) → Q)"
    ],
    "conclusion": "Q",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "A",
      "(A → ((X ↔ (¬X)) ∨ ((¬X) ⊕ X)))"
    ],
    "conclusion": "((X ↔ (¬X)) ∨ ((¬X) ⊕ X))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "C",
      "((((¬Y) ∧ Y) ⊕ ((¬Y) ∧ Y)) ↔ (((¬Y) ¬ (¬Y)) ↔ (¬Y)))",
      "(C → C)"
    ],
    "conclusion": "C",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((¬F) → (¬A))",
      "(((F ⊕ (¬F)) ¬ ((¬F) ¬ (¬F))) ¬ F)"
    ],
    "conclusion": "(¬A)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬D) → ((¬I) ↔ ((¬I) → (¬I))))",
      "(¬D)",
      "(((I ¬ (¬D)) ¬ ((¬D) → I)) ∨ ((¬D) ↔ (I ∧ (¬I))))"
    ],
    "conclusion": "((¬I) ↔ ((¬I) → (¬I)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "R",
      "(R → (((¬R) ∧ R) ∧ L))"
    ],
    "conclusion": "R",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Q → (((¬Q) ∨ (¬J)) ∨ ((¬Q) ¬ Q)))",
      "Q"
    ],
    "conclusion": "(((¬Q) ∨ (¬J)) ∨ ((¬Q) ¬ Q))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "E",
      "(E → (((¬E) ¬ E) ¬ ((¬M) ¬ (¬M))))",
      "((((¬M) ↔ (¬E)) → (M ¬ (¬E))) → (((¬M) ∧ E) ¬ ((¬M) ∨ (¬M))))"
    ],
    "conclusion": "(((¬E) ¬ E) ¬ ((¬M) ¬ (¬M)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "M",
      "(M → ((C ∨ M) ¬ ((¬C) ∧ (¬C))))"
    ],
    "conclusion": "((C ∨ M) ¬ ((¬C) ∧ (¬C)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "S",
      "(S → (¬S))"
    ],
    "conclusion": "(¬S)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬I) → (¬R))",
      "(¬I)",
      "((((¬I) ⊕ (¬R)) ∨ (R ¬ (¬R))) → R)"
    ],
    "conclusion": "(¬R)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Y",
      "(((Y ¬ Y) ¬ ((¬Y) ∧ (¬Y))) ⊕ ((¬Y) ∧ Y))",
      "(Y → (((¬A) ¬ A) ∨ (¬Y)))"
    ],
    "conclusion": "(((¬A) ¬ A) ∨ (¬Y))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(P → ((L ∧ P) ↔ ((¬P) ¬ L)))",
      "P"
    ],
    "conclusion": "((L ∧ P) ↔ ((¬P) ¬ L))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬G)",
      "((G → ((¬G) → W)) ↔ (((¬G) ↔ (¬W)) ⊕ (G ∨ (¬W))))",
      "((¬G) → (¬W))"
    ],
    "conclusion": "(¬W)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((¬F) → (¬F))"
    ],
    "conclusion": "(¬F)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(R → ((R ∧ (¬R)) ⊕ (R ⊕ P)))",
      "(R ∨ (((¬P) ∨ R) ¬ (P ∧ (¬P))))",
      "R"
    ],
    "conclusion": "((R ∧ (¬R)) ⊕ (R ⊕ P))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬A) ¬ (¬E)) ¬ ((¬A) ↔ A)) → ((E ¬ (¬A)) ↔ ((¬E) ¬ (¬A))))",
      "(¬A)",
      "((¬A) → A)"
    ],
    "conclusion": "A",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "L",
      "((¬B) ∧ (¬B))",
      "(L → ((B ⊕ (¬B)) → ((¬L) ∧ (¬L))))"
    ],
    "conclusion": "((B ⊕ (¬B)) → ((¬L) ∧ (¬L)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬P) → (¬K)) → (P ∧ (¬P))) → ((P → (¬P)) ∨ ((¬K) ⊕ K)))",
      "(¬K)",
      "((¬K) → (¬K))"
    ],
    "conclusion": "(¬K)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬I) ∧ (¬I)) ⊕ (I ⊕ (¬P))) ¬ (((¬P) ∧ P) → (¬P)))",
      "((¬P) → ((P ∨ (¬P)) ⊕ (I ↔ I)))",
      "(¬P)"
    ],
    "conclusion": "((P ∨ (¬P)) ⊕ (I ↔ I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬V) → ((A ¬ (¬V)) ⊕ (V → (¬A))))",
      "(¬V)"
    ],
    "conclusion": "((A ¬ (¬V)) ⊕ (V → (¬A)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "V",
      "(V → ((N ⊕ (¬V)) ∧ ((¬N) → (¬V))))"
    ],
    "conclusion": "((N ⊕ (¬V)) ∧ ((¬N) → (¬V)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "G",
      "(G → (((¬Y) ¬ (¬G)) ↔ (¬G)))"
    ],
    "conclusion": "(((¬Y) ¬ (¬G)) ↔ (¬G))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬H) → (((¬B) ¬ (¬H)) ∧ ((¬B) ↔ B)))",
      "(¬H)",
      "H"
    ],
    "conclusion": "(((¬B) ¬ (¬H)) ∧ ((¬B) ↔ B))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬T) ⊕ T) ¬ (T ⊕ H)) → (¬H))",
      "(H → (((¬H) ∨ T) ↔ ((¬T) ∧ (¬H))))",
      "H"
    ],
    "conclusion": "(((¬H) ∨ T) ↔ ((¬T) ∧ (¬H)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "P",
      "(P → P)",
      "(¬P)"
    ],
    "conclusion": "P",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(N → ((N ∨ (¬N)) ∧ ((¬W) ¬ (¬N))))",
      "N"
    ],
    "conclusion": "((N ∨ (¬N)) ∧ ((¬W) ¬ (¬N)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬I) → ((B ↔ I) → (I ¬ I)))",
      "((((¬I) ∨ (¬B)) ¬ (I ↔ B)) ¬ (¬I))",
      "(¬I)"
    ],
    "conclusion": "((B ↔ I) → (I ¬ I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "((¬O) → (((¬K) ∧ K) ∧ (O → K)))"
    ],
    "conclusion": "(¬O)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "G",
      "(G → (((¬G) ∨ G) → (O → G)))"
    ],
    "conclusion": "(((¬G) ∨ G) → (O → G))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬O) ∧ (¬O))",
      "(U → (((¬U) ↔ U) ⊕ U))",
      "U"
    ],
    "conclusion": "(((¬U) ↔ U) ⊕ U)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "((((¬G) ∨ (¬G)) → (G ¬ G)) ⊕ (¬N))",
      "((¬N) → ((N ¬ (¬N)) ⊕ (G ∨ G)))"
    ],
    "conclusion": "((N ¬ (¬N)) ⊕ (G ∨ G))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(I → (¬Q))",
      "I",
      "(I ¬ ((Q → (¬I)) → ((¬I) ↔ Q)))"
    ],
    "conclusion": "(¬Q)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "H",
      "((¬S) → ((S → H) ∧ (S ∧ (¬S))))"
    ],
    "conclusion": "H",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(K → K)",
      "K",
      "K"
    ],
    "conclusion": "K",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "I",
      "(I → ((¬Y) ¬ ((¬Y) ¬ I)))"
    ],
    "conclusion": "((¬Y) ¬ ((¬Y) ¬ I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "((¬Z) → Z)"
    ],
    "conclusion": "Z",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "N",
      "(N → ((O ↔ (¬O)) ¬ (O → N)))"
    ],
    "conclusion": "((O ↔ (¬O)) ¬ (O → N))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(L → ((M ∧ L) ↔ L))",
      "L"
    ],
    "conclusion": "((M ∧ L) ↔ L)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "U",
      "(U → (((¬U) → (¬U)) ¬ (¬Z)))",
      "(((U ¬ U) ∧ (U ∨ (¬U))) ¬ (((¬Z) ¬ U) ∨ ((¬U) ¬ Z)))"
    ],
    "conclusion": "(((¬U) → (¬U)) ¬ (¬Z))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(E → (((¬E) → N) ∨ (E ∨ (¬N))))",
      "((((¬N) ⊕ E) ∧ ((¬N) ∨ (¬E))) → ((E → (¬E)) ∧ (E ⊕ N)))",
      "E"
    ],
    "conclusion": "(((¬E) → N) ∨ (E ∨ (¬N)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "(H → ((¬N) → ((¬N) ¬ H)))"
    ],
    "conclusion": "((¬N) → ((¬N) ¬ H))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬C) → (((¬T) ∧ (¬T)) ¬ (C → (¬T))))",
      "(¬C)",
      "(((T ¬ C) ¬ ((¬T) ∧ (¬C))) ¬ C)"
    ],
    "conclusion": "(((¬T) ∧ (¬T)) ¬ (C → (¬T)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((K ¬ ((¬D) ∧ D)) ¬ ((K ∧ K) → (D ¬ (¬D))))",
      "(¬K)",
      "((¬K) → (((¬K) ∨ K) ¬ ((¬K) → (¬D))))"
    ],
    "conclusion": "(((¬K) ∨ K) ¬ ((¬K) → (¬D)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Y",
      "(Y → ((¬O) ⊕ (¬Y)))"
    ],
    "conclusion": "((¬O) ⊕ (¬Y))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬C) → ((¬C) ⊕ (L → L)))",
      "L",
      "(¬C)"
    ],
    "conclusion": "((¬C) ⊕ (L → L))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(F → ((¬Z) → ((¬F) → Z)))",
      "F"
    ],
    "conclusion": "((¬Z) → ((¬F) → Z))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "X",
      "(X → (((¬X) → (¬E)) → ((¬E) → (¬E))))"
    ],
    "conclusion": "(((¬X) → (¬E)) → ((¬E) → (¬E)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "L",
      "(L → (¬V))"
    ],
    "conclusion": "(¬V)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬L) → (((¬W) → E) → ((¬W) → (¬E))))",
      "(¬L)"
    ],
    "conclusion": "(((¬W) → E) → ((¬W) → (¬E)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬S) → ((H → K) → ((¬K) → (¬S))))",
      "(¬S)"
    ],
    "conclusion": "((H → K) → ((¬K) → (¬S)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((Q ¬ (¬Z)) ¬ ((¬Z) ¬ Z)) → Z)",
      "(¬Z)"
    ],
    "conclusion": "(¬((Q ¬ (¬Z)) ¬ ((¬Z) ¬ Z)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((¬P) → (P ¬ (O → (¬P))))",
      "(((P → O) ¬ (O → P)) → P)"
    ],
    "conclusion": "(¬((P → O) ¬ (O → P)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬E) → (F → ((¬F) → E)))",
      "((((¬E) ¬ (¬F)) → ((¬F) ¬ (¬F))) → E)",
      "(¬E)"
    ],
    "conclusion": "(¬(((¬E) ¬ (¬F)) → ((¬F) ¬ (¬F))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬N) ¬ N) ¬ (¬S)) ¬ ((S → (¬S)) ¬ (S → S)))",
      "(¬N)",
      "(N → N)"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬W) ¬ (¬W)) → (W → (¬W))) ¬ ((W ¬ (¬W)) → (W ¬ (¬W))))",
      "(¬C)",
      "(((W ¬ C) → (W ¬ W)) → C)"
    ],
    "conclusion": "(¬((W ¬ C) → (W ¬ W)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((D ¬ (¬D)) ¬ (D ¬ (¬B))) → D)",
      "(¬D)",
      "(((B ¬ (¬D)) → ((¬B) → (¬B))) → (¬B))"
    ],
    "conclusion": "(¬((D ¬ (¬D)) ¬ (D ¬ (¬B))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬J) → (¬J)) ¬ (J → (¬J))) → J)",
      "(¬J)"
    ],
    "conclusion": "(¬(((¬J) → (¬J)) ¬ (J → (¬J))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬G) → (¬P)) ¬ ((¬G) → (¬P))) → G)",
      "(¬G)",
      "((P → (G ¬ (¬G))) → ((G → (¬G)) ¬ ((¬G) ¬ (¬G))))"
    ],
    "conclusion": "(¬(((¬G) → (¬P)) ¬ ((¬G) → (¬P))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬D) ¬ ((¬M) ¬ (¬M))) → M)",
      "(((M ¬ D) → (M ¬ M)) → ((D ¬ (¬D)) ¬ ((¬D) → (¬M))))",
      "(¬M)"
    ],
    "conclusion": "(¬((¬D) ¬ ((¬M) ¬ (¬M))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((E → N) ¬ (((¬N) ¬ E) ¬ ((¬E) ¬ N)))",
      "(¬E)",
      "(((¬N) ¬ (¬E)) → E)"
    ],
    "conclusion": "(¬((¬N) ¬ (¬E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬O) → (¬C)) → (¬C)) → O)",
      "(¬O)"
    ],
    "conclusion": "(¬(((¬O) → (¬C)) → (¬C)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬R) → R) ¬ ((¬O) → (¬R))) → (¬R))",
      "(((O ¬ R) ¬ (¬R)) → O)",
      "(¬O)"
    ],
    "conclusion": "(¬((O ¬ R) ¬ (¬R)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬A) → ((¬N) → ((¬N) ¬ A)))",
      "(((A → N) ¬ ((¬N) → N)) → A)",
      "(¬A)"
    ],
    "conclusion": "(¬((A → N) ¬ ((¬N) → N)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(T → T)",
      "(¬T)"
    ],
    "conclusion": "(¬T)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((V ¬ V) ¬ (¬V)) → V)",
      "(¬V)",
      "((((¬V) ¬ V) ¬ ((¬V) ¬ (¬V))) ¬ (((¬V) ¬ V) → ((¬W) ¬ V)))"
    ],
    "conclusion": "(¬((V ¬ V) ¬ (¬V)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "T",
      "(((P → (¬T)) ¬ (T → P)) → T)"
    ],
    "conclusion": "(¬((P → (¬T)) ¬ (T → P)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬T) → G)",
      "(¬G)",
      "((G ¬ G) → (T ¬ ((¬G) → (¬T))))"
    ],
    "conclusion": "(¬(¬T))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((F → (¬O)) → (¬F)) → F)",
      "(¬F)"
    ],
    "conclusion": "(¬((F → (¬O)) → (¬F)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "((¬E) → E)",
      "((((¬K) ¬ E) → (K ¬ K)) ¬ (((¬E) ¬ (¬K)) ¬ E))"
    ],
    "conclusion": "(¬(¬E))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "(((F → F) ¬ ((¬A) → F)) → (¬F))",
      "((((¬F) → F) ¬ ((¬A) → F)) → A)"
    ],
    "conclusion": "(¬(((¬F) → F) ¬ ((¬A) → F)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((O ¬ W) ¬ ((¬O) ¬ O)) → W)",
      "((((¬O) → O) → ((¬O) ¬ (¬O))) → (((¬O) ¬ W) → ((¬W) → (¬O))))",
      "(¬W)"
    ],
    "conclusion": "(¬((O ¬ W) ¬ ((¬O) ¬ O)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((J → (¬J)) ¬ (¬R)) → J)",
      "(((J ¬ R) ¬ J) ¬ (((¬J) → (¬J)) ¬ ((¬J) → J)))",
      "(¬J)"
    ],
    "conclusion": "(¬((J → (¬J)) ¬ (¬R)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((M ¬ M) → (M → (¬S))) → S)",
      "(¬S)",
      "(((M ¬ (¬M)) ¬ (S → S)) → M)"
    ],
    "conclusion": "(¬((M ¬ M) → (M → (¬S))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(C → C)",
      "(¬C)",
      "((¬Z) ¬ (C ¬ (C ¬ (¬Z))))"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬C) → W)",
      "(((W ¬ (¬C)) → (W ¬ W)) ¬ ((W ¬ W) → (C → W)))",
      "(¬W)"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬K) → K)",
      "(¬K)",
      "(¬Z)"
    ],
    "conclusion": "(¬(¬K))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬E) ¬ (¬E)) → ((¬E) ¬ (¬E))) → A)",
      "(¬A)"
    ],
    "conclusion": "(¬(((¬E) ¬ (¬E)) → ((¬E) ¬ (¬E))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬O) → Q)",
      "(¬Q)"
    ],
    "conclusion": "(¬(¬O))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "((H → B) → B)"
    ],
    "conclusion": "(¬(H → B))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "(((B → (¬E)) ¬ (B ¬ E)) → E)",
      "((((¬B) → (¬B)) ¬ (B → E)) → ((E ¬ (¬E)) ¬ ((¬E) ¬ B)))"
    ],
    "conclusion": "(¬((B → (¬E)) ¬ (B ¬ E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((K ¬ (¬T)) → (T ¬ K)) ¬ ((T → (¬T)) ¬ (T ¬ (¬K))))",
      "(¬T)",
      "((((¬T) → (¬K)) → ((¬K) ¬ (¬K))) → T)"
    ],
    "conclusion": "(¬(((¬T) → (¬K)) → ((¬K) ¬ (¬K))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "(((M → M) → S) → M)"
    ],
    "conclusion": "(¬((M → M) → S))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((((¬E) → (¬E)) → (E → E)) → P)"
    ],
    "conclusion": "(¬(((¬E) → (¬E)) → (E → E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬C) → B)",
      "(¬B)",
      "((((¬B) ¬ (¬C)) ¬ ((¬B) ¬ C)) → (((¬C) → (¬B)) → (B → (¬B))))"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(((Y ¬ (¬W)) → Y) → ((W ¬ W) ¬ (Y ¬ Y)))",
      "((((¬Y) → (¬Y)) → ((¬Y) → W)) → W)"
    ],
    "conclusion": "(¬(((¬Y) → (¬Y)) → ((¬Y) → W)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(R → N)",
      "(¬N)"
    ],
    "conclusion": "(¬R)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "((Q ¬ (¬Q)) → Q)",
      "((((¬U) ¬ Q) → Q) ¬ U)"
    ],
    "conclusion": "(¬(Q ¬ (¬Q)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬P) → Y) ¬ (Y → (¬P))) ¬ Y)",
      "(¬P)",
      "(P → P)"
    ],
    "conclusion": "(¬P)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((((¬P) → (¬P)) → ((¬E) → (¬P))) → P)"
    ],
    "conclusion": "(¬(((¬P) → (¬P)) → ((¬E) → (¬P))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬G) ¬ S) → (G ¬ (¬S))) → S)",
      "(¬S)"
    ],
    "conclusion": "(¬(((¬G) ¬ S) → (G ¬ (¬S))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "((((¬M) → (¬I)) ¬ (M → (¬I))) → M)"
    ],
    "conclusion": "(¬(((¬M) → (¬I)) ¬ (M → (¬I))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((G ¬ (¬X)) ¬ ((¬G) ¬ X)) → (((¬G) → (¬G)) ¬ ((¬X) ¬ G)))",
      "(((X → (¬X)) → (G → (¬X))) → G)",
      "(¬G)"
    ],
    "conclusion": "(¬((X → (¬X)) → (G → (¬X))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "(((L ¬ J) → ((¬J) ¬ J)) → J)"
    ],
    "conclusion": "(¬((L ¬ J) → ((¬J) ¬ J)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((L → (¬T)) → (T ¬ (¬T))) → T)",
      "(¬T)"
    ],
    "conclusion": "(¬((L → (¬T)) → (T ¬ (¬T))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬T) → (Y ¬ (¬T))) → Y)",
      "((((¬Y) → (¬Y)) → (Y → (¬Y))) → ((Y → (¬Y)) → ((¬Y) ¬ Y)))",
      "(¬Y)"
    ],
    "conclusion": "(¬((¬T) → (Y ¬ (¬T))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "((¬J) → A)"
    ],
    "conclusion": "(¬(¬J))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((E → (¬E)) → (Y ¬ (¬E))) → Y)",
      "(¬Y)"
    ],
    "conclusion": "(¬((E → (¬E)) → (Y ¬ (¬E))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((G ¬ G) ¬ ((¬G) ¬ V)) → V)",
      "((((¬G) → (¬V)) → (¬G)) ¬ (V → (V → V)))",
      "(¬V)"
    ],
    "conclusion": "(¬((G ¬ G) ¬ ((¬G) ¬ V)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬B) → (¬Z)) → ((¬Z) ¬ (¬B))) → Z)",
      "(¬Z)",
      "((¬B) → (¬Z))"
    ],
    "conclusion": "(¬(((¬B) → (¬Z)) → ((¬Z) ¬ (¬B))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((D → D) → D)",
      "(((D → (¬B)) → ((¬B) ¬ (¬D))) → (((¬D) → (¬D)) ¬ ((¬D) ¬ (¬D))))"
    ],
    "conclusion": "(¬(D → D))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "P",
      "P",
      "(P → (((¬P) ¬ (¬E)) → P))"
    ],
    "conclusion": "(((¬P) ¬ (¬E)) → P)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬V) → ((N ¬ V) ¬ (N → (¬N))))",
      "(¬V)"
    ],
    "conclusion": "((N ¬ V) ¬ (N → (¬N)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((¬F) → (F ¬ (F ¬ (¬M))))"
    ],
    "conclusion": "(F ¬ (F ¬ (¬M)))",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "X",
      "(R → ((R → R) ¬ ((¬X) ¬ (¬R))))",
      "R"
    ],
    "conclusion": "((R → R) ¬ ((¬X) ¬ (¬R)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "V",
      "((¬V) ¬ ((¬X) ¬ (V ¬ (¬V))))",
      "(V → (((¬V) ¬ V) ¬ (X ¬ V)))"
    ],
    "conclusion": "(((¬V) ¬ V) ¬ (X ¬ V))",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Q",
      "(((¬Z) → ((¬Z) → Q)) → ((Z → (¬Z)) ¬ ((¬Z) → (¬Z))))",
      "(Q → ((Q ¬ Q) ¬ (Z → Z)))"
    ],
    "conclusion": "((Q ¬ Q) ¬ (Z → Z))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬E) ¬ P) → P) → (¬P))",
      "(((¬E) ¬ ((¬P) → E)) → E)",
      "(¬E)"
    ],
    "conclusion": "(¬((¬E) ¬ ((¬P) → E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "M",
      "((((¬O) ¬ M) ¬ (M → M)) → O)"
    ],
    "conclusion": "(¬(((¬O) ¬ M) ¬ (M → M)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(((O → (¬D)) ¬ (¬O)) → O)"
    ],
    "conclusion": "(¬((O → (¬D)) ¬ (¬O)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬X) → (¬X)) ¬ ((¬I) → (¬I))) → ((I ¬ X) → (I → X)))",
      "X",
      "(X → ((X → I) → ((¬X) ¬ (¬X))))"
    ],
    "conclusion": "((X → I) → ((¬X) ¬ (¬X)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "Z",
      "((((¬R) ¬ (¬R)) ¬ (¬Z)) → ((R → (¬Z)) ¬ (R ¬ Z)))",
      "(Z → (((¬R) → (¬Z)) ¬ ((¬Z) ¬ (¬Z))))"
    ],
    "conclusion": "(((¬R) → (¬Z)) ¬ ((¬Z) ¬ (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬M) ¬ (¬M)) → (M ¬ F)) → F)",
      "(¬F)"
    ],
    "conclusion": "(¬(((¬M) ¬ (¬M)) → (M ¬ F)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "J",
      "(((J → (¬J)) → ((¬U) → J)) ¬ ((U → (¬U)) → (J ¬ J)))",
      "(J → ((J → (¬U)) → ((¬J) ¬ U)))"
    ],
    "conclusion": "((J → (¬U)) → ((¬J) ¬ U))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬O) → (((¬N) → (¬N)) → (N → (¬N))))",
      "(¬O)",
      "((((¬N) → (¬N)) → (N ¬ N)) ¬ ((¬O) → ((¬O) ¬ N)))"
    ],
    "conclusion": "(((¬N) → (¬N)) → (N → (¬N)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬X) → (¬X))",
      "(¬X)",
      "((X → (I ¬ (¬X))) ¬ ((¬X) ¬ (I ¬ (¬X))))"
    ],
    "conclusion": "(¬X)",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((Z → (¬Z)) → (E ¬ (¬E))) → E)",
      "Z",
      "(¬E)"
    ],
    "conclusion": "(¬((Z → (¬Z)) → (E ¬ (¬E))))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "H",
      "(H → H)"
    ],
    "conclusion": "H",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "(((S → S) → (P → S)) ¬ (((¬S) → (¬S)) ¬ (S ¬ P)))",
      "((((¬S) ¬ S) → (P ¬ (¬P))) → S)"
    ],
    "conclusion": "(¬(((¬S) ¬ S) → (P ¬ (¬P))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(¬W)",
      "((¬W) → (((¬N) ¬ (¬N)) ¬ W))"
    ],
    "conclusion": "(((¬N) ¬ (¬N)) ¬ W)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((G → (G → I)) → G)",
      "(¬G)",
      "(((¬G) ¬ ((¬G) ¬ I)) ¬ G)"
    ],
    "conclusion": "(¬(G → (G → I)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬B) → (H → (¬H))) → H)",
      "(¬H)"
    ],
    "conclusion": "(¬((¬B) → (H → (¬H))))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬F) → O)",
      "(¬F)"
    ],
    "conclusion": "O",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → ((¬A) ¬ (¬A)))"
    ],
    "conclusion": "((¬A) ¬ (¬A))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "((¬E) → (¬E))",
      "(E → (¬B))"
    ],
    "conclusion": "(¬E)",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(S → (S → (S ¬ S)))",
      "(¬T)",
      "S"
    ],
    "conclusion": "(S → (S ¬ S))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "(H → (((¬V) → V) ¬ V))",
      "(((¬H) ¬ (V ¬ (¬H))) ¬ (((¬V) ¬ (¬V)) ¬ (¬H)))"
    ],
    "conclusion": "(((¬V) → V) ¬ V)",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "E",
      "((((¬E) → (¬E)) ¬ (V ¬ E)) ¬ ((¬E) → (¬V)))",
      "(E → (((¬E) → V) → ((¬V) ¬ E)))"
    ],
    "conclusion": "(((¬E) → V) → ((¬V) ¬ E))",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(E → (((¬T) → (¬T)) → (¬E)))",
      "E"
    ],
    "conclusion": "(((¬T) → (¬T)) → (¬E))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "I",
      "(I → (((¬I) → I) → (I → I)))",
      "((V → (V ¬ I)) ¬ ((I ¬ (¬V)) → (V ¬ (¬V))))"
    ],
    "conclusion": "(((¬I) → I) → (I → I))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "V",
      "(V → V)"
    ],
    "conclusion": "V",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "S",
      "((((¬S) ¬ (¬S)) → (S ¬ (¬H))) → ((H ¬ (¬H)) ¬ ((¬S) ¬ S)))",
      "(S → (¬H))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(((V ¬ V) ¬ (O ¬ O)) → O)"
    ],
    "conclusion": "(¬((V ¬ V) ¬ (O ¬ O)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((¬L) → ((L → L) ¬ (¬L)))"
    ],
    "conclusion": "((L → L) ¬ (¬L))",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "A",
      "(A → ((Z ¬ (¬A)) ¬ ((¬Z) → (¬Z))))",
      "(Z → A)"
    ],
    "conclusion": "((Z ¬ (¬A)) ¬ ((¬Z) → (¬Z)))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(U → ((¬G) → ((¬G) → (¬U))))",
      "(¬U)",
      "((((¬G) ¬ (¬U)) ¬ (U → (¬U))) → U)"
    ],
    "conclusion": "(¬(((¬G) ¬ (¬U)) ¬ (U → (¬U))))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "B",
      "((¬B) ¬ ((¬U) ¬ (¬U)))",
      "(B → ((B ¬ (¬U)) → ((¬B) → B)))"
    ],
    "conclusion": "((B ¬ (¬U)) → ((¬B) → B))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬Y)",
      "(((Y → Y) → Y) ¬ (¬Z))",
      "((¬Y) → (¬Z))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "((((¬E) → (¬O)) → E) → O)"
    ],
    "conclusion": "(¬(((¬E) → (¬O)) → E))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬G)",
      "(((Q ¬ G) → ((¬Q) → Q)) → G)"
    ],
    "conclusion": "(¬((Q ¬ G) → ((¬Q) → Q)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "(¬B)",
      "((¬B) → ((¬B) ¬ ((¬B) ¬ W)))"
    ],
    "conclusion": "((¬B) ¬ ((¬B) ¬ W))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬L) → (¬M)) ¬ (L ¬ M)) → L)",
      "(¬L)"
    ],
    "conclusion": "(¬(((¬L) → (¬M)) ¬ (L ¬ M)))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "((¬Z) → K)"
    ],
    "conclusion": "K",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((¬D) → ((¬X) → (X ¬ D)))",
      "(((D ¬ D) ¬ (D ¬ (¬D))) ¬ (((¬D) → X) → (X ¬ X)))"
    ],
    "conclusion": "((¬X) → (X ¬ D))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Y) → (¬D))",
      "(¬Y)",
      "((((¬Y) ¬ (¬D)) → (¬Y)) → (¬Y))"
    ],
    "conclusion": "(¬D)",
    "applied_rules": [
      "modus_ponens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬B) ¬ (O ¬ O)) → O)",
      "(¬O)",
      "O"
    ],
    "conclusion": "(¬((¬B) ¬ (O ¬ O)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬U) → U) ¬ (U ¬ (¬Z))) ¬ (((¬U) ¬ (¬Z)) ¬ Z))",
      "(((U ¬ U) → ((¬U) ¬ U)) → U)",
      "(¬U)"
    ],
    "conclusion": "(¬((U ¬ U) → ((¬U) ¬ U)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(Z → (((¬O) ¬ (¬Z)) → ((¬Z) ¬ (¬Z))))",
      "((¬O) → ((Z → (¬O)) → (¬O)))"
    ],
    "conclusion": "((Z → (¬O)) → (¬O))",
    "applied_rules": [
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬U) ¬ (D → ((¬D) ¬ (¬D))))",
      "(¬U)",
      "((D ¬ (U → (¬U))) → U)"
    ],
    "conclusion": "(¬(D ¬ (U → (¬U))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((A → (¬A)) → (C → (¬C))) → A)",
      "(¬A)",
      "((((¬C) ¬ (¬C)) ¬ (¬C)) → (((¬A) ¬ (¬A)) → ((¬A) ¬ (¬A))))"
    ],
    "conclusion": "(¬((A → (¬A)) → (C → (¬C))))",
    "applied_rules": [
      "modus_tollens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(J ∨ ((¬J) ∨ (N ∨ N)))",
      "(((J ∧ (¬N)) ∧ (N ∧ (¬J))) ∨ ((J ∧ J) ∨ ((¬J) ∧ J)))",
      "((((¬N) ∧ J) ∧ (¬J)) ∧ ((N ∧ N) ∧ (N ∨ J)))"
    ],
    "conclusion": "((N ∧ N) ∧ (N ∨ J))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬Q) ∨ ((¬W) ∧ (Q ∧ (¬Q))))",
      "((((¬Q) ∧ Q) ∧ ((¬W) ∨ (¬Q))) ∧ (((¬W) ∨ (¬W)) ∧ (¬W)))",
      "W"
    ],
    "conclusion": "((¬Q) ∨ ((¬W) ∧ (Q ∧ (¬Q))))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((H ∨ (¬H)) ∨ ((¬H) ∨ (¬Z))) ∧ ((H ∨ (¬Z)) ∧ Z))",
      "(((Z ∧ H) ∨ (Z ∨ (¬Z))) ∨ H)"
    ],
    "conclusion": "(((Z ∧ H) ∨ (Z ∨ (¬Z))) ∨ H)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "X",
      "(((¬A) ∧ ((¬X) ∨ X)) ∧ ((A ∧ X) ∧ A))",
      "(((¬X) ∧ (¬A)) ∨ ((A ∨ (¬X)) ∨ ((¬X) ∧ X)))"
    ],
    "conclusion": "(((¬X) ∧ (¬A)) ∨ ((A ∨ (¬X)) ∨ ((¬X) ∧ X)))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "H",
      "(¬R)",
      "(((H ∨ (¬R)) ∨ (¬H)) ∧ ((H ∧ R) ∧ ((¬R) ∧ H)))"
    ],
    "conclusion": "H",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((C ∨ (¬C)) ∨ ((¬C) ∧ C)) ∨ (C ∨ (C ∧ C)))",
      "M",
      "((¬C) ∧ ((C ∨ (¬C)) ∨ (C ∧ (¬C))))"
    ],
    "conclusion": "(((C ∨ (¬C)) ∨ ((¬C) ∧ C)) ∨ (C ∨ (C ∧ C)))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((J ∨ (¬J)) ∧ ((A ∨ A) ∨ ((¬A) ∧ A)))",
      "(((¬J) ∨ A) ∨ (((¬A) ∧ A) ∨ ((¬A) ∨ (¬A))))"
    ],
    "conclusion": "(((¬J) ∨ A) ∨ (((¬A) ∧ A) ∨ ((¬A) ∨ (¬A))))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((F ∨ (¬M)) ∨ ((¬M) ∧ (¬M))) ∨ (¬M))",
      "(((F ∨ (¬F)) ∧ ((¬M) ∨ (¬M))) ∧ (((¬M) ∨ (¬F)) ∨ (F ∨ (¬F))))"
    ],
    "conclusion": "(((¬M) ∨ (¬F)) ∨ (F ∨ (¬F)))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(S ∨ ((S ∨ H) ∧ (S ∨ (¬S))))",
      "S",
      "(((S ∧ (¬H)) ∧ ((¬S) ∧ S)) ∧ ((H ∨ H) ∧ (H ∨ S)))"
    ],
    "conclusion": "((H ∨ H) ∧ (H ∨ S))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬T) ∧ (¬J)) ∧ (T ∨ (¬J))) ∨ (((¬J) ∧ T) ∧ (T ∧ (¬T))))",
      "(((J ∧ (¬J)) ∨ (J ∨ J)) ∧ ((T ∨ (¬J)) ∧ (¬T)))",
      "((((¬T) ∨ (¬T)) ∨ ((¬T) ∨ J)) ∧ ((J ∧ J) ∨ J))"
    ],
    "conclusion": "((T ∨ (¬J)) ∧ (¬T))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬G) ∨ G) ∨ ((¬G) ∨ (¬G))) ∨ (S ∧ (¬G)))",
      "((((¬S) ∨ (¬G)) ∧ (G ∨ S)) ∧ ((G ∨ (¬G)) ∨ (G ∧ G)))"
    ],
    "conclusion": "((G ∨ (¬G)) ∨ (G ∧ G))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬A) ∧ (¬X)) ∧ (A ∧ (¬A))) ∧ (X ∧ ((¬X) ∧ A)))",
      "((((¬X) ∨ A) ∨ ((¬A) ∧ (¬X))) ∨ ((X ∨ (¬X)) ∧ (X ∨ (¬A))))",
      "(((X ∧ X) ∨ (¬X)) ∧ (X ∨ (A ∧ (¬X))))"
    ],
    "conclusion": "((((¬X) ∨ A) ∨ ((¬A) ∧ (¬X))) ∨ ((X ∨ (¬X)) ∧ (X ∨ (¬A))))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬O) ∨ (((¬P) ∧ (¬O)) ∨ O))",
      "(P ∨ (((¬P) ∨ (¬P)) ∨ ((¬O) ∨ (¬O))))",
      "((((¬O) ∨ (¬P)) ∨ (¬P)) ∧ P)"
    ],
    "conclusion": "(P ∨ (((¬P) ∨ (¬P)) ∨ ((¬O) ∨ (¬O))))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬Q) ∨ G) ∨ ((¬Q) ∨ Q)) ∧ (((¬G) ∨ (¬Q)) ∨ ((¬G) ∧ Q)))",
      "(((G ∧ G) ∧ ((¬G) ∨ Q)) ∨ ((Q ∧ Q) ∨ (¬G)))",
      "(Q ∨ (¬G))"
    ],
    "conclusion": "(((¬G) ∨ (¬Q)) ∨ ((¬G) ∧ Q))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(D ∧ (¬D))",
      "(((K ∨ (¬D)) ∧ (K ∨ (¬K))) ∨ ((D ∧ (¬K)) ∧ (D ∨ (¬D))))"
    ],
    "conclusion": "(¬D)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "N",
      "X",
      "((((¬X) ∧ (¬X)) ∧ (X ∨ (¬N))) ∧ ((N ∧ (¬X)) ∧ (¬N)))"
    ],
    "conclusion": "((N ∧ (¬X)) ∧ (¬N))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬S) ∨ T)",
      "(((S ∨ (¬S)) ∧ ((¬S) ∧ T)) ∧ ((T ∧ T) ∧ ((¬T) ∨ T)))"
    ],
    "conclusion": "((T ∧ T) ∧ ((¬T) ∨ T))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬S) ∨ (¬Q)) ∧ S) ∨ S)",
      "(((Q ∧ Q) ∧ ((¬Q) ∧ (¬S))) ∧ (((¬S) ∨ Q) ∨ (Q ∨ Q)))",
      "Q"
    ],
    "conclusion": "((((¬S) ∨ (¬Q)) ∧ S) ∨ S)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬T) ∧ (A ∧ (¬A))) ∧ T)",
      "(A ∨ (¬T))",
      "((((¬A) ∨ (¬T)) ∨ ((¬A) ∧ (¬A))) ∧ (((¬A) ∧ T) ∧ (A ∨ T)))"
    ],
    "conclusion": "(A ∨ (¬T))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬O) ∧ O) ∧ ((¬Y) ∧ (¬O))) ∨ (Y ∧ ((¬Y) ∧ O)))",
      "((Y ∧ ((¬O) ∨ O)) ∧ (((¬Y) ∧ (¬O)) ∨ (¬Y)))"
    ],
    "conclusion": "((((¬O) ∧ O) ∧ ((¬Y) ∧ (¬O))) ∨ (Y ∧ ((¬Y) ∧ O)))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((H ∧ (¬H)) ∧ (¬H)) ∧ ((H ∧ (¬S)) ∨ ((¬H) ∧ (¬H))))",
      "((¬S) ∨ (((¬S) ∨ S) ∨ ((¬S) ∨ S)))",
      "(S ∨ (¬H))"
    ],
    "conclusion": "(S ∨ (¬H))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((W ∨ B) ∧ (B ∧ (¬W))) ∧ (((¬B) ∧ (¬B)) ∨ W))",
      "((((¬B) ∨ W) ∧ (B ∧ W)) ∧ ((W ∨ (¬B)) ∨ ((¬B) ∧ W)))",
      "((((¬W) ∧ (¬B)) ∧ ((¬B) ∧ (¬W))) ∧ (B ∨ ((¬W) ∨ (¬B))))"
    ],
    "conclusion": "(((¬B) ∧ (¬B)) ∨ W)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((E ∧ (¬E)) ∧ (O ∧ E)) ∨ ((E ∨ (¬O)) ∨ (O ∨ E)))",
      "((¬E) ∧ (E ∧ O))",
      "(((E ∧ (¬E)) ∨ ((¬O) ∧ E)) ∨ (¬O))"
    ],
    "conclusion": "(((E ∧ (¬E)) ∨ ((¬O) ∧ E)) ∨ (¬O))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((F ∧ ((¬P) ∨ (¬F))) ∧ ((¬P) ∨ (F ∨ F)))",
      "(F ∨ (¬P))"
    ],
    "conclusion": "((¬P) ∨ (F ∨ F))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((A ∧ (¬J)) ∧ (J ∨ A)) ∧ (((¬A) ∧ (¬J)) ∨ ((¬J) ∨ J)))",
      "((¬A) ∨ (((¬A) ∨ A) ∧ (¬J)))"
    ],
    "conclusion": "(((¬A) ∧ (¬J)) ∨ ((¬J) ∨ J))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬X) ∧ ((X ∧ (¬X)) ∧ (N ∧ X)))",
      "X"
    ],
    "conclusion": "X",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(K ∧ (((¬D) ∧ (¬D)) ∧ (K ∧ K)))",
      "((¬D) ∧ (((¬K) ∧ (¬K)) ∧ ((¬D) ∧ K)))"
    ],
    "conclusion": "(((¬D) ∧ (¬D)) ∧ (K ∧ K))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(K ∧ (¬Q))",
      "((¬K) ∧ ((K ∧ Q) ∧ ((¬K) ∧ (¬Q))))"
    ],
    "conclusion": "((K ∧ Q) ∧ ((¬K) ∧ (¬Q)))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((Q ∧ (¬R)) ∧ ((¬R) ∧ (¬Q))) ∧ ((Q ∧ R) ∧ (Q ∧ Q)))",
      "Q"
    ],
    "conclusion": "Q",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((A ∧ (Y ∧ (¬A))) ∧ (((¬Y) ∧ (¬Y)) ∧ (A ∧ (¬A))))",
      "(¬A)"
    ],
    "conclusion": "(¬A)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((((¬F) ∧ F) ∧ (F ∧ F)) ∧ (¬Z))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(L ∧ A)",
      "((((¬L) ∧ A) ∧ L) ∧ ((A ∧ (¬L)) ∧ (L ∧ A)))"
    ],
    "conclusion": "(L ∧ A)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬C) ∧ I) ∧ (C ∧ C)) ∧ ((I ∧ I) ∧ ((¬C) ∧ C)))",
      "(((I ∧ (¬C)) ∧ (¬C)) ∧ ((C ∧ C) ∧ ((¬I) ∧ I)))"
    ],
    "conclusion": "((I ∧ I) ∧ ((¬C) ∧ C))",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "((((¬C) ∧ (¬C)) ∧ ((¬R) ∧ (¬C))) ∧ ((R ∧ C) ∧ ((¬C) ∧ R)))",
      "((((¬C) ∧ (¬R)) ∧ ((¬R) ∧ C)) ∧ ((C ∧ C) ∧ ((¬C) ∧ R)))"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "S",
      "(((S ∧ C) ∧ (C ∧ C)) ∧ ((S ∧ C) ∧ (C ∧ (¬S))))",
      "((¬S) ∧ ((S ∧ C) ∧ S))"
    ],
    "conclusion": "((S ∧ C) ∧ S)",
    "applied_rules": [
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬K) ¬ (H ¬ (¬X))) ∨ ((X ∨ H) → (K ∨ (¬K))))",
      "(((¬K) ∧ ((¬X) ∨ K)) ∧ ((¬K) → ((¬H) → K)))"
    ],
    "conclusion": "((¬K) → ((¬H) → K))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬W) → (¬U)) → (¬U)) ∧ ((¬U) → (V ∨ (¬W))))",
      "((W ¬ (¬V)) ∨ ((U → (¬V)) ¬ ((¬W) ¬ W)))"
    ],
    "conclusion": "((¬U) → (V ∨ (¬W)))",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬W) ∧ ((¬W) → ((¬A) ∨ W)))",
      "(((H ¬ W) ∧ ((¬W) ¬ H)) ∨ (((¬A) ∧ A) ∨ ((¬A) ∨ (¬W))))"
    ],
    "conclusion": "(((H ¬ W) ∧ ((¬W) ¬ H)) ∨ (((¬A) ∧ A) ∨ ((¬A) ∨ (¬W))))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬O) ∧ ((¬O) → (O ∨ (¬W))))",
      "(((O ¬ W) ∧ (O → O)) → (((¬W) → (¬O)) → (O ¬ (¬K))))"
    ],
    "conclusion": "(¬O)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(P → ((P ∧ P) ∧ (G ∨ P)))",
      "(((G ∨ (¬A)) ¬ (G ∧ (¬G))) ∧ (((¬A) ∧ P) ∧ (P ¬ (¬P))))"
    ],
    "conclusion": "((¬A) ∧ P)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((L ∨ H) ∧ (H → D)) ∧ (¬D))",
      "((¬L) ∨ (((¬L) ∧ L) ∧ (L ∧ (¬H))))"
    ],
    "conclusion": "(H → D)",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(K → (((¬E) ∨ (¬G)) ∨ ((¬K) ∧ (¬G))))",
      "(((K ¬ K) ∧ (K → K)) ∧ ((E ∨ E) ∨ E))"
    ],
    "conclusion": "((K ¬ K) ∧ (K → K))",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((I → (¬P)) ¬ P) ∧ (I → ((¬C) → I)))",
      "I"
    ],
    "conclusion": "((¬C) → I)",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((T ¬ T) → Q) ∧ (((¬Q) ¬ (¬I)) ∨ Q))",
      "(¬Q)"
    ],
    "conclusion": "(((¬Q) ¬ (¬I)) ∨ Q)",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((V → ((¬X) ∨ (¬X))) ∧ V)",
      "(C → ((V ¬ C) ∧ ((¬C) ∨ (¬X))))"
    ],
    "conclusion": "(V → ((¬X) ∨ (¬X)))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬Y) → Y) ∧ (¬Y))",
      "(((G ¬ (¬G)) → (G ¬ X)) ∧ ((Y ∧ Y) ¬ (G ∧ G)))"
    ],
    "conclusion": "(¬(¬Y))",
    "applied_rules": [
      "modus_tollens",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((O → Y) ∨ (O ∨ O)) ∧ ((¬Y) ∧ ((¬Y) → Y)))",
      "(O ∨ ((Y ∧ (¬Y)) ¬ R))"
    ],
    "conclusion": "((¬Y) → Y)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → ((F ∨ (¬J)) ∧ F))"
    ],
    "conclusion": "F",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬E) ∧ E) ∧ (¬C)) ∧ ((¬E) → (C → (¬E))))",
      "(¬E)"
    ],
    "conclusion": "(C → (C → (¬E)))",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((E → (¬E)) → (E → Q)) ∧ ((¬A) ∧ ((¬A) → E)))",
      "((((¬E) ∨ (¬Q)) ∧ (A ¬ Q)) ∨ ((A → A) → ((¬Q) ∧ E)))"
    ],
    "conclusion": "((¬A) ∧ ((¬A) → E))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((G ∨ Y) ∧ Y) ∧ G)",
      "(G → (Y ∨ ((¬Y) → (¬G))))"
    ],
    "conclusion": "(Y ∨ ((¬Y) → (¬G)))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬I) → D) ∧ (¬I))",
      "(D ∨ (¬D))"
    ],
    "conclusion": "((¬I) → D)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Q) → ((O → R) ∨ ((¬O) ¬ (¬Q))))",
      "((((¬R) → (¬O)) ∧ (Q → (¬O))) ∧ (¬Q))"
    ],
    "conclusion": "((O → R) ∨ ((¬O) ¬ (¬Q)))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((I ∨ L) ∨ ((¬I) ∧ H)) ∧ ((¬I) → H))",
      "(((H ∨ L) ∨ ((¬L) → L)) → (¬I))"
    ],
    "conclusion": "(((H ∨ L) ∨ ((¬L) → L)) → H)",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬T) ¬ (¬I)) ∧ ((¬I) ∨ T)) → (Q ¬ ((¬T) → T)))",
      "((Q → (I ∨ (¬I))) ∧ Q)"
    ],
    "conclusion": "(I ∨ (¬I))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "C",
      "(C → (((¬N) ¬ (¬D)) ∧ (N ∨ (¬N))))"
    ],
    "conclusion": "(N ∨ (¬N))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬A) ∨ (((¬A) ¬ N) → ((¬N) ∧ K)))",
      "((((¬K) → A) ∧ (A → K)) ∧ (¬K))"
    ],
    "conclusion": "(((¬K) → A) ∧ (A → K))",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬E) → F) → (X ¬ F)) ∧ (((¬E) ∨ (¬E)) → ((¬E) → F)))",
      "(E ∨ X)"
    ],
    "conclusion": "(((¬E) ∨ (¬E)) → (X ¬ F))",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬L) ¬ G) → L) ∧ (¬L))",
      "(L → (((¬G) ¬ G) ¬ (M ¬ (¬M))))"
    ],
    "conclusion": "(((¬L) ¬ G) → (((¬G) ¬ G) ¬ (M ¬ (¬M))))",
    "applied_rules": [
      "modus_tollens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(A → (((¬A) ¬ Y) ∧ ((¬Y) ∨ F)))",
      "A"
    ],
    "conclusion": "((¬Y) ∨ F)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬K) ∧ (J ∨ K))",
      "((((¬K) ∧ (¬H)) → ((¬J) ¬ (¬H))) → K)"
    ],
    "conclusion": "(J ∨ K)",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((K ∧ (D → J)) ∧ D)",
      "(((D ∨ (¬K)) → J) ∨ (¬D))"
    ],
    "conclusion": "D",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((B ∨ (¬J)) ∧ (G → G)) ∧ (((¬J) ¬ (¬G)) ∨ (¬G)))",
      "(¬G)"
    ],
    "conclusion": "((B ∨ (¬J)) ∧ (G → G))",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬Z) ∧ ((J → Z) ∨ (Z → (¬J))))",
      "((((¬J) → J) ∧ (J ∧ (¬J))) → Z)"
    ],
    "conclusion": "((J → Z) ∨ (Z → (¬J)))",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((Z ¬ (¬F)) → U) ∧ ((¬U) ∧ (U → U)))",
      "(¬U)"
    ],
    "conclusion": "((Z ¬ (¬F)) → U)",
    "applied_rules": [
      "modus_tollens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬D) ¬ (¬S)) ¬ ((¬Y) ¬ S)) ∧ (((¬S) → D) ∧ (¬D)))",
      "(((Y ∨ (¬D)) → ((¬Y) ∧ (¬D))) ∨ ((S ¬ S) → S))"
    ],
    "conclusion": "(((¬S) → D) ∧ (¬D))",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬X) → ((X ∨ (¬X)) ∧ ((¬X) ¬ X)))",
      "(((X ∧ L) ∨ ((¬L) → X)) ∧ (¬X))"
    ],
    "conclusion": "(¬X)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬B) ∧ (((¬A) ∨ (¬W)) ∨ (¬B)))",
      "((¬B) → ((B ∨ (¬W)) → (A ∧ B)))"
    ],
    "conclusion": "(¬B)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(B ∨ (((¬H) → O) ∧ (O → H)))",
      "(((¬H) → ((¬H) → H)) ∧ (¬H))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "((¬B) → (((¬Z) ∨ (¬B)) ∧ (¬I)))"
    ],
    "conclusion": "(((¬Z) ∨ (¬B)) ∧ (¬I))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬I) → (J ¬ (¬J))) ∧ ((E ∨ E) ∨ (J ∨ I)))",
      "(I → (¬I))"
    ],
    "conclusion": "((¬I) → (J ¬ (¬J)))",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬D) → I) ∨ (D ∨ (¬D))) ∧ ((D → (¬I)) → O))",
      "(¬O)"
    ],
    "conclusion": "((D → (¬I)) → O)",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((Q → ((¬U) ¬ U)) ∧ ((Z ¬ Z) ∧ ((¬Z) ∨ (¬Z))))",
      "(((Q ¬ Z) → (U ∨ (¬Q))) → Q)"
    ],
    "conclusion": "(((Q ¬ Z) → (U ∨ (¬Q))) → ((¬U) ¬ U))",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬X) ∧ (¬W)) → ((¬X) ¬ W)) ∨ (((¬W) ¬ A) → ((¬A) → (¬W))))",
      "(((A ∧ X) ∧ (X → W)) ∧ X)"
    ],
    "conclusion": "((A ∧ X) ∧ (X → W))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → ((S ∨ (¬F)) ∧ (F → (¬J))))"
    ],
    "conclusion": "((S ∨ (¬F)) ∧ (F → (¬J)))",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬T) ¬ (¬Z)) ¬ ((¬Z) ¬ K)) ∨ (T ∨ (K ∧ (¬T))))",
      "((K → (K ∧ (¬Z))) ∧ K)"
    ],
    "conclusion": "((((¬T) ¬ (¬Z)) ¬ ((¬Z) ¬ K)) ∨ (T ∨ (K ∧ (¬T))))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬X) → (M ∨ (¬X))) ∧ ((R ¬ (¬X)) ∨ (¬M)))",
      "(¬X)"
    ],
    "conclusion": "(M ∨ (¬X))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(X → (A ∨ (A ∨ (¬X))))",
      "(P ∧ ((A ∧ (¬P)) ∧ X))"
    ],
    "conclusion": "(A ∨ (A ∨ (¬X)))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬J) → (((¬I) ∧ I) ∨ (I ¬ I)))",
      "((¬J) ∧ (¬T))"
    ],
    "conclusion": "(((¬I) ∧ I) ∨ (I ¬ I))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(J ∧ (J → (Y → (¬Y))))",
      "(Y ∨ ((¬U) → (¬Y)))"
    ],
    "conclusion": "(Y ∨ ((¬U) → (¬Y)))",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "H",
      "((((¬Z) ∧ H) ¬ Z) ∧ ((H → Z) ∧ ((¬H) ∨ (¬K))))"
    ],
    "conclusion": "(H → Z)",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "K",
      "(K → ((K ∧ B) ∧ ((¬B) ∨ B)))"
    ],
    "conclusion": "K",
    "applied_rules": [
      "addition",
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((L ∧ (¬M)) ¬ (C ¬ M)) ∨ (¬L))",
      "(((C ∨ M) → C) ∧ (¬C))"
    ],
    "conclusion": "((C ∨ M) → C)",
    "applied_rules": [
      "modus_tollens",
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((K → ((¬K) → (¬K))) ∧ K)",
      "(N → (¬K))"
    ],
    "conclusion": "((¬K) → (¬K))",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((V ¬ (¬V)) ∧ ((¬X) ¬ V)) ∨ ((N ∧ V) ¬ ((¬X) ∧ (¬V))))",
      "(((N → (¬X)) ∧ ((¬N) → N)) ∧ (¬V))"
    ],
    "conclusion": "(¬V)",
    "applied_rules": [
      "addition",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(S ∨ ((¬F) → ((¬H) ¬ S)))",
      "((((¬F) ⊕ (¬S)) → H) ∧ (¬H))"
    ],
    "conclusion": "(¬((¬F) ⊕ (¬S)))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬C) ⊕ V) ↔ (C ⊕ (¬C))) ∧ (Q → (Q ∨ C)))",
      "Q"
    ],
    "conclusion": "(Q → (Q ∨ C))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((R ↔ (¬S)) → N) ∧ (R ∨ (N ¬ N)))",
      "(¬N)"
    ],
    "conclusion": "(¬(R ↔ (¬S)))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "(((H ¬ S) ∨ ((¬T) ∨ T)) ∧ ((¬H) → (¬S)))",
      "((¬S) → (((¬T) ↔ H) ⊕ ((¬H) ∧ T)))"
    ],
    "conclusion": "((¬H) → (((¬T) ↔ H) ⊕ ((¬H) ∧ T)))",
    "applied_rules": [
      "simplification",
      "addition",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((V → Y) ⊕ (W ⊕ V)) ∧ (¬W))",
      "((¬W) → (((¬W) ∧ (¬Y)) ∨ (V → (¬Y))))"
    ],
    "conclusion": "(((¬W) ∧ (¬Y)) ∨ (V → (¬Y)))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((H → (P ↔ D)) ∧ H)",
      "(((P ⊕ (¬D)) ∧ ((¬P) ∨ (¬H))) ∨ (((¬H) ↔ D) ↔ ((¬D) ∨ D)))"
    ],
    "conclusion": "(((P ⊕ (¬D)) ∧ ((¬P) ∨ (¬H))) ∨ (((¬H) ↔ D) ↔ ((¬D) ∨ D)))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬L) → (D ∧ (L ∨ L)))",
      "(¬L)"
    ],
    "conclusion": "(D ∧ (L ∨ L))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((N → N) ∧ (N ∧ C)) ∧ (N → (M ∨ C)))",
      "((((¬M) → (¬N)) ⊕ (M ∧ C)) → ((C ↔ (¬M)) ∧ (C → (¬N))))"
    ],
    "conclusion": "C",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "I",
      "(((I ⊕ I) ⊕ (W ⊕ W)) ∧ (I → (S ∨ (¬I))))"
    ],
    "conclusion": "(S ∨ (¬I))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬X) → (S ∨ S)) ∧ (¬X))",
      "((((¬X) ∨ (¬S)) ∧ (N ↔ X)) ⊕ ((¬X) ↔ S))"
    ],
    "conclusion": "(¬X)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬V) → (A → A)) ∧ (((¬E) → (¬E)) ∨ ((¬A) ↔ V)))",
      "(¬V)"
    ],
    "conclusion": "(A → A)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(X ∧ ((¬O) ∧ (O ∨ F)))",
      "((¬O) → ((X → O) ∧ (X ⊕ (¬X))))"
    ],
    "conclusion": "(O ∨ F)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬M) → ((M ⊕ (¬W)) ∨ (M ∨ M)))",
      "(((M ⊕ W) ∨ ((¬M) ∧ (¬M))) ∧ (¬M))"
    ],
    "conclusion": "(¬M)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬O) ∧ P) → (P ⊕ Z)) ∨ (¬Z))",
      "((O → (O ∨ Z)) ∧ O)"
    ],
    "conclusion": "((((¬O) ∧ P) → (P ⊕ Z)) ∨ (¬Z))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬V)",
      "(((¬V) → ((¬M) ∨ V)) ∧ ((Z ↔ (¬V)) → (V ⊕ M)))"
    ],
    "conclusion": "((Z ↔ (¬V)) → (V ⊕ M))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(M ∧ ((F ¬ (¬M)) ∧ ((¬M) ∨ M)))",
      "(M → ((X ⊕ (¬X)) ¬ (¬M)))"
    ],
    "conclusion": "((X ⊕ (¬X)) ¬ (¬M))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((R → L) ∧ ((¬R) ∨ L)) ∧ ((R ∨ (¬L)) ¬ ((¬R) ⊕ X)))",
      "R"
    ],
    "conclusion": "L",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(T → (((¬E) ¬ (¬M)) ∨ (M ⊕ M)))",
      "(T ∧ ((¬T) ∨ (¬E)))"
    ],
    "conclusion": "T",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(A ∨ (¬A))",
      "(((A → (¬P)) ∨ ((¬A) → A)) ∧ ((A ∨ (¬A)) → ((¬Q) ⊕ A)))"
    ],
    "conclusion": "((A ∨ (¬A)) → ((¬Q) ⊕ A))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬S) ¬ (¬A)) ∧ (A ↔ R)) ∧ ((¬A) ∧ ((¬A) → A)))",
      "(((R ∨ (¬S)) ∨ S) ¬ (((¬R) ∨ (¬A)) ¬ ((¬S) ∧ (¬A))))"
    ],
    "conclusion": "((¬A) → A)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬I) → ((¬P) ∨ P)) ∧ (((¬G) ¬ G) → ((¬I) ¬ (¬G))))",
      "(¬I)"
    ],
    "conclusion": "(((¬G) ¬ G) → ((¬I) ¬ (¬G)))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬I) ∨ I) ∧ ((¬F) → I)) ∧ (¬F))",
      "F"
    ],
    "conclusion": "((¬F) → I)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((N ⊕ ((¬I) ∧ I)) ∧ (¬N))",
      "((¬N) → (((¬N) ∧ (¬J)) ∨ ((¬N) ⊕ I)))"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬I) ∧ (¬I)) ¬ ((¬K) ∨ Z)) ∨ I)",
      "((((¬I) → (¬K)) ↔ (I ∧ (¬K))) ∧ (((¬I) → (¬K)) ∧ ((¬I) → (¬I))))"
    ],
    "conclusion": "((((¬I) ∧ (¬I)) ¬ ((¬K) ∨ Z)) ∨ I)",
    "applied_rules": [
      "simplification",
      "addition",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "T",
      "(T → (((¬Y) ¬ (¬V)) ∧ (V ∨ (¬Y))))"
    ],
    "conclusion": "(V ∨ (¬Y))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "D",
      "((¬Z) ∧ ((¬Z) → (A → (¬Z))))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬R) ¬ (¬R)) ∨ (R ↔ (¬R))) → (H ⊕ (R → (¬R))))",
      "((A → (R → A)) ∧ A)"
    ],
    "conclusion": "(R → A)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬K) → (((¬Z) → F) ⊕ (Z ↔ (¬F))))",
      "(((K → (¬Z)) ∧ (F ∨ (¬F))) ∧ (Z → (¬K)))"
    ],
    "conclusion": "((K → (¬Z)) ∧ (F ∨ (¬F)))",
    "applied_rules": [
      "simplification",
      "addition",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬Y) → ((¬F) ∨ (¬Y))) ∧ (¬Y))",
      "(¬Y)"
    ],
    "conclusion": "((¬F) ∨ (¬Y))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬J) → S) ∧ ((¬S) → (¬J))) ∧ (((¬Z) → (¬S)) ∨ (S ∧ (¬Z))))",
      "((S → ((¬Z) ∨ Z)) ⊕ ((S → (¬J)) ⊕ ((¬S) ∨ S)))"
    ],
    "conclusion": "(((¬J) → S) ∧ ((¬S) → (¬J)))",
    "applied_rules": [
      "simplification",
      "addition",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(I → (((¬M) ⊕ (¬K)) ⊕ (M ↔ K)))",
      "(((I ¬ M) ∨ ((¬I) ¬ I)) ∧ (((¬I) ∨ (¬M)) → I))"
    ],
    "conclusion": "(((¬I) ∨ (¬M)) → I)",
    "applied_rules": [
      "simplification",
      "addition",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((Z ↔ (¬U)) ∧ ((¬Y) ⊕ Y)) ∧ ((¬Y) ∧ ((¬Y) → Y)))",
      "(((U → Y) → (Y ¬ U)) → (¬Z))"
    ],
    "conclusion": "(¬Y)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((Z ↔ (¬R)) ∧ (R ⊕ R)) ¬ (((¬R) ∧ (¬Z)) ¬ R))",
      "(((X → Z) ∧ ((¬X) ∨ X)) ∧ (¬Z))"
    ],
    "conclusion": "((¬X) ∨ X)",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬R) → (((¬R) ∨ R) ∧ ((¬Q) ↔ (¬R))))",
      "(¬R)"
    ],
    "conclusion": "(¬R)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((R ¬ (¬N)) ∨ ((¬N) ∨ N)) ∧ (¬E))",
      "((((¬R) ∨ (¬N)) → ((¬R) → N)) → E)"
    ],
    "conclusion": "(¬(((¬R) ∨ (¬N)) → ((¬R) → N)))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "(C → C)",
      "(((C ↔ (¬U)) ¬ ((¬B) → (¬B))) ∧ ((U → C) ∧ C))"
    ],
    "conclusion": "(U → C)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((A ⊕ E) ⊕ (A ⊕ A)) ∧ (¬A))",
      "((¬A) → (A → (¬A)))"
    ],
    "conclusion": "(¬A)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬A) ∧ (((¬A) ∨ N) ∨ (J ∧ A)))",
      "(((¬J) ∨ (¬J)) → A)"
    ],
    "conclusion": "(((¬A) ∨ N) ∨ (J ∧ A))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "(((W ⊕ (¬U)) ∧ (W ⊕ (¬U))) ∨ ((Q → U) → (Q ¬ (¬U))))",
      "(((U ↔ (¬U)) ∨ ((¬W) ↔ (¬W))) ∧ ((¬Q) ∧ (Q → Q)))"
    ],
    "conclusion": "(((W ⊕ (¬U)) ∧ (W ⊕ (¬U))) ∨ ((Q → U) → (Q ¬ (¬U))))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬J) ∧ J)",
      "(J → (((¬M) ∨ Z) ∨ (M ∧ Z)))"
    ],
    "conclusion": "(¬J)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((P → ((¬P) ∨ (¬X))) ∧ (((¬P) ∧ (¬C)) → ((¬P) ↔ C)))",
      "P"
    ],
    "conclusion": "(((¬P) ∧ (¬C)) → ((¬P) ↔ C))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬E) → (¬E)) ∧ (¬E)) ∧ ((¬V) ⊕ (E → E)))",
      "(((N ∧ V) ∧ (¬E)) ∨ ((V ↔ (¬E)) ¬ V))"
    ],
    "conclusion": "(((¬E) → (¬E)) ∧ (¬E))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬A) ∧ ((¬A) → ((¬R) ⊕ Y)))",
      "(R ∨ (¬A))"
    ],
    "conclusion": "((¬R) ⊕ Y)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(B ∧ (((¬E) ¬ (¬B)) ⊕ B))",
      "(B → (((¬B) ⊕ (¬B)) ∨ ((¬B) → E)))"
    ],
    "conclusion": "(((¬B) ⊕ (¬B)) ∨ ((¬B) → E))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "(((Z ↔ E) ∨ ((¬B) ↔ E)) ∧ (Z → B))"
    ],
    "conclusion": "((Z ↔ E) ∨ ((¬B) ↔ E))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "O",
      "(O → ((O ¬ Z) ∧ (O ∨ (¬O))))"
    ],
    "conclusion": "(O ∨ (¬O))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((H → ((¬H) ↔ (¬H))) ∧ H)",
      "((((¬H) ↔ (¬H)) ↔ (U ∧ H)) ∨ ((N ↔ (¬N)) ∧ ((¬N) ∨ (¬H))))"
    ],
    "conclusion": "((¬H) ↔ (¬H))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬M) ⊕ L) ∧ ((¬L) ∨ (¬M))) ∧ ((¬O) → (¬O)))",
      "(¬O)"
    ],
    "conclusion": "((¬M) ⊕ L)",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬R) ∧ (¬X)) ∧ ((¬R) → M)) ∧ ((X ¬ (¬X)) ∨ (¬X)))",
      "(¬M)"
    ],
    "conclusion": "((X ¬ (¬X)) ∨ (¬X))",
    "applied_rules": [
      "simplification",
      "modus_tollens",
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬Z) → (M → (¬Z))) ∧ ((Z ⊕ I) ↔ ((¬Z) ∧ I)))",
      "(¬Z)"
    ],
    "conclusion": "((¬Z) → (M → (¬Z)))",
    "applied_rules": [
      "modus_ponens",
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬P) → ((¬U) ¬ P)) ∨ P)",
      "(¬P)"
    ],
    "conclusion": "((¬U) ¬ P)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(F → (((¬G) ¬ (¬F)) → F))",
      "F"
    ],
    "conclusion": "(((¬G) ¬ (¬F)) → F)",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬Y) → (¬U)) ∨ Y)",
      "(¬Y)"
    ],
    "conclusion": "((¬Y) → (¬U))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬X) → X)",
      "(¬X)"
    ],
    "conclusion": "X",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬C) → C)",
      "(¬C)"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬G) → G)",
      "(¬G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "(D ∨ (((¬B) ∧ T) → D))"
    ],
    "conclusion": "(¬((¬B) ∧ T))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "M",
      "(M → (((¬M) ∨ F) → M))"
    ],
    "conclusion": "(((¬M) ∨ F) → (((¬M) ∨ F) → M))",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(B ∨ ((B ¬ (¬Q)) → B))",
      "(¬B)"
    ],
    "conclusion": "(¬(B ¬ (¬Q)))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬J) → (J → J)) ∨ J)",
      "(¬J)"
    ],
    "conclusion": "(¬J)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬G) → G)",
      "(¬G)"
    ],
    "conclusion": "(¬(¬G))",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(Q → ((Q ¬ (¬Q)) → Q))",
      "Q"
    ],
    "conclusion": "((Q ¬ (¬Q)) → Q)",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "((¬J) → J)"
    ],
    "conclusion": "J",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "Z",
      "(Z → (((¬N) ¬ N) → Z))"
    ],
    "conclusion": "(((¬N) ¬ N) → Z)",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "((((¬T) ∨ (¬I)) → I) ∨ I)"
    ],
    "conclusion": "(((¬T) ∨ (¬I)) → I)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((¬R) → ((R ∨ T) → R))"
    ],
    "conclusion": "(¬(R ∨ T))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((¬L) → L)"
    ],
    "conclusion": "L",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "((¬U) → (U ∨ ((¬J) → (¬D))))"
    ],
    "conclusion": "((¬J) → (¬D))",
    "applied_rules": [
      "disjunctive_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "(C ∨ (((¬Z) ¬ Z) → C))"
    ],
    "conclusion": "(((¬Z) ¬ Z) → C)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬J) ∧ K) → L) ∨ L)",
      "(¬L)"
    ],
    "conclusion": "(((¬J) ∧ K) → L)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Z ∨ ((¬Z) → ((¬O) ∧ O)))",
      "(¬Z)"
    ],
    "conclusion": "(Z ∨ ((¬Z) → ((¬O) ∧ O)))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬H) → (((¬Q) ∧ (¬C)) → (¬H)))",
      "(¬H)"
    ],
    "conclusion": "(((¬Q) ∧ (¬C)) → (¬H))",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "(((¬U) → (U → F)) ∨ U)"
    ],
    "conclusion": "(U → F)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬G)",
      "((¬G) → G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((¬L) → ((¬L) → ((¬B) → L)))"
    ],
    "conclusion": "((¬L) → ((¬B) → L))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((¬P) → P)"
    ],
    "conclusion": "(¬(¬P))",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "((¬T) → T)"
    ],
    "conclusion": "T",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬I) → ((¬I) → I))",
      "(¬I)"
    ],
    "conclusion": "(¬(¬I))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬U) → (¬V)) ∨ U)",
      "(¬U)"
    ],
    "conclusion": "((¬U) → (¬V))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬Z) → ((¬G) ∨ N)) ∨ Z)",
      "(¬Z)"
    ],
    "conclusion": "(((¬Z) → ((¬G) ∨ N)) ∨ Z)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬S) → S)",
      "(¬S)"
    ],
    "conclusion": "S",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Y) → (N ∨ Y))",
      "(¬Y)"
    ],
    "conclusion": "(N ∨ Y)",
    "applied_rules": [
      "disjunctive_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "((¬Z) → Z)"
    ],
    "conclusion": "(¬(¬Z))",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "(S ∨ ((¬S) → (P ∧ (¬P))))"
    ],
    "conclusion": "((¬S) → (P ∧ (¬P)))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "(((¬I) → ((¬I) → (¬I))) ∨ I)"
    ],
    "conclusion": "((¬I) → ((¬I) → (¬I)))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "((¬U) → U)"
    ],
    "conclusion": "(¬(¬U))",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(U ∨ ((¬U) → ((¬U) ∧ (¬U))))",
      "(¬U)"
    ],
    "conclusion": "(¬U)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "((¬T) → T)"
    ],
    "conclusion": "(¬(¬T))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬G) → (G ∨ ((¬F) → (¬G))))",
      "(¬G)"
    ],
    "conclusion": "(G ∨ ((¬F) → (¬G)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "((¬C) → C)"
    ],
    "conclusion": "C",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(I ∨ ((¬I) → ((¬Y) ¬ Y)))",
      "(¬I)"
    ],
    "conclusion": "((¬I) → ((¬Y) ¬ Y))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "(P ∨ ((P ∧ P) → P))"
    ],
    "conclusion": "((P ∧ P) → P)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬F) → F)",
      "(¬F)"
    ],
    "conclusion": "F",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((¬R) → R)"
    ],
    "conclusion": "R",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "((¬I) → ((R ∨ (¬D)) → (¬I)))"
    ],
    "conclusion": "((R ∨ (¬D)) → ((R ∨ (¬D)) → (¬I)))",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(W ∨ (I → W))"
    ],
    "conclusion": "(I → W)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬B) → ((¬B) ∧ B)) ∨ B)",
      "(¬B)"
    ],
    "conclusion": "(((¬B) → ((¬B) ∧ B)) ∨ B)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "((¬B) → (B ∨ ((¬B) ∧ (¬X))))"
    ],
    "conclusion": "(B ∨ ((¬B) ∧ (¬X)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬H)",
      "(H ∨ (((¬H) → H) → H))"
    ],
    "conclusion": "(H ∨ (((¬H) → H) → H))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬E) → E)",
      "(¬E)"
    ],
    "conclusion": "E",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬V) → ((¬Y) → (¬V)))",
      "(¬V)"
    ],
    "conclusion": "((¬Y) → (¬V))",
    "applied_rules": [
      "modus_ponens",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬V) → V)",
      "(¬V)"
    ],
    "conclusion": "V",
    "applied_rules": [
      "modus_ponens",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(P ∨ ((¬P) → (F → (¬F))))",
      "(¬P)"
    ],
    "conclusion": "(P ∨ ((¬P) → (F → (¬F))))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "(S ∨ ((¬S) → (¬O)))"
    ],
    "conclusion": "(¬O)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((N ¬ A) → A) ∨ A)",
      "(¬A)"
    ],
    "conclusion": "((N ¬ A) → A)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "(P ∨ ((¬P) → (C ⊕ P)))"
    ],
    "conclusion": "((¬P) → (C ⊕ P))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬R) → (R ∨ ((¬W) ¬ W)))",
      "(¬R)"
    ],
    "conclusion": "(R ∨ ((¬W) ¬ W))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "(N ∨ ((¬N) → ((¬O) ¬ N)))"
    ],
    "conclusion": "((¬O) ¬ N)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬K) → (((¬M) ∨ (¬C)) ∨ K))",
      "(¬K)"
    ],
    "conclusion": "(((¬M) ∨ (¬C)) ∨ K)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "((¬U) → U)"
    ],
    "conclusion": "U",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬P) → P)",
      "(¬P)"
    ],
    "conclusion": "P",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "((¬M) → (((¬M) → (¬N)) ∨ M))"
    ],
    "conclusion": "(((¬M) → (¬N)) ∨ M)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(N ∨ (((¬P) ↔ (¬N)) → N))",
      "(¬N)"
    ],
    "conclusion": "(((¬P) ↔ (¬N)) → N)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(H ∨ ((T ¬ (¬T)) → H))",
      "(¬H)"
    ],
    "conclusion": "((T ¬ (¬T)) → H)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "((¬C) → ((C ∨ (¬Q)) ∨ C))"
    ],
    "conclusion": "((C ∨ (¬Q)) ∨ C)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬D) → ((G ∨ (¬G)) ∨ D))",
      "(¬D)"
    ],
    "conclusion": "((G ∨ (¬G)) ∨ D)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬G)",
      "((¬G) → G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬J) → J)",
      "(¬J)"
    ],
    "conclusion": "J",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(W ∨ ((¬W) → ((¬F) ¬ (¬W))))",
      "(¬W)"
    ],
    "conclusion": "((¬W) → ((¬F) ¬ (¬W)))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((¬F) → (((¬V) ¬ F) → (¬F)))"
    ],
    "conclusion": "(((¬V) ¬ F) → (((¬V) ¬ F) → (¬F)))",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(U ∨ ((¬U) → (U ¬ M)))",
      "(¬U)"
    ],
    "conclusion": "((¬U) → (U ¬ M))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "(((L ↔ L) → T) ∨ T)"
    ],
    "conclusion": "((L ↔ L) → T)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(G ∨ (G → G))",
      "(¬G)"
    ],
    "conclusion": "(¬G)",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬Q) → ((U ¬ A) → Q))",
      "(¬Q)"
    ],
    "conclusion": "((U ¬ A) → Q)",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "((¬S) → S)"
    ],
    "conclusion": "(¬(¬S))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬D) → ((¬D) → ((¬D) ∨ D)))",
      "(¬D)"
    ],
    "conclusion": "((¬D) → ((¬D) ∨ D))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((¬L) → L)"
    ],
    "conclusion": "(¬(¬L))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬K)",
      "((¬K) → K)"
    ],
    "conclusion": "K",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬V)",
      "((¬V) → V)"
    ],
    "conclusion": "(¬(¬V))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "((¬S) → S)"
    ],
    "conclusion": "S",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((¬R) → (((¬S) ∨ (¬R)) → R))"
    ],
    "conclusion": "(((¬S) ∨ (¬R)) → R)",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬O) → O)",
      "(¬O)"
    ],
    "conclusion": "O",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬R) → (R ∨ ((¬R) → X)))",
      "(¬R)"
    ],
    "conclusion": "((¬R) → X)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(L ∨ ((K → (¬K)) → L))",
      "(¬L)"
    ],
    "conclusion": "(L ∨ ((K → (¬K)) → L))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "((¬W) → W)"
    ],
    "conclusion": "W",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬B) → B)",
      "(¬B)"
    ],
    "conclusion": "(¬(¬B))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬J) → J)",
      "(¬J)"
    ],
    "conclusion": "J",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((¬D) → D)"
    ],
    "conclusion": "(¬(¬D))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬U) → U)",
      "(¬U)"
    ],
    "conclusion": "U",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "(R ∨ ((N ↔ N) → R))"
    ],
    "conclusion": "(R ∨ ((N ↔ N) → R))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "((¬T) → T)"
    ],
    "conclusion": "(¬(¬T))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Q) → Q)",
      "(¬Q)"
    ],
    "conclusion": "(¬(¬Q))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(((R ∧ R) → O) ∨ O)"
    ],
    "conclusion": "(¬(R ∧ R))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬P) → P)",
      "(¬P)"
    ],
    "conclusion": "(¬(¬P))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "((¬C) → (((¬C) ∨ D) → (¬C)))"
    ],
    "conclusion": "(((¬C) ∨ D) → (¬C))",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "(L ∨ ((K ↔ (¬L)) → L))"
    ],
    "conclusion": "(L ∨ ((K ↔ (¬L)) → L))",
    "applied_rules": [
      "modus_tollens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "D",
      "(D → ((D → R) → D))"
    ],
    "conclusion": "((D → R) → D)",
    "applied_rules": [
      "hypothetical_syllogism",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬O) → ((¬S) ∧ (¬O))) ∨ O)",
      "(¬O)"
    ],
    "conclusion": "((¬S) ∧ (¬O))",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(E ∨ ((¬E) → (Y ¬ Y)))",
      "(¬E)"
    ],
    "conclusion": "(Y ¬ Y)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "((¬Z) → Z)"
    ],
    "conclusion": "(¬(¬Z))",
    "applied_rules": [
      "modus_tollens",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "((¬N) → ((Z ⊕ (¬F)) ∨ N))"
    ],
    "conclusion": "((Z ⊕ (¬F)) ∨ N)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬H) → ((¬H) ∧ (¬V))) ∨ H)",
      "(¬H)"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬F)",
      "((¬F) → (F ∨ F))"
    ],
    "conclusion": "F",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((¬M) ∧ (M ∨ (¬Q))) ∧ (((¬Q) ∨ (¬U)) ∨ (Q ∧ M)))",
      "(((Q ∧ Q) ∧ (Q ∨ Q)) ∧ (((¬U) ∨ (¬U)) ∨ ((¬Q) ∧ (¬U))))"
    ],
    "conclusion": "(((¬U) ∨ (¬U)) ∨ ((¬Q) ∧ (¬U)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬C) ∧ (((¬W) ∨ Y) ∧ C))",
      "(((C ∨ W) ∧ (¬W)) ∨ ((Y ∨ Y) ∧ (W ∨ Y)))"
    ],
    "conclusion": "(((C ∨ W) ∧ (¬W)) ∨ ((Y ∨ Y) ∧ (W ∨ Y)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬H) ∨ (¬Q)) ∨ (G ∧ (¬H))) ∧ (((¬H) ∧ Q) ∨ ((¬Q) ∧ (¬G))))",
      "(Q ∧ H)"
    ],
    "conclusion": "(((¬H) ∧ Q) ∨ ((¬Q) ∧ (¬G)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((X ∨ (X ∨ (¬N))) ∧ (((¬N) ∨ (¬X)) ∧ (N ∧ C)))",
      "((((¬X) ∧ (¬N)) ∨ (¬N)) ∧ (((¬C) ∨ N) ∨ (¬X)))"
    ],
    "conclusion": "(((¬C) ∨ N) ∨ (¬X))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((H ∨ H) ∧ ((N ∨ (¬H)) ∧ (N ∨ (¬N))))",
      "(((N ∧ (¬H)) ∧ (H ∨ (¬H))) ∨ (((¬N) ∧ H) ∨ (N ∨ H)))"
    ],
    "conclusion": "(((N ∧ (¬H)) ∧ (H ∨ (¬H))) ∨ (((¬N) ∧ H) ∨ (N ∨ H)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬T) ∨ (¬T)) ∨ ((¬T) ∧ (¬T))) ∨ ((T ∧ T) ∨ ((¬U) ∧ T)))",
      "(((T ∧ U) ∨ ((¬U) ∧ (¬T))) ∧ ((U ∨ T) ∨ (¬U)))"
    ],
    "conclusion": "((((¬T) ∨ (¬T)) ∨ ((¬T) ∧ (¬T))) ∨ ((T ∧ T) ∨ ((¬U) ∧ T)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((N ∧ B) ∨ ((¬B) ∨ (¬B))) ∨ (((¬N) ∧ (¬N)) ∨ (N ∨ (¬N))))",
      "((((¬B) ∧ B) ∧ (¬B)) ∧ (((¬B) ∨ N) ∧ (B ∧ B)))"
    ],
    "conclusion": "(((N ∧ B) ∨ ((¬B) ∨ (¬B))) ∨ (((¬N) ∧ (¬N)) ∨ (N ∨ (¬N))))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬M) ∨ (J ∧ ((¬M) ∧ M)))",
      "(((J ∨ (¬J)) ∧ (J ∧ (¬J))) ∧ M)"
    ],
    "conclusion": "M",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬T) ∧ T) ∨ ((¬C) ∨ (¬C))) ∨ ((C ∧ (¬T)) ∧ (C ∨ T)))",
      "(((T ∧ (¬C)) ∨ ((¬C) ∧ (¬T))) ∧ ((C ∨ T) ∨ ((¬T) ∨ (¬T))))"
    ],
    "conclusion": "((((¬T) ∧ T) ∨ ((¬C) ∨ (¬C))) ∨ ((C ∧ (¬T)) ∧ (C ∨ T)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(¬G)",
      "((((¬X) ∨ (¬G)) ∧ (G ∨ (¬X))) ∧ (((¬G) ∧ (¬G)) ∨ ((¬G) ∨ (¬G))))"
    ],
    "conclusion": "(((¬G) ∧ (¬G)) ∨ ((¬G) ∨ (¬G)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬O) ∨ D)",
      "((((¬D) ∧ O) ∨ ((¬O) ∧ D)) ∧ (¬O))"
    ],
    "conclusion": "(¬O)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬X) ∨ (¬X))",
      "(O ∧ ((O ∧ (¬X)) ∧ (¬O)))"
    ],
    "conclusion": "((¬X) ∨ (¬X))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬A) ∨ P) ∧ (A ∨ (¬P))) ∧ (((¬A) ∧ P) ∨ (P ∨ (¬P))))",
      "((((¬P) ∨ (¬P)) ∨ ((¬P) ∨ A)) ∧ ((P ∨ (¬P)) ∧ ((¬A) ∨ (¬A))))"
    ],
    "conclusion": "((P ∨ (¬P)) ∧ ((¬A) ∨ (¬A)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬S) ∨ S) ∨ (S ∧ (¬S))) ∨ (((¬S) ∨ (¬Q)) ∨ (Q ∧ (¬Q))))",
      "(((S ∨ (¬Q)) ∨ ((¬Q) ∨ Q)) ∧ ((S ∧ (¬S)) ∨ (S ∨ S)))"
    ],
    "conclusion": "((S ∧ (¬S)) ∨ (S ∨ S))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬Z) ∨ (¬T)) ∨ ((¬T) ∨ (¬T))) ∨ (T ∧ (¬Z)))",
      "(((Z ∧ Z) ∧ (T ∨ (¬T))) ∧ (((¬T) ∧ T) ∨ (T ∧ Z)))"
    ],
    "conclusion": "(((¬T) ∧ T) ∨ (T ∧ Z))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((B ∧ B) ∨ (U ∧ U)) ∧ ((U ∨ (¬U)) ∧ B))",
      "(((¬U) ∨ ((¬B) ∧ (¬B))) ∨ U)"
    ],
    "conclusion": "(((¬U) ∨ ((¬B) ∧ (¬B))) ∨ U)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((U ∨ Q) ∧ (U ∨ Q)) ∧ Q)",
      "(((Q ∧ (¬Q)) ∨ (Q ∧ U)) ∨ ((Q ∨ U) ∧ ((¬Q) ∨ (¬U))))"
    ],
    "conclusion": "(((Q ∧ (¬Q)) ∨ (Q ∧ U)) ∨ ((Q ∨ U) ∧ ((¬Q) ∨ (¬U))))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((R ∧ R) ∨ (I ∨ R)) ∨ I)",
      "(((¬I) ∧ (R ∧ (¬I))) ∧ ((R ∧ I) ∨ (I ∧ I)))"
    ],
    "conclusion": "((R ∧ I) ∨ (I ∧ I))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬E) ∧ (¬E)) ∨ ((¬E) ∧ (¬T))) ∧ (¬T))",
      "(¬T)"
    ],
    "conclusion": "(((¬E) ∧ (¬E)) ∨ ((¬E) ∧ (¬T)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬R) ∨ P) ∨ (R ∧ (¬R))) ∧ ((¬P) ∨ (R ∧ (¬P))))",
      "((((¬R) ∨ (¬R)) ∨ P) ∨ R)"
    ],
    "conclusion": "((((¬R) ∨ (¬R)) ∨ P) ∨ R)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((D ∧ P) ∧ ((¬P) ∨ D)) ∨ ((P ∨ (¬P)) ∧ (P ∨ (¬D))))",
      "((((¬P) ∨ P) ∧ ((¬D) ∨ (¬D))) ∧ (((¬D) ∧ (¬P)) ∨ ((¬P) ∨ P)))"
    ],
    "conclusion": "(((¬D) ∧ (¬P)) ∨ ((¬P) ∨ P))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((I ∧ (¬I)) ∧ (I ∨ H)) ∨ ((I ∨ I) ∨ (¬I)))",
      "(((H ∧ I) ∨ (H ∧ (¬H))) ∧ (((¬I) ∧ (¬I)) ∧ ((¬H) ∨ (¬H))))"
    ],
    "conclusion": "(((¬I) ∧ (¬I)) ∧ ((¬H) ∨ (¬H)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬Z) ∧ Z) ∨ (V ∧ V)) ∧ ((V ∨ Z) ∧ (Z ∨ V)))",
      "(V ∧ (((¬Z) ∧ (¬Z)) ∧ V))"
    ],
    "conclusion": "(Z ∨ V)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬S) ∧ (¬S)) ∨ S) ∧ V)",
      "(((S ∧ S) ∧ V) ∨ (((¬S) ∨ (¬V)) ∨ (S ∨ (¬S))))"
    ],
    "conclusion": "V",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬J) ∧ ((J ∨ C) ∨ (J ∧ J)))",
      "((((¬J) ∧ (¬C)) ∧ C) ∨ ((J ∨ (¬J)) ∧ ((¬C) ∨ (¬J))))"
    ],
    "conclusion": "((((¬J) ∧ (¬C)) ∧ C) ∨ ((J ∨ (¬J)) ∧ ((¬C) ∨ (¬J))))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬X) ∧ X) ∧ ((¬Z) ∧ (¬X))) ∧ (((¬Z) ∧ Z) ∨ (X ∨ Z)))",
      "(¬X)"
    ],
    "conclusion": "(((¬Z) ∧ Z) ∨ (X ∨ Z))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((I ∧ O) ∧ ((¬O) ∨ O)) ∧ (((¬O) ∨ I) ∧ (O ∧ (¬I))))",
      "((((¬I) ∨ (¬I)) ∧ ((¬O) ∧ O)) ∨ ((O ∧ O) ∧ O))"
    ],
    "conclusion": "((((¬I) ∨ (¬I)) ∧ ((¬O) ∧ O)) ∨ ((O ∧ O) ∧ O))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((B ∨ (¬B)) ∨ (C ∧ B)) ∧ C)",
      "((C ∧ ((¬B) ∧ (¬B))) ∨ C)"
    ],
    "conclusion": "((C ∧ ((¬B) ∧ (¬B))) ∨ C)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬K) ∧ (¬S)) ∧ ((¬K) ∨ S)) ∨ K)",
      "((((¬K) ∧ (¬K)) ∧ (S ∧ (¬K))) ∧ (((¬K) ∨ (¬S)) ∧ (S ∨ K)))"
    ],
    "conclusion": "((((¬K) ∧ (¬S)) ∧ ((¬K) ∨ S)) ∨ K)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((T ∨ U) ∨ (T ∨ (¬T))) ∧ (((¬T) ∨ (¬T)) ∧ ((¬T) ∨ U)))",
      "(¬T)"
    ],
    "conclusion": "((T ∨ U) ∨ (T ∨ (¬T)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((H ∨ H) ∧ (H ∨ F)) ∧ ((¬H) ∧ F))",
      "(((F ∨ F) ∨ ((¬F) ∧ (¬F))) ∨ (¬F))"
    ],
    "conclusion": "(((F ∨ F) ∨ ((¬F) ∧ (¬F))) ∨ (¬F))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((U ∨ U) ∨ (U ∨ U)) ∧ (¬I))",
      "(((U ∧ (¬U)) ∧ ((¬U) ∧ (¬U))) ∨ (¬U))"
    ],
    "conclusion": "(¬I)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "R",
      "(C ∧ (((¬C) ∧ R) ∨ ((¬C) ∨ (¬C))))"
    ],
    "conclusion": "(((¬C) ∧ R) ∨ ((¬C) ∨ (¬C)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬U) ∨ (¬S)) ∨ (U ∧ S)) ∨ (¬U))",
      "((((¬U) ∨ U) ∧ (¬U)) ∧ S)"
    ],
    "conclusion": "S",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((B ∧ (¬Z)) ∨ (Z ∧ Z)) ∧ Z)",
      "(((B ∨ B) ∨ (B ∨ (¬B))) ∧ ((Z ∧ Z) ∨ ((¬B) ∧ (¬Z))))"
    ],
    "conclusion": "Z",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬D) ∨ (S ∨ D)) ∧ ((S ∧ (¬D)) ∨ ((¬D) ∨ (¬D))))",
      "(((D ∨ (¬S)) ∨ (¬S)) ∨ ((D ∧ (¬D)) ∨ ((¬D) ∧ S)))"
    ],
    "conclusion": "((S ∧ (¬D)) ∨ ((¬D) ∨ (¬D)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((Q ∧ (¬L)) ∨ ((¬L) ∨ L)) ∨ ((¬L) ∨ (L ∨ (¬Q))))",
      "(((L ∧ Q) ∧ (Q ∧ L)) ∧ ((Q ∨ Q) ∧ Q))"
    ],
    "conclusion": "(((Q ∧ (¬L)) ∨ ((¬L) ∨ L)) ∨ ((¬L) ∨ (L ∨ (¬Q))))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬L) ∧ (Z ∨ (¬L))) ∨ (((¬Z) ∨ L) ∧ L))",
      "(((L ∨ Z) ∧ Z) ∧ (((¬Z) ∨ Z) ∧ ((¬L) ∧ (¬Z))))"
    ],
    "conclusion": "(((¬L) ∧ (Z ∨ (¬L))) ∨ (((¬Z) ∨ L) ∧ L))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬J) ∧ (J ∨ K)) ∧ (((¬K) ∧ J) ∨ ((¬J) ∨ K)))",
      "((((¬J) ∨ J) ∧ ((¬J) ∨ K)) ∨ (((¬J) ∧ (¬K)) ∧ (K ∧ K)))"
    ],
    "conclusion": "(((¬K) ∧ J) ∨ ((¬J) ∨ K))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬S) ∧ U) ∨ (U ∨ (¬S))) ∨ (U ∧ (S ∨ U)))",
      "((¬U) ∧ (¬S))"
    ],
    "conclusion": "(¬S)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(O ∧ ((O ∧ O) ∨ (H ∨ H)))",
      "((((¬H) ∨ H) ∧ (H ∨ (¬O))) ∧ ((O ∨ H) ∨ (H ∨ (¬O))))"
    ],
    "conclusion": "((O ∨ H) ∨ (H ∨ (¬O)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((J ∨ J) ∧ (J ∨ J)) ∧ B)",
      "((((¬J) ∨ J) ∧ ((¬B) ∨ B)) ∨ J)"
    ],
    "conclusion": "B",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(¬Y)",
      "((((¬Y) ∧ (¬W)) ∧ (¬W)) ∧ ((¬Y) ∧ (Y ∨ (¬Y))))"
    ],
    "conclusion": "((¬Y) ∧ (Y ∨ (¬Y)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((Q ∧ (N ∨ N)) ∧ (N ∧ ((¬Q) ∧ (¬Q))))",
      "(((Q ∧ (¬Q)) ∧ ((¬N) ∨ (¬N))) ∨ (((¬Q) ∧ (¬N)) ∨ (¬N)))"
    ],
    "conclusion": "(((Q ∧ (¬Q)) ∧ ((¬N) ∨ (¬N))) ∨ (((¬Q) ∧ (¬N)) ∨ (¬N)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬P) ∧ (¬P)) ∨ (P ∧ P)) ∧ ((Z ∨ (¬Z)) ∧ (Z ∧ (¬P))))",
      "(((P ∨ (¬P)) ∨ (¬Z)) ∧ ((Z ∧ (¬Z)) ∨ ((¬Z) ∧ (¬Z))))"
    ],
    "conclusion": "((P ∨ (¬P)) ∨ (¬Z))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬Z) ∨ ((Z ∧ (¬Z)) ∧ Z))",
      "(Z ∧ (((¬V) ∨ (¬Z)) ∨ ((¬Z) ∨ (¬Z))))"
    ],
    "conclusion": "(((¬V) ∨ (¬Z)) ∨ ((¬Z) ∨ (¬Z)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((R ∨ H) ∧ ((¬R) ∨ R)) ∨ (((¬H) ∨ R) ∨ (R ∧ (¬R))))",
      "(((H ∧ H) ∧ ((¬H) ∨ H)) ∧ H)"
    ],
    "conclusion": "H",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬V) ∧ (¬G)) ∧ ((¬G) ∧ (¬V))) ∧ ((G ∧ G) ∧ (V ∧ G)))",
      "((((¬V) ∨ (¬V)) ∨ ((¬V) ∨ (¬V))) ∨ ((V ∨ (¬G)) ∧ ((¬G) ∧ V)))"
    ],
    "conclusion": "((((¬V) ∨ (¬V)) ∨ ((¬V) ∨ (¬V))) ∨ ((V ∨ (¬G)) ∧ ((¬G) ∧ V)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((E ∧ (W ∨ (¬E))) ∧ (((¬E) ∨ (¬W)) ∧ (E ∨ W)))",
      "((W ∧ ((¬E) ∨ W)) ∨ ((W ∧ W) ∧ ((¬W) ∧ E)))"
    ],
    "conclusion": "(((¬E) ∨ (¬W)) ∧ (E ∨ W))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((E ∧ (¬E)) ∧ ((¬E) ∨ (¬L))) ∧ (((¬L) ∨ (¬E)) ∨ ((¬L) ∧ (¬L))))",
      "(((¬L) ∧ ((¬L) ∧ E)) ∨ (((¬E) ∧ (¬E)) ∧ (¬E)))"
    ],
    "conclusion": "(((¬L) ∧ ((¬L) ∧ E)) ∨ (((¬E) ∧ (¬E)) ∧ (¬E)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬E) ∨ F) ∨ ((¬E) ∧ F)) ∧ ((¬E) ∧ (F ∧ (¬F))))",
      "((¬F) ∧ (((¬E) ∨ E) ∨ (F ∨ E)))"
    ],
    "conclusion": "(((¬E) ∨ F) ∨ ((¬E) ∧ F))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬X) ∧ ((¬X) ∧ (¬X))) ∧ (((¬P) ∧ (¬P)) ∨ (X ∧ X)))",
      "(¬X)"
    ],
    "conclusion": "(((¬P) ∧ (¬P)) ∨ (X ∧ X))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬N) ∨ Y) ∨ (¬Y)) ∧ (¬Y))",
      "(¬N)"
    ],
    "conclusion": "(((¬N) ∨ Y) ∨ (¬Y))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬C) ∨ ((¬G) ∨ (¬C))) ∧ ((¬C) ∧ ((¬C) ∨ C)))",
      "((((¬C) ∨ C) ∨ (C ∨ (¬C))) ∧ (((¬C) ∨ C) ∨ G))"
    ],
    "conclusion": "((¬C) ∨ ((¬G) ∨ (¬C)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬O) ∧ (¬S)) ∧ ((¬S) ∧ (¬S))) ∨ (¬O))",
      "((((¬S) ∨ (¬S)) ∨ (S ∧ (¬S))) ∧ ((S ∨ S) ∨ (O ∧ (¬S))))"
    ],
    "conclusion": "((((¬O) ∧ (¬S)) ∧ ((¬S) ∧ (¬S))) ∨ (¬O))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬A) ∧ ((Q ∧ (¬A)) ∧ (Q ∨ (¬A))))",
      "Q"
    ],
    "conclusion": "Q",
    "applied_rules": [
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬V) → V) ∧ (V → V)) → ((L ∧ (¬L)) → (V ∧ (¬L))))",
      "(((L → V) → (V ∨ (¬V))) ∧ ((L ¬ (¬L)) ∨ (V ∨ L)))"
    ],
    "conclusion": "((L ¬ (¬L)) ∨ (V ∨ L))",
    "applied_rules": [
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((Q ∨ Q) ∧ ((¬Q) ∧ G)) ∨ (((¬Q) ¬ (¬Q)) ∧ (Q ¬ (¬Q))))",
      "(((G ∨ G) ∧ (Q ∨ (¬Q))) ∧ ((¬Q) ¬ (Q → Q)))"
    ],
    "conclusion": "(((Q ∨ Q) ∧ ((¬Q) ∧ G)) ∨ (((¬Q) ¬ (¬Q)) ∧ (Q ¬ (¬Q))))",
    "applied_rules": [
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(((P ∨ S) ∨ ((¬P) → (¬P))) ¬ P)",
      "(((S → (¬P)) ∧ ((¬S) ∨ (¬S))) ∧ ((S → (¬P)) → (P → S)))"
    ],
    "conclusion": "((S → (¬P)) ∧ ((¬S) ∨ (¬S)))",
    "applied_rules": [
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(G ∧ ((L ¬ G) → ((¬G) → G)))",
      "(((L ∧ L) ∧ (G ∨ (¬L))) ∨ (((¬G) ∧ (¬L)) ∨ ((¬G) ¬ (¬G))))"
    ],
    "conclusion": "(((L ∧ L) ∧ (G ∨ (¬L))) ∨ (((¬G) ∧ (¬L)) ∨ ((¬G) ¬ (¬G))))",
    "applied_rules": [
      "simplification",
      "addition"
    ]
  },
  {
    "premises": [
      "(L ∨ L)",
      "((¬I) ∧ (¬I))"
    ],
    "conclusion": "(¬I)",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬V) → M) ¬ ((¬M) ¬ M)) → ((V ¬ V) → (V ¬ (¬M))))",
      "(V ∧ (((¬V) → V) ∨ (M → M)))"
    ],
    "conclusion": "(((¬V) → V) ∨ (M → M))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((¬T) → ((¬O) ¬ (¬T))) ∧ (((¬O) → T) → (T ∨ O)))",
      "((((¬O) ∨ T) ¬ O) ∨ (((¬T) ∧ O) ∨ (T ¬ (¬O))))"
    ],
    "conclusion": "(((¬O) → T) → (T ∨ O))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((((¬L) ¬ (¬Y)) ∨ Y) ∧ (((¬L) ¬ L) ¬ (L ¬ Y)))",
      "(((L ∧ L) ∨ L) ∨ ((L ∨ Y) ∧ ((¬L) → (¬Y))))"
    ],
    "conclusion": "(((¬L) ¬ L) ¬ (L ¬ Y))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬E) ∧ (((¬E) ∧ (¬E)) ∧ ((¬R) ∨ (¬E))))",
      "((R ∧ ((¬R) ∧ (¬E))) ∨ (((¬R) ¬ (¬R)) ∨ (¬E)))"
    ],
    "conclusion": "(((¬E) ∧ (¬E)) ∧ ((¬R) ∨ (¬E)))",
    "applied_rules": [
      "addition",
      "simplification"
    ]
  },
  {
    "premises": [
      "(((J ⊕ (¬J)) ↔ ((¬J) ↔ (¬J))) ∨ J)",
      "(¬J)"
    ],
    "conclusion": "(((J ⊕ (¬J)) ↔ ((¬J) ↔ (¬J))) ∨ J)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬K)",
      "(K ∨ ((K → (¬W)) → K))"
    ],
    "conclusion": "(K ∨ ((K → (¬W)) → K))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "(((¬A) ⊕ ((¬A) ¬ A)) ∨ U)"
    ],
    "conclusion": "(((¬A) ⊕ ((¬A) ¬ A)) ∨ U)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "(Q ∨ ((M ¬ M) ↔ (M ⊕ M)))"
    ],
    "conclusion": "(Q ∨ ((M ¬ M) ↔ (M ⊕ M)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(((S ↔ Q) ∧ ((¬S) ¬ (¬Q))) ∨ Q)",
      "(¬Q)"
    ],
    "conclusion": "(((S ↔ Q) ∧ ((¬S) ¬ (¬Q))) ∨ Q)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬T) ∧ (T ∧ ((¬P) → T)))",
      "(¬T)"
    ],
    "conclusion": "(¬(¬P))",
    "applied_rules": [
      "modus_tollens",
      "simplification"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "(L ∨ (((¬L) ¬ L) ∧ ((¬L) ⊕ (¬Y))))"
    ],
    "conclusion": "(L ∨ (((¬L) ¬ L) ∧ ((¬L) ⊕ (¬Y))))",
    "applied_rules": [
      "disjunctive_syllogism",
      "simplification"
    ]
  },
  {
    "premises": [
      "((¬L) ∧ ((Y ∧ (¬L)) ∧ ((¬Y) → (¬Y))))",
      "(¬Y)"
    ],
    "conclusion": "((¬Y) → (¬Y))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "((¬R) ∧ ((¬R) → (L → (¬R))))"
    ],
    "conclusion": "(L → (¬R))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((N → X) ¬ ((¬X) ∧ X)) ∧ ((¬X) → ((¬X) ↔ X)))",
      "(¬X)"
    ],
    "conclusion": "((¬X) ↔ X)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬C)",
      "(((R → R) ⊕ ((¬C) → (¬C))) ∧ ((¬C) → (R ↔ C)))"
    ],
    "conclusion": "(R ↔ C)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬W) → V) ∧ (V ∧ (¬W)))",
      "(¬V)"
    ],
    "conclusion": "((¬W) → V)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "(((¬R) → (¬H)) ∨ R)"
    ],
    "conclusion": "(((¬R) → (¬H)) ∨ R)",
    "applied_rules": [
      "modus_ponens",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬D) ∨ F) ∧ (D → D)) ∧ (¬F))",
      "(((D → (¬F)) ⊕ (F → F)) ¬ ((¬F) ∧ ((¬D) ⊕ (¬F))))"
    ],
    "conclusion": "(((¬D) ∨ F) ∧ (D → D))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(H ∧ (((¬H) ∨ (¬V)) ∧ (¬H)))",
      "(H → ((¬H) ∨ (V ⊕ V)))"
    ],
    "conclusion": "((¬H) ∨ (V ⊕ V))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(R → ((R ∨ (¬M)) ∧ ((¬M) ↔ (¬R))))",
      "R"
    ],
    "conclusion": "((R ∨ (¬M)) ∧ ((¬M) ↔ (¬R)))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬S)",
      "(((C ∨ (¬C)) ∧ ((¬S) ¬ (¬S))) ∧ ((¬C) ∧ (S ∨ C)))"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬I) ∨ (¬I)) ∧ (I ¬ Z)) ∨ (¬Z))",
      "((¬Z) ∧ (((¬Z) ↔ Z) → Z))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(K → (¬K))",
      "((((¬F) ⊕ (¬F)) ∨ (K ↔ (¬K))) ∧ ((K → (¬F)) → K))"
    ],
    "conclusion": "((K → (¬F)) → (¬K))",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((¬A) ∧ ((N ¬ N) → A))",
      "((((¬N) ∨ (¬N)) → (N ∧ N)) ¬ (¬N))"
    ],
    "conclusion": "((N ¬ N) → A)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬I) ⊕ E) ∧ (I ∧ E)) ∧ (E → (¬E)))",
      "(E ⊕ (((¬I) → I) ∧ ((¬I) ∧ I)))"
    ],
    "conclusion": "(((¬I) ⊕ E) ∧ (I ∧ E))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(Z → (N ↔ ((¬N) ↔ (¬Z))))",
      "(((Z ↔ (¬Z)) → (N → Z)) ∧ Z)"
    ],
    "conclusion": "(N ↔ ((¬N) ↔ (¬Z)))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((P ∧ (¬A)) ∨ P)"
    ],
    "conclusion": "(¬A)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬D) ∧ (D → V))",
      "D"
    ],
    "conclusion": "(¬D)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((C ↔ I) ∨ (C ↔ (¬I))) ↔ (((¬I) ∨ I) ¬ ((¬C) ↔ (¬C))))",
      "((¬I) ∧ ((¬C) → I))"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((D ∨ (D ⊕ D)) ∧ D)",
      "(¬D)"
    ],
    "conclusion": "(D ∨ (D ⊕ D))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬O)",
      "(((O ⊕ E) ↔ ((¬O) ∧ (¬E))) ∧ ((¬O) → (¬O)))"
    ],
    "conclusion": "((O ⊕ E) ↔ ((¬O) ∧ (¬E)))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((M ↔ M) → S) ∧ (((¬M) ⊕ S) ∨ ((¬S) ¬ M)))",
      "(¬S)"
    ],
    "conclusion": "(¬(M ↔ M))",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((((¬D) → (¬Y)) ∨ (D ∧ (¬D))) ∧ (((¬D) ¬ (¬Y)) → D))"
    ],
    "conclusion": "(((¬D) ¬ (¬Y)) → D)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬R) ∨ (¬U)) ↔ (¬U)) ∨ R)",
      "((((¬R) ↔ (¬R)) ∧ (R ∨ U)) ∧ (¬U))"
    ],
    "conclusion": "R",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(G → ((G ∨ (¬K)) ∨ (K ¬ K)))",
      "(((K ↔ (¬G)) ↔ (K ↔ (¬G))) ∧ G)"
    ],
    "conclusion": "G",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((H → P) ∧ (¬P))",
      "((¬H) ∨ (((¬H) → H) ⊕ ((¬H) ∧ (¬P))))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬N) ∧ (¬N)) ∨ H) ∧ (¬H))",
      "((((¬N) ⊕ N) ↔ (N ∨ H)) ↔ ((N ¬ N) ∨ (H ↔ H)))"
    ],
    "conclusion": "(¬H)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((L ⊕ V) ∨ (¬L)) ∧ (¬V))",
      "(V ∨ (((¬V) ↔ V) ↔ (V ⊕ L)))"
    ],
    "conclusion": "(¬V)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((N → (¬S)) ∨ (S ¬ (¬N))) ∧ (¬S))",
      "((((¬N) ⊕ S) → (N ∧ (¬N))) ∨ S)"
    ],
    "conclusion": "(¬S)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(((A ∧ A) ↔ (A ↔ (¬A))) ∧ (((¬A) ↔ (¬M)) ∨ A))",
      "(¬A)"
    ],
    "conclusion": "((A ∧ A) ↔ (A ↔ (¬A)))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((J ∨ (J ¬ J)) ∧ (¬J))",
      "(((J ⊕ J) ∨ (H → (¬J))) → ((H → (¬H)) ↔ (J ∨ (¬J))))"
    ],
    "conclusion": "(J ∨ (J ¬ J))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "((¬A) ∧ ((A ¬ V) ∨ A))"
    ],
    "conclusion": "(A ¬ V)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬J) → ((Z ↔ (¬Z)) ¬ (Z → J)))",
      "((J ∨ ((¬J) ¬ Z)) ∧ (¬J))"
    ],
    "conclusion": "(¬J)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬Q) → (((¬I) ↔ (¬I)) ∧ (¬Q)))",
      "(¬Q)"
    ],
    "conclusion": "((¬I) ↔ (¬I))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬J) ∧ (((¬J) ∨ G) ∨ J))",
      "((J → J) ¬ (((¬J) ∧ (¬G)) ¬ G))"
    ],
    "conclusion": "(((¬J) ∨ G) ∨ J)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((W → (W ⊕ O)) ∧ ((W ∨ W) ¬ ((¬W) ∧ O)))",
      "W"
    ],
    "conclusion": "(W ⊕ O)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "(((¬N) ↔ (N ∨ N)) ∧ (¬M))",
      "(M ∨ ((M ⊕ (¬N)) ∨ (M ∨ (¬M))))"
    ],
    "conclusion": "(¬M)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬I) ∧ ((I ∧ (¬J)) ⊕ (¬I)))",
      "(I ∨ J)"
    ],
    "conclusion": "J",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(Z ∧ (¬Z))",
      "(Z ∨ ((X ⊕ X) ∧ (X ∨ (¬Z))))"
    ],
    "conclusion": "(¬Z)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(¬I)",
      "(((I → (¬I)) ∧ ((¬I) ∧ A)) ∧ (I ∨ ((¬A) ∧ (¬I))))"
    ],
    "conclusion": "(I ∨ ((¬A) ∧ (¬I)))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬N) ∧ (W ∧ (W → W)))",
      "W"
    ],
    "conclusion": "(W ∧ (W → W))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((G ∨ (G ⊕ V)) ∧ ((V ¬ (¬V)) ⊕ (G ∧ G)))",
      "(¬G)"
    ],
    "conclusion": "((V ¬ (¬V)) ⊕ (G ∧ G))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬A) ∧ (A ∧ (¬A)))",
      "(((¬A) ⊕ (¬K)) ∨ A)"
    ],
    "conclusion": "(A ∧ (¬A))",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((((¬E) → A) ⊕ ((¬A) ¬ A)) ∧ (¬A))",
      "((¬A) → (((¬A) ∧ E) ⊕ (A → A)))"
    ],
    "conclusion": "(¬A)",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬K) → H) ¬ ((¬H) ⊕ H)) → K)",
      "(((H → (¬H)) → ((¬K) ∨ (¬K))) ∧ (¬K))"
    ],
    "conclusion": "(¬(((¬K) → H) ¬ ((¬H) ⊕ H)))",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬X) ∧ (¬X)) ↔ ((¬X) ¬ X)) ∧ (((¬X) → G) ∧ G))",
      "(G → (¬X))"
    ],
    "conclusion": "(G → (¬X))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "C",
      "(O ∧ (O → ((¬C) → (¬C))))"
    ],
    "conclusion": "(O → ((¬C) → (¬C)))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((((¬A) ⊕ (¬A)) ↔ (H → (¬A))) ¬ ((¬A) ∨ (H ⊕ (¬A))))",
      "((H → ((¬A) ↔ H)) ∧ ((¬A) → H))"
    ],
    "conclusion": "((¬A) → H)",
    "applied_rules": [
      "simplification",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "((A ∧ ((¬A) ∧ (¬B))) ∧ A)",
      "(B ∨ (A → (A ⊕ A)))"
    ],
    "conclusion": "(¬B)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "Z",
      "((((¬Z) → M) ∧ ((¬Z) ↔ M)) ∧ (Z → ((¬Z) ⊕ (¬M))))"
    ],
    "conclusion": "((¬Z) ⊕ (¬M))",
    "applied_rules": [
      "simplification",
      "modus_ponens"
    ]
  },
  {
    "premises": [
      "((¬L) ∧ ((L ↔ O) → L))",
      "(O ↔ (¬L))"
    ],
    "conclusion": "((L ↔ O) → L)",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬P) ∧ ((P ∧ W) ∧ ((¬P) ∨ P)))",
      "(¬P)"
    ],
    "conclusion": "((¬P) ∨ P)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "((¬D) ∧ ((¬D) → D))",
      "((((¬B) → (¬B)) ⊕ (D → D)) ¬ (((¬D) ∧ (¬B)) ¬ ((¬B) ⊕ (¬B))))"
    ],
    "conclusion": "(¬(¬D))",
    "applied_rules": [
      "simplification",
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "G",
      "((¬B) ∧ ((G ¬ B) ∨ B))"
    ],
    "conclusion": "(¬B)",
    "applied_rules": [
      "simplification",
      "disjunctive_syllogism"
    ]
  },
  {
    "premises": [
      "(O ∨ (¬N))",
      "(¬O)"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "(L ∨ ((L → (¬L)) ∧ ((¬L) ↔ U)))"
    ],
    "conclusion": "(L ∨ ((L → (¬L)) ∧ ((¬L) ↔ U)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬U) → S) ∨ (¬S)) ∨ S)",
      "(¬S)"
    ],
    "conclusion": "(((¬U) → S) ∨ (¬S))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(V → (((¬V) → (¬P)) ∨ ((¬V) ∨ (¬V))))",
      "V"
    ],
    "conclusion": "(((¬V) → (¬P)) ∨ ((¬V) ∨ (¬V)))",
    "applied_rules": [
      "modus_ponens",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "(((M ∨ A) ⊕ M) ∨ M)"
    ],
    "conclusion": "(((M ∨ A) ⊕ M) ∨ M)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(J ∨ (¬Q))",
      "(¬J)"
    ],
    "conclusion": "(J ∨ (¬Q))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬H) ∨ (¬E)) ¬ ((¬H) ∧ H)) ∨ E)",
      "(¬E)"
    ],
    "conclusion": "(((¬H) ∨ (¬E)) ¬ ((¬H) ∧ H))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "A",
      "(A → (((¬F) ∨ A) ∨ ((¬F) ∨ F)))"
    ],
    "conclusion": "(((¬F) ∨ A) ∨ ((¬F) ∨ F))",
    "applied_rules": [
      "modus_ponens",
      "addition"
    ]
  },
  {
    "premises": [
      "(K → ((K ∧ (¬K)) ∨ ((¬U) ↔ (¬U))))",
      "K"
    ],
    "conclusion": "((K ∧ (¬K)) ∨ ((¬U) ↔ (¬U)))",
    "applied_rules": [
      "modus_ponens",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(((B ⊕ W) ¬ W) ∨ W)"
    ],
    "conclusion": "(((B ⊕ W) ¬ W) ∨ W)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬F) ⊕ (¬F)) ¬ (¬J)) ∨ J)",
      "(¬J)"
    ],
    "conclusion": "(((¬F) ⊕ (¬F)) ¬ (¬J))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(A ∨ ((U ⊕ U) ⊕ ((¬U) ↔ U)))",
      "(¬A)"
    ],
    "conclusion": "(A ∨ ((U ⊕ U) ⊕ ((¬U) ↔ U)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬Z)",
      "(Z ∨ B)"
    ],
    "conclusion": "B",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬U) ∨ U)",
      "(¬U)"
    ],
    "conclusion": "(¬U)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "(P ∨ (W ∨ ((¬P) ⊕ (¬P))))"
    ],
    "conclusion": "(P ∨ (W ∨ ((¬P) ⊕ (¬P))))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "(((A ⊕ A) ¬ (A ∨ X)) ∨ A)"
    ],
    "conclusion": "(((A ⊕ A) ¬ (A ∨ X)) ∨ A)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬L) ∨ L)",
      "(¬L)"
    ],
    "conclusion": "((¬L) ∨ L)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "(((¬P) → (P ⊕ P)) ∨ P)"
    ],
    "conclusion": "((¬P) → (P ⊕ P))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "(N ∨ ((¬N) ∧ ((¬G) ¬ (¬G))))"
    ],
    "conclusion": "((¬N) ∧ ((¬G) ¬ (¬G)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(((¬B) ↔ B) ∨ W)"
    ],
    "conclusion": "(((¬B) ↔ B) ∨ W)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(J ∨ ((J → J) ∧ ((¬D) ¬ (¬D))))",
      "(¬J)"
    ],
    "conclusion": "((J → J) ∧ ((¬D) ¬ (¬D)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "X",
      "(X → ((D ⊕ (¬X)) ∨ (D → D)))"
    ],
    "conclusion": "((D ⊕ (¬X)) ∨ (D → D))",
    "applied_rules": [
      "modus_ponens",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬K)",
      "(K ∨ (((¬A) → A) ↔ ((¬K) ∧ K)))"
    ],
    "conclusion": "(K ∨ (((¬A) → A) ↔ ((¬K) ∧ K)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "((((¬N) ∧ (¬F)) ∨ N) ∨ N)"
    ],
    "conclusion": "(((¬N) ∧ (¬F)) ∨ N)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬H)",
      "(H ∨ (((¬J) → H) ↔ ((¬H) ∧ H)))"
    ],
    "conclusion": "(((¬J) → H) ↔ ((¬H) ∧ H))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬A) → (((¬A) ↔ (¬M)) ∨ ((¬M) ∨ (¬M))))",
      "(¬A)"
    ],
    "conclusion": "(((¬A) ↔ (¬M)) ∨ ((¬M) ∨ (¬M)))",
    "applied_rules": [
      "modus_ponens",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "(((¬B) ¬ ((¬L) ∨ B)) ∨ L)"
    ],
    "conclusion": "((¬B) ¬ ((¬L) ∨ B))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(((X → (¬X)) ⊕ X) ∨ X)",
      "(¬X)"
    ],
    "conclusion": "((X → (¬X)) ⊕ X)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(L ∨ ((¬L) ¬ (¬L)))",
      "(¬L)"
    ],
    "conclusion": "((¬L) ¬ (¬L))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "((((¬R) ↔ R) → (R ↔ R)) ∨ R)"
    ],
    "conclusion": "((((¬R) ↔ R) → (R ↔ R)) ∨ R)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((((¬P) ∧ L) ⊕ (P → (¬P))) ∨ L)",
      "(¬L)"
    ],
    "conclusion": "((((¬P) ∧ L) ⊕ (P → (¬P))) ∨ L)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(G ∨ Q)",
      "(¬G)"
    ],
    "conclusion": "(G ∨ Q)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬L)",
      "(L ∨ (L ∨ ((¬L) ¬ (¬C))))"
    ],
    "conclusion": "(L ∨ (L ∨ ((¬L) ¬ (¬C))))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(D ∨ (¬D))",
      "(¬D)"
    ],
    "conclusion": "(¬D)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(I ∨ (((¬E) ⊕ I) ∨ (E ⊕ I)))",
      "(¬I)"
    ],
    "conclusion": "(I ∨ (((¬E) ⊕ I) ∨ (E ⊕ I)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(((S ∨ S) → ((¬S) ⊕ (¬S))) ∨ S)",
      "(¬S)"
    ],
    "conclusion": "((S ∨ S) → ((¬S) ⊕ (¬S)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬R)",
      "(R ∨ (((¬O) ∧ R) ∧ (O ↔ O)))"
    ],
    "conclusion": "(R ∨ (((¬O) ∧ R) ∧ (O ↔ O)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "(M ∨ (((¬M) ∨ M) ⊕ ((¬M) ¬ (¬M))))"
    ],
    "conclusion": "(((¬M) ∨ M) ⊕ ((¬M) ¬ (¬M)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬N) ∨ ((¬T) ∨ (¬T))) ∨ T)",
      "(¬T)"
    ],
    "conclusion": "((¬N) ∨ ((¬T) ∨ (¬T)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "((((¬R) ¬ E) → (¬R)) ∨ E)"
    ],
    "conclusion": "(((¬R) ¬ E) → (¬R))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "(Q ∨ (((¬Q) ∨ N) ∧ (Q ⊕ Q)))"
    ],
    "conclusion": "(Q ∨ (((¬Q) ∨ N) ∧ (Q ⊕ Q)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬U)",
      "((((¬H) ¬ (¬H)) ∧ (H ∨ U)) ∨ U)"
    ],
    "conclusion": "(((¬H) ¬ (¬H)) ∧ (H ∨ U))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(W ∨ (((¬W) ↔ (¬W)) ∨ ((¬K) ∨ W)))",
      "(¬W)"
    ],
    "conclusion": "(((¬W) ↔ (¬W)) ∨ ((¬K) ∨ W))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬Y)",
      "(((F ⊕ Y) ∨ (Y ¬ Y)) ∨ Y)"
    ],
    "conclusion": "((F ⊕ Y) ∨ (Y ¬ Y))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(¬N)",
      "(N ∨ (((¬N) ∨ (¬W)) → (¬W)))"
    ],
    "conclusion": "(((¬N) ∨ (¬W)) → (¬W))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "((¬U) ∨ H)",
      "(¬H)"
    ],
    "conclusion": "(¬U)",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(((¬K) ¬ (W ↔ (¬K))) ∨ K)",
      "(¬K)"
    ],
    "conclusion": "((¬K) ¬ (W ↔ (¬K)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "(Q ∨ (Q ⊕ ((¬A) ∧ Q)))",
      "(¬Q)"
    ],
    "conclusion": "(Q ∨ (Q ⊕ ((¬A) ∧ Q)))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  },
  {
    "premises": [
      "W",
      "(W → (((¬W) ¬ (¬Y)) → W))"
    ],
    "conclusion": "(((¬W) ¬ (¬Y)) → (((¬W) ¬ (¬Y)) → W))",
    "applied_rules": [
      "modus_ponens",
      "hypothetical_syllogism"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "(Q ∨ ((Q ∧ Q) ∨ (Q ∨ O)))"
    ],
    "conclusion": "((Q ∧ Q) ∨ (Q ∨ O))",
    "applied_rules": [
      "disjunctive_syllogism",
      "addition"
    ]
  }
]