[
  {
    "premises": [
      "(((Q ¬ (¬Z)) ¬ ((¬Z) ¬ Z)) → Z)",
      "(¬Z)"
    ],
    "conclusion": "(¬((Q ¬ (¬Z)) ¬ ((¬Z) ¬ Z)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((¬P) → (P ¬ (O → (¬P))))",
      "(((P → O) ¬ (O → P)) → P)"
    ],
    "conclusion": "(¬((P → O) ¬ (O → P)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬E) → (F → ((¬F) → E)))",
      "((((¬E) ¬ (¬F)) → ((¬F) ¬ (¬F))) → E)",
      "(¬E)"
    ],
    "conclusion": "(¬(((¬E) ¬ (¬F)) → ((¬F) ¬ (¬F))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬N) ¬ N) ¬ (¬S)) ¬ ((S → (¬S)) ¬ (S → S)))",
      "(¬N)",
      "(N → N)"
    ],
    "conclusion": "(¬N)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬W) ¬ (¬W)) → (W → (¬W))) ¬ ((W ¬ (¬W)) → (W ¬ (¬W))))",
      "(¬C)",
      "(((W ¬ C) → (W ¬ W)) → C)"
    ],
    "conclusion": "(¬((W ¬ C) → (W ¬ W)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((D ¬ (¬D)) ¬ (D ¬ (¬B))) → D)",
      "(¬D)",
      "(((B ¬ (¬D)) → ((¬B) → (¬B))) → (¬B))"
    ],
    "conclusion": "(¬((D ¬ (¬D)) ¬ (D ¬ (¬B))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬J) → (¬J)) ¬ (J → (¬J))) → J)",
      "(¬J)"
    ],
    "conclusion": "(¬(((¬J) → (¬J)) ¬ (J → (¬J))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬G) → (¬P)) ¬ ((¬G) → (¬P))) → G)",
      "(¬G)",
      "((P → (G ¬ (¬G))) → ((G → (¬G)) ¬ ((¬G) ¬ (¬G))))"
    ],
    "conclusion": "(¬(((¬G) → (¬P)) ¬ ((¬G) → (¬P))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬D) ¬ ((¬M) ¬ (¬M))) → M)",
      "(((M ¬ D) → (M ¬ M)) → ((D ¬ (¬D)) ¬ ((¬D) → (¬M))))",
      "(¬M)"
    ],
    "conclusion": "(¬((¬D) ¬ ((¬M) ¬ (¬M))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((E → N) ¬ (((¬N) ¬ E) ¬ ((¬E) ¬ N)))",
      "(¬E)",
      "(((¬N) ¬ (¬E)) → E)"
    ],
    "conclusion": "(¬((¬N) ¬ (¬E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬O) → (¬C)) → (¬C)) → O)",
      "(¬O)"
    ],
    "conclusion": "(¬(((¬O) → (¬C)) → (¬C)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬R) → R) ¬ ((¬O) → (¬R))) → (¬R))",
      "(((O ¬ R) ¬ (¬R)) → O)",
      "(¬O)"
    ],
    "conclusion": "(¬((O ¬ R) ¬ (¬R)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬A) → ((¬N) → ((¬N) ¬ A)))",
      "(((A → N) ¬ ((¬N) → N)) → A)",
      "(¬A)"
    ],
    "conclusion": "(¬((A → N) ¬ ((¬N) → N)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(T → T)",
      "(¬T)"
    ],
    "conclusion": "(¬T)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((V ¬ V) ¬ (¬V)) → V)",
      "(¬V)",
      "((((¬V) ¬ V) ¬ ((¬V) ¬ (¬V))) ¬ (((¬V) ¬ V) → ((¬W) ¬ V)))"
    ],
    "conclusion": "(¬((V ¬ V) ¬ (¬V)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬T)",
      "T",
      "(((P → (¬T)) ¬ (T → P)) → T)"
    ],
    "conclusion": "(¬((P → (¬T)) ¬ (T → P)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬T) → G)",
      "(¬G)",
      "((G ¬ G) → (T ¬ ((¬G) → (¬T))))"
    ],
    "conclusion": "(¬(¬T))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((F → (¬O)) → (¬F)) → F)",
      "(¬F)"
    ],
    "conclusion": "(¬((F → (¬O)) → (¬F)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "((¬E) → E)",
      "((((¬K) ¬ E) → (K ¬ K)) ¬ (((¬E) ¬ (¬K)) ¬ E))"
    ],
    "conclusion": "(¬(¬E))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "(((F → F) ¬ ((¬A) → F)) → (¬F))",
      "((((¬F) → F) ¬ ((¬A) → F)) → A)"
    ],
    "conclusion": "(¬(((¬F) → F) ¬ ((¬A) → F)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((O ¬ W) ¬ ((¬O) ¬ O)) → W)",
      "((((¬O) → O) → ((¬O) ¬ (¬O))) → (((¬O) ¬ W) → ((¬W) → (¬O))))",
      "(¬W)"
    ],
    "conclusion": "(¬((O ¬ W) ¬ ((¬O) ¬ O)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((J → (¬J)) ¬ (¬R)) → J)",
      "(((J ¬ R) ¬ J) ¬ (((¬J) → (¬J)) ¬ ((¬J) → J)))",
      "(¬J)"
    ],
    "conclusion": "(¬((J → (¬J)) ¬ (¬R)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((M ¬ M) → (M → (¬S))) → S)",
      "(¬S)",
      "(((M ¬ (¬M)) ¬ (S → S)) → M)"
    ],
    "conclusion": "(¬((M ¬ M) → (M → (¬S))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(C → C)",
      "(¬C)",
      "((¬Z) ¬ (C ¬ (C ¬ (¬Z))))"
    ],
    "conclusion": "(¬C)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬C) → W)",
      "(((W ¬ (¬C)) → (W ¬ W)) ¬ ((W ¬ W) → (C → W)))",
      "(¬W)"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬K) → K)",
      "(¬K)",
      "(¬Z)"
    ],
    "conclusion": "(¬(¬K))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬E) ¬ (¬E)) → ((¬E) ¬ (¬E))) → A)",
      "(¬A)"
    ],
    "conclusion": "(¬(((¬E) ¬ (¬E)) → ((¬E) ¬ (¬E))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬O) → Q)",
      "(¬Q)"
    ],
    "conclusion": "(¬(¬O))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬B)",
      "((H → B) → B)"
    ],
    "conclusion": "(¬(H → B))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬E)",
      "(((B → (¬E)) ¬ (B ¬ E)) → E)",
      "((((¬B) → (¬B)) ¬ (B → E)) → ((E ¬ (¬E)) ¬ ((¬E) ¬ B)))"
    ],
    "conclusion": "(¬((B → (¬E)) ¬ (B ¬ E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((K ¬ (¬T)) → (T ¬ K)) ¬ ((T → (¬T)) ¬ (T ¬ (¬K))))",
      "(¬T)",
      "((((¬T) → (¬K)) → ((¬K) ¬ (¬K))) → T)"
    ],
    "conclusion": "(¬(((¬T) → (¬K)) → ((¬K) ¬ (¬K))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "(((M → M) → S) → M)"
    ],
    "conclusion": "(¬((M → M) → S))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((((¬E) → (¬E)) → (E → E)) → P)"
    ],
    "conclusion": "(¬(((¬E) → (¬E)) → (E → E)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((¬C) → B)",
      "(¬B)",
      "((((¬B) ¬ (¬C)) ¬ ((¬B) ¬ C)) → (((¬C) → (¬B)) → (B → (¬B))))"
    ],
    "conclusion": "(¬(¬C))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬W)",
      "(((Y ¬ (¬W)) → Y) → ((W ¬ W) ¬ (Y ¬ Y)))",
      "((((¬Y) → (¬Y)) → ((¬Y) → W)) → W)"
    ],
    "conclusion": "(¬(((¬Y) → (¬Y)) → ((¬Y) → W)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(R → N)",
      "(¬N)"
    ],
    "conclusion": "(¬R)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬Q)",
      "((Q ¬ (¬Q)) → Q)",
      "((((¬U) ¬ Q) → Q) ¬ U)"
    ],
    "conclusion": "(¬(Q ¬ (¬Q)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬P) → Y) ¬ (Y → (¬P))) ¬ Y)",
      "(¬P)",
      "(P → P)"
    ],
    "conclusion": "(¬P)",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬P)",
      "((((¬P) → (¬P)) → ((¬E) → (¬P))) → P)"
    ],
    "conclusion": "(¬(((¬P) → (¬P)) → ((¬E) → (¬P))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬G) ¬ S) → (G ¬ (¬S))) → S)",
      "(¬S)"
    ],
    "conclusion": "(¬(((¬G) ¬ S) → (G ¬ (¬S))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬M)",
      "((((¬M) → (¬I)) ¬ (M → (¬I))) → M)"
    ],
    "conclusion": "(¬(((¬M) → (¬I)) ¬ (M → (¬I))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((G ¬ (¬X)) ¬ ((¬G) ¬ X)) → (((¬G) → (¬G)) ¬ ((¬X) ¬ G)))",
      "(((X → (¬X)) → (G → (¬X))) → G)",
      "(¬G)"
    ],
    "conclusion": "(¬((X → (¬X)) → (G → (¬X))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬J)",
      "(((L ¬ J) → ((¬J) ¬ J)) → J)"
    ],
    "conclusion": "(¬((L ¬ J) → ((¬J) ¬ J)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((L → (¬T)) → (T ¬ (¬T))) → T)",
      "(¬T)"
    ],
    "conclusion": "(¬((L → (¬T)) → (T ¬ (¬T))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((¬T) → (Y ¬ (¬T))) → Y)",
      "((((¬Y) → (¬Y)) → (Y → (¬Y))) → ((Y → (¬Y)) → ((¬Y) ¬ Y)))",
      "(¬Y)"
    ],
    "conclusion": "(¬((¬T) → (Y ¬ (¬T))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬A)",
      "((¬J) → A)"
    ],
    "conclusion": "(¬(¬J))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((E → (¬E)) → (Y ¬ (¬E))) → Y)",
      "(¬Y)"
    ],
    "conclusion": "(¬((E → (¬E)) → (Y ¬ (¬E))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(((G ¬ G) ¬ ((¬G) ¬ V)) → V)",
      "((((¬G) → (¬V)) → (¬G)) ¬ (V → (V → V)))",
      "(¬V)"
    ],
    "conclusion": "(¬((G ¬ G) ¬ ((¬G) ¬ V)))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "((((¬B) → (¬Z)) → ((¬Z) ¬ (¬B))) → Z)",
      "(¬Z)",
      "((¬B) → (¬Z))"
    ],
    "conclusion": "(¬(((¬B) → (¬Z)) → ((¬Z) ¬ (¬B))))",
    "applied_rules": [
      "modus_tollens"
    ]
  },
  {
    "premises": [
      "(¬D)",
      "((D → D) → D)",
      "(((D → (¬B)) → ((¬B) ¬ (¬D))) → (((¬D) → (¬D)) ¬ ((¬D) ¬ (¬D))))"
    ],
    "conclusion": "(¬(D → D))",
    "applied_rules": [
      "modus_tollens"
    ]
  }
]